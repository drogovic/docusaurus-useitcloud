{
   "basePath":"/api",
   "definitions":{
   },
   "paths":{
      "/v2.0/agreement/":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "agreements":{
                           "items":{
                              "properties":{
                                 "services":{
                                    "items":{
                                       "properties":{
                                          "serviceid":{
                                             "type":"string"
                                          },
                                          "status":{
                                             "type":"string"
                                          }
                                       },
                                       "type":"object"
                                    },
                                    "type":"array"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all agreement deployments.",
            "tags":[
               "agreement"
            ]
         },
         "post":{
            "consumes":[
               "application/yaml"
            ],
            "parameters":[
               {
                  "description":"UIC blueprint/template",
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "description":"UIC blueprint/template"
                  }
               }
            ],
            "responses":{
               "202":{
                  "description":"Accepted",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        },
                        "scheduler_uuid":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an agreement deployment.",
            "tags":[
               "agreement"
            ]
         }
      },
      "/v2.0/agreement/{uuid}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"agreement uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"extra data",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "properties":{
                        "with_vm":{
                           "enum":[
                              true,
                              false
                           ],
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "action":{
                           "type":"string"
                        },
                        "result":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete agreement by uuid.",
            "tags":[
               "agreement"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"agreement uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "services":{
                           "items":{
                              "properties":{
                                 "serviceid":{
                                    "type":"string"
                                 },
                                 "status":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List agreement deployment by uuid.",
            "tags":[
               "agreement"
            ]
         }
      },
      "/v2.0/provider":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "default_region":{
                                    "type":"string"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "enabled":{
                                    "type":"boolean"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "provider":{
                                    "type":"string"
                                 },
                                 "provider_account_id":{
                                    "type":"string"
                                 },
                                 "region":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all provider's subscriptions.",
            "tags":[
               "provider/subscription"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "enum":[
                     "describeSubscriptions"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "filters":{
                           "items":{
                              "properties":{
                                 "name":{
                                    "type":"string"
                                 },
                                 "values":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "providers":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "default_region":{
                                    "type":"string"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "enabled":{
                                    "type":"boolean"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "provider":{
                                    "type":"string"
                                 },
                                 "provider_account_id":{
                                    "type":"string"
                                 },
                                 "region":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List provider's subscriptions with filters.",
            "tags":[
               "provider/subscription"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/account":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the principal billing account.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/budgets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Account id (ex. 360285727607)",
                  "in":"query",
                  "name":"account_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Budget name",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call. (1-100)",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of budgets.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Only one of BudgetLimit or PlannedBudgetLimits can be present in the syntax at one time.",
                     "properties":{
                        "account_id":{
                           "description":"opt account_id",
                           "type":"string"
                        },
                        "calculated_spend":{
                           "description":"optional dict The actual and forecasted cost or usage that the budget tracks to make comparaison",
                           "properties":{
                              "ActualSpend":{
                                 "description":"The amount of cost, usage, or RI units that you have used.",
                                 "properties":{
                                    "Amount":{
                                       "description":"The cost or usage amount that is associated with a budget forecast, actual spend, or budget threshold.",
                                       "type":"string"
                                    },
                                    "Unit":{
                                       "description":"The unit of measurement that is used for the budget forecast, actual spend, or budget threshold, such as dollars or GB.",
                                       "type":"string"
                                    }
                                 },
                                 "required":[
                                    "Amount",
                                    "Unit"
                                 ],
                                 "type":"object"
                              },
                              "ForecastedSpend":{
                                 "description":"The amount of cost, usage, or RI units that you are forecasted to use.",
                                 "properties":{
                                    "Amount":{
                                       "description":"The cost or usage amount that is associated with a budget forecast, actual spend, or budget threshold.",
                                       "type":"string"
                                    },
                                    "Unit":{
                                       "description":"The unit of measurement that is used for the budget forecast, actual spend, or budget threshold, such as dollars or GB.",
                                       "type":"string"
                                    }
                                 },
                                 "required":[
                                    "Amount",
                                    "Unit"
                                 ],
                                 "type":"object"
                              }
                           },
                           "required":[
                              "ActualSpend"
                           ],
                           "type":"object"
                        },
                        "cost_filters":{
                           "description":"The cost filters, such as service or tag, that are applied to a budget. Examples  \"AZ\":[ \"us-east-1\" ],  \"Service\":[\"Amazon Elastic Compute Cloud - Compute\"], \"LinkedAccount\":[\"accountid\"]",
                           "properties":{
                              "service":{
                                 "description":"the service as a key",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "tag":{
                                 "description":"a list a values",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              }
                           },
                           "type":"object"
                        },
                        "cost_types":{
                           "description":"The types of costs that are included in this COST budget",
                           "properties":{
                              "IncludeCredit":{
                                 "description":"Specifies whether a budget includes credits.",
                                 "type":"boolean"
                              },
                              "IncludeDiscount":{
                                 "description":"Specifies whether a budget includes discounts.",
                                 "type":"boolean"
                              },
                              "IncludeOtherSubscription":{
                                 "description":"Specifies whether a budget includes non-RI subscription costs.",
                                 "type":"boolean"
                              },
                              "IncludeRecurring":{
                                 "description":"Specifies whether a budget includes recurring fees such as monthly RI fees.",
                                 "type":"boolean"
                              },
                              "IncludeRefund":{
                                 "description":"Specifies whether a budget includes refunds.",
                                 "type":"boolean"
                              },
                              "IncludeSubscription":{
                                 "description":"Specifies whether a budget includes subscriptions.",
                                 "type":"boolean"
                              },
                              "IncludeSupport":{
                                 "description":"Specifies whether a budget includes support subscription fees.",
                                 "type":"boolean"
                              },
                              "IncludeTax":{
                                 "description":"Specifies whether a budget includes taxes.",
                                 "type":"boolean"
                              },
                              "IncludeUpfront":{
                                 "description":"Specifies whether a budget includes upfront RI costs.",
                                 "type":"boolean"
                              },
                              "UseAmortized":{
                                 "default":false,
                                 "description":"Specifies whether a budget uses the amortized rate.",
                                 "type":"boolean"
                              },
                              "UseBlended":{
                                 "default":false,
                                 "description":"Specifies whether a budget uses a blended rate.",
                                 "type":"boolean"
                              }
                           },
                           "type":"object"
                        },
                        "end_period":{
                           "description":"(mm/dd/yy HH:MM) The day the budget stops evaluating and/or alerting and becomes expired. optional if specified => Expiring Budget is enabled else Recurring Budget is enabled",
                           "type":"string"
                        },
                        "limit_amount":{
                           "description":"The cost or usage amount that is associated with a budget. it is required for  cost or usage budgets, but optional for RI or Savings Plans utilization or coverage budgets",
                           "type":"string"
                        },
                        "limit_amount_unit":{
                           "description":"The unit of measurement that is used for the budget (USD, GB...), it is required for  cost or usage budgets, but optional for RI or Savings Plans utilization or coverage budgets",
                           "type":"string"
                        },
                        "name":{
                           "description":"The name of a budget.",
                           "type":"string"
                        },
                        "notifications":{
                           "description":"A notification that you want to associate with a budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to 10 email subscribers. If you include notifications and subscribers in your CreateBudget call, AWS Create the notifications and subscribers for you.",
                           "items":{
                              "properties":{
                                 "comparison_operator":{
                                    "description":"The comparison that is used for this notification.",
                                    "enum":[
                                       "GREATER_THAN",
                                       "LESS_THAN",
                                       "EQUAL_TO"
                                    ],
                                    "type":"string"
                                 },
                                 "notification_state":{
                                    "description":"Whether this notification is in alarm. If a budget notification is in the ALARM status, you have passed the set threshold for the budget.",
                                    "enum":[
                                       "OK",
                                       "ALARM"
                                    ],
                                    "type":"string"
                                 },
                                 "notification_type":{
                                    "description":"Whether the notification is for how much you have spent (ACTUAL) or for how much you're forecasted to spend (FORECASTED).",
                                    "enum":[
                                       "ACTUAL",
                                       "FORECASTED"
                                    ],
                                    "type":"string"
                                 },
                                 "subscribers":{
                                    "description":"A list of subscribers who are subscribed to this notification.",
                                    "items":{
                                       "properties":{
                                          "address":{
                                             "description":"The address that AWS sends budget notifications to, either an SNS topic or an email.",
                                             "type":"string"
                                          },
                                          "subscription_type":{
                                             "description":"The type of notification that AWS sends to a subscriber.",
                                             "enum":[
                                                "SNS",
                                                "EMAIL"
                                             ],
                                             "type":"string"
                                          }
                                       },
                                       "required":[
                                          "subscription_type",
                                          "address"
                                       ],
                                       "type":"object"
                                    },
                                    "type":"array"
                                 },
                                 "threshold":{
                                    "description":"The threshold that is associated with a notification. Thresholds are always a percentage.",
                                    "type":"integer"
                                 },
                                 "threshold_type":{
                                    "description":"The type of threshold for a notification. For ABSOLUTE_VALUE thresholds, AWS notifies you when you go over or are forecasted to go over your total cost threshold. For PERCENTAGE thresholds, AWS notifies you when you go over or are forecasted to go over a certain percentage of your forecasted spend.",
                                    "enum":[
                                       "ABSOLUTE_VALUE",
                                       "PERCENTAGE"
                                    ],
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "notification_type",
                                 "comparison_operator",
                                 "threshold",
                                 "subscribers"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "period":{
                           "description":"required The time window analyzed by the budget. At the beginning of each new period the cost evaluated will start at zero.",
                           "enum":[
                              "DAILY",
                              "MONTHLY",
                              "QUARTERLY",
                              "ANNUALLY"
                           ],
                           "type":"string"
                        },
                        "planned_limits":{
                           "description":"It is available for cost or usage budget and supports monthly and quarterly only. if provided you can not use amount and amount_unit. the budget is not Fixed.",
                           "properties":{
                              "timestamp":{
                                 "description":"Timestamp as a key",
                                 "properties":{
                                    "Amount":{
                                       "description":null,
                                       "type":"string"
                                    },
                                    "Unit":{
                                       "description":null,
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "type":"object"
                        },
                        "start_period":{
                           "description":"(mm/dd/yy HH:MM) The first day of the first budget evaluation period. Subsequent evaluation periods will begin on the same day of the month moving forward.",
                           "type":"string"
                        },
                        "type":{
                           "description":"The category of the budget, whether the budget tracks cost or usage.",
                           "enum":[
                              "COST",
                              "USAGE",
                              "RI_UTILIZATION",
                              "RI_COVERAGE",
                              "SAVINGS_PLANS_UTILIZATION",
                              "SAVINGS_PLANS_COVERAGE"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "type",
                        "period",
                        "limit_amount",
                        "limit_amount_unit",
                        "notifications"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the budget.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/budgets/{name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Budget name",
                  "in":"path",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Account id (ex. 360285727607)",
                  "in":"query",
                  "name":"account_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a budget by name.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/cost/accounts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Day (ex. 09)",
                  "in":"query",
                  "name":"day",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Month (ex. 09)",
                  "in":"query",
                  "name":"month",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Year (ex. 2019)",
                  "in":"query",
                  "name":"year",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve billing accounts with charge amounts.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/cost/analysis":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "charge_type":{
                           "description":"filter on charge type",
                           "items":{
                              "enum":[
                                 "credit",
                                 "refund",
                                 "upfront",
                                 "tax",
                                 "support",
                                 "recurring",
                                 "discounted_usage",
                                 "upfront"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "cost_category":{
                           "description":"filter on cost category",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "end_date":{
                           "description":"the end date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "exclude_refund":{
                           "description":"exclude refunds",
                           "type":"boolean"
                        },
                        "filter":{
                           "description":"filters AWS costs by different dimensions",
                           "type":"object"
                        },
                        "granularity":{
                           "description":"the AWS cost granularity to MONTHLY or DAILY , or HOURLY",
                           "enum":[
                              "HOURLY",
                              "DAILY",
                              "MONTHLY"
                           ],
                           "type":"string"
                        },
                        "groupby":{
                           "description":"list of dimensions to group AWS costs. It is possible to use two different groups, either dimensions, tag keys, cost categories, or any two group by types",
                           "oneOf":[
                              {
                                 "enum":[
                                    "service",
                                    "linked_account",
                                    "usage_type",
                                    "tenancy",
                                    "purchase_type",
                                    "record_type",
                                    "instance_type_family",
                                    "instance_type",
                                    "lagacy_entity_name",
                                    "cost_category",
                                    "os",
                                    "platform",
                                    "region",
                                    "az",
                                    "operatoin"
                                 ],
                                 "type":"string"
                              },
                              {
                                 "items":{
                                    "type":"object"
                                 },
                                 "type":"array"
                              }
                           ]
                        },
                        "metrics":{
                           "description":"list of metrics are returned in the query, valid values are UNBLENDED_COST AMORTIZED_COST, BLENDED_COST, NET_AMORTIZED_COST, NET_UNBLENDED_COST , NORMALIZED_USAGE_AMOUNT, and USAGE_QUANTITY",
                           "items":{
                              "enum":[
                                 "UNBLENDED_COST",
                                 "BLENDED_COST",
                                 "AMORTIZED_COST",
                                 "NET_AMORTIZED_COST",
                                 "NET_UNBLENDED_COST",
                                 "NORMALIZED_USAGE_AMOUNT",
                                 "USAGE_QUANTITY"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "page_token":{
                           "description":"the token to retrieve the next set of results",
                           "type":"string"
                        },
                        "platform":{
                           "description":"filter on purchase type",
                           "items":{
                              "enum":[
                                 "noplatform",
                                 "linux_unix",
                                 "windows"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "purchase_type":{
                           "description":"filter on purchase type",
                           "items":{
                              "enum":[
                                 "ondemand",
                                 "reserved",
                                 "spot"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "regions":{
                           "description":"regions to filter",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "start_date":{
                           "description":"the start date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "tags":{
                           "description":"filter by tag, valid if filter is not used",
                           "type":"object"
                        },
                        "usage_type":{
                           "description":"filter on usage type",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "with_resources":{
                           "description":"add resources to the response",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve cost and usage analysis of the AWS ressources.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/cost/forecast":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "end_date":{
                           "description":"the end date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "exclude_refund":{
                           "description":"exclude refunds",
                           "type":"boolean"
                        },
                        "filter":{
                           "description":"filters AWS costs by different dimensions",
                           "type":"object"
                        },
                        "granularity":{
                           "description":"the AWS cost granularity to MONTHLY or DAILY , or HOURLY",
                           "type":"string"
                        },
                        "metric":{
                           "description":"metric to returned in the query, valid values are AmortizedCost , BlendedCost , NetAmortizedCost , NetUnblendedCost , NormalizedUsageAmount , UnblendedCost , and UsageQuantity",
                           "type":"string"
                        },
                        "page_token":{
                           "description":"the token to retrieve the next set of results",
                           "type":"string"
                        },
                        "regions":{
                           "description":"regions to filter",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "start_date":{
                           "description":"the start date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "tags":{
                           "description":"filter by tag, valid if filter is not used",
                           "type":"object"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve cost forecast.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/cost/report":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "1Y",
                     "MTD",
                     "YTD"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"how to group costs",
                  "enum":[
                     "linked_account",
                     "service",
                     "region",
                     "platform",
                     "instance_type",
                     "instance_type_family",
                     "os",
                     "lagacy_entity_name",
                     "database",
                     "usage_type",
                     "purchase_type",
                     "charge_type"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"accounts id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter by regions",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "type":"array"
               },
               {
                  "description":"filter on purchase type",
                  "in":"query",
                  "items":{
                     "enum":[
                        "ondemand",
                        "reserved",
                        "spot"
                     ],
                     "type":"string"
                  },
                  "name":"purchase_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter on purchase type",
                  "in":"query",
                  "items":{
                     "enum":[
                        "noplatform",
                        "linux_unix",
                        "windows"
                     ],
                     "type":"string"
                  },
                  "name":"platform",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"cost category to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"cost_category",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter on usage type",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"usage_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter on charge type",
                  "in":"query",
                  "items":{
                     "enum":[
                        "credit",
                        "refund",
                        "upfront",
                        "tax",
                        "support",
                        "recurring",
                        "discounted_usage",
                        "upfront"
                     ],
                     "type":"string"
                  },
                  "name":"charge_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter to get cost for only untagged resources",
                  "in":"query",
                  "name":"untagged",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"fees to exclude",
                  "in":"query",
                  "items":{
                     "enum":[
                        "credi",
                        "refund",
                        "upfront",
                        "tax",
                        "support"
                     ],
                     "type":"string"
                  },
                  "name":"exclude",
                  "type":"array"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "groupby_tags":{
                           "description":"group by tag key values",
                           "type":"object"
                        },
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a cost report summary.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/dimensions":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "context":{
                           "description":"The context for the call 'COST_AND_USAGE'|'RESERVATIONS'|'SAVINGS_PLANS'",
                           "type":"string"
                        },
                        "dimension":{
                           "description":"The name of the dimension 'AZ'|'INSTANCE_TYPE'|'LINKED_ACCOUNT'|'LINKED_ACCOUNT_NAME'|'OPERATION'|'PURCHASE_TYPE'|'REGION'|'SERVICE'|'SERVICE_CODE'| 'USAGE_TYPE'|'USAGE_TYPE_GROUP'|'RECORD_TYPE'|'OPERATING_SYSTEM'|'TENANCY'|'SCOPE'|'PLATFORM'|'SUBSCRIPTION_ID'|'LEGAL_ENTITY_NAME'|'DEPLOYMENT_OPTION'|'DATABASE_ENGINE'|'CACHE_ENGINE'|'INSTANCE_TYPE_FAMILY'|'BILLING_ENTITY'|'RESERVATION_ID'|'RESOURCE_ID'|'RIGHTSIZING_TYPE'|'SAVINGS_PLANS_TYPE'|'SAVINGS_PLAN_ARN'|'PAYMENT_OPTION'|'AGREEMENT_END_DATE_TIME_AFTER'|'AGREEMENT_END_DATE_TIME_BEFORE'",
                           "type":"string"
                        },
                        "end_date":{
                           "description":"the end date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "filter":{
                           "description":"filters AWS costs by different dimensions",
                           "type":"object"
                        },
                        "page_token":{
                           "description":"the token to retrieve the next set of results",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"the start date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve biling dimensions values.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Start date (ex. YYYY-MM-DD)",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"End date (ex. YYYY-MM-DD)",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get invoices.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/invoices/{invoice_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice Id (ex. 162035159)",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice Group id (ex. 151129101)",
                  "in":"query",
                  "name":"group_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get an invoice by Id.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/recommendations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the rightsizing type, idle to get instance to terminate and underutilized to get instances to modify",
                  "enum":[
                     "idle_instances",
                     "underused_instances",
                     "idle_disks",
                     "underused_disks",
                     "unused_images",
                     "too_old_snapshots",
                     "unassigned_reserved_ips",
                     "underused_rds",
                     "unused_launch_configurations",
                     "unused_internet_gateways",
                     "unused_egress_only_internet_gateways",
                     "unused_vpn_gateways",
                     "unused_nat_gateways",
                     "unused_classic_elb",
                     "s3_buckets",
                     "s3_buckets_optimization"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the option to see recommendations within the same instance family or recommendations for instances across other families, valide only for idle_instance or underutilized_instance",
                  "enum":[
                     "same_instance_family",
                     "cross_instance_family"
                  ],
                  "in":"query",
                  "name":"target",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"the option to consider RI or Savings Plans discount benefits in your savings calculation. The default value is true, valide only for idle_instance or underutilized_instance.",
                  "in":"query",
                  "name":"benefits_considered",
                  "required":false,
                  "type":"Boolean"
               },
               {
                  "description":"filter by account_id, valide only for idle_instance or underutilized_instance",
                  "in":"query",
                  "name":"account_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the theshould to use, valide only for underused_volume (default is 1), underused_instance (default is 20) and underused_rds (default is 1)",
                  "in":"query",
                  "name":"monitoring_threshould",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"the n-day time frame, valide only for underused_volume and too_old_snapshot, default is 7",
                  "in":"query",
                  "name":"days_period",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"filter by regions, valide only for idle_volume, underused_volume, unused_image, too_old_snapshot, underused_instances, unused_nat_gateway, idle_instances, unassigned_reserved_ips, unused_launch_configuration, unused_internet_gateway, unused_egress_only_internet_gateway, unused_vpn_gateway, unused_classic_elb",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve recommendations.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/reservation/coverage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs, if provided start_date and end_date are ignore",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "1Y",
                     "MTD",
                     "YTD"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"If groupby is set, granularity can't be set. If granularity isn't set, the response object doesn't include granularity , either MONTHLY or DAILY . If both groupby and granularity aren't set, defaults to DAILY.",
                  "enum":[
                     "DAILY",
                     "MONTHLY"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"groupby value",
                  "enum":[
                     "az",
                     "database",
                     "linked_account",
                     "instance_type",
                     "platform",
                     "os",
                     "region"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the order that's used to sort the data",
                  "enum":[
                     "OnDemandCost_ASCENDING",
                     "OnDemandCost_DESCENDING",
                     "CoverageHoursPercentage_ASCENDING",
                     "CoverageHoursPercentage_DESCENDING",
                     "OnDemandHours_ASCENDING",
                     "OnDemandHours_DESCENDING",
                     "ReservedHours_ASCENDING",
                     "ReservedHours_DESCENDING",
                     "TotalRunningHours_ASCENDING",
                     "TotalRunningHours_DESCENDING",
                     "CoverageNormalizedUnitsPercentage_ASCENDING",
                     "CoverageNormalizedUnitsPercentage_DESCENDING",
                     "OnDemandNormalizedUnits_ASCENDING",
                     "OnDemandNormalizedUnits_DESCENDING",
                     "ReservedNormalizedUnits_ASCENDING",
                     "ReservedNormalizedUnits_DESCENDING",
                     "TotalRunningNormalizedUnits_ASCENDING",
                     "TotalRunningNormalizedUnits_DESCENDING",
                     "Time_ASCENDING",
                     "Time_DESCENDING"
                  ],
                  "in":"query",
                  "name":"sorted_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the measurement that you want your reservation coverage reported in",
                  "in":"query",
                  "items":{
                     "enum":[
                        "Hour",
                        "Unit",
                        "Cost"
                     ],
                     "type":"string"
                  },
                  "name":"metric",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"services names to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "ec2",
                        "rds",
                        "elasticache",
                        "redshift",
                        "openSearch",
                        "elasticsearch"
                     ],
                     "type":"string"
                  },
                  "name":"service",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"regions to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"instances types to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"instances type family to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_type_family",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"platforms to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "noplatform",
                        "linux_unix",
                        "windows"
                     ],
                     "type":"string"
                  },
                  "name":"platform",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"accounts id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves the reservationusage coverage.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/reservation/estimatedsaving":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the specific service that you want recommendations for",
                  "enum":[
                     "rds",
                     "ec2",
                     "elasticache",
                     "redshift",
                     "opensearch"
                  ],
                  "in":"query",
                  "name":"service",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the account scope that you want your recommendations for",
                  "enum":[
                     "PAYER",
                     "LINKED"
                  ],
                  "in":"query",
                  "name":"account_scope",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the number of previous days that you want Amazon Web Services to consider when it calculates your recommendations.",
                  "enum":[
                     "7D",
                     "30D",
                     "60D"
                  ],
                  "in":"query",
                  "name":"back_period",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The reservation term that you want recommendations for.",
                  "enum":[
                     "1Y",
                     "3Y"
                  ],
                  "in":"query",
                  "name":"term",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"he reservation purchase option that you want recommendations for.",
                  "enum":[
                     "NO_UPFRONT",
                     "PARTIAL_UPFRONT",
                     "ALL_UPFRONT",
                     "LIGHT_UTILIZATION",
                     "MEDIUM_UTILIZATION",
                     "HEAVY_UTILIZATION"
                  ],
                  "in":"query",
                  "name":"payment",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the Amazon EC2 hardware specifications that you want Amazon Web Services to provide recommendations for.",
                  "enum":[
                     "STANDARD",
                     "CONVERTIBLE"
                  ],
                  "in":"query",
                  "name":"ec2_offering_class",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the aws regions filter",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the aws linked account filter",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the rightsizing type, idle to get instance to terminate and underutilized to get instances to modify",
                  "in":"query",
                  "items":{
                     "enum":[
                        "idle",
                        "underutilized"
                     ],
                     "type":"string"
                  },
                  "name":"rightsizing_type",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Gets recommendations for which reservations to purchase to maximize your estimated savings.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/reservation/usage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs, if provided start_date and end_date are ignore",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "1Y",
                     "MTD",
                     "YTD"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"If groupby is set, granularity can't be set. If granularity isn't set, the response object doesn't include granularity , either MONTHLY or DAILY . If both groupby and granularity aren't set, defaults to DAILY.",
                  "enum":[
                     "DAILY",
                     "MONTHLY"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"groupby value",
                  "enum":[
                     "subscription_id"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the order that's used to sort the dat",
                  "enum":[
                     "ASCENDING",
                     "DESCENDING"
                  ],
                  "in":"query",
                  "name":"sorted_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"services names to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "ec2",
                        "rds",
                        "elasticache",
                        "redshift",
                        "openSearch",
                        "elasticsearch"
                     ],
                     "type":"string"
                  },
                  "name":"service",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"regions to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"instances types to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"platforms to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "noplatform",
                        "linux_unix",
                        "windows"
                     ],
                     "type":"string"
                  },
                  "name":"platform",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"accounts id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves the reservation (reserved instances) utilization for your account.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/savingplan/coverage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs, if provided start_date and end_date are ignore",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "1Y",
                     "MTD",
                     "YTD"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The granularity of the Amazon Web Services cost data for your savings plans, granularity can't be set if groupby is set.",
                  "enum":[
                     "DAILY",
                     "MONTHLY"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"groupby value",
                  "in":"query",
                  "items":{
                     "enum":[
                        "service",
                        "region",
                        "instance_type_family"
                     ],
                     "type":"string"
                  },
                  "name":"groupby",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"services names to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"service",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"regions to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"instances type family to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_type_family",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"accounts id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "filter":{
                           "description":"filters",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves the saving plan coverage.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/savingplan/estimatedsaving":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the savings plans recommendation type requested",
                  "enum":[
                     "COMPUTE_SP",
                     "EC2_INSTANCE_SP",
                     "SAGEMAKER_SP"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the account scope that you want your recommendations for",
                  "enum":[
                     "PAYER",
                     "LINKED"
                  ],
                  "in":"query",
                  "name":"account_scope",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the number of previous days that you want Amazon Web Services to consider when it calculates your recommendations.",
                  "enum":[
                     "7D",
                     "30D",
                     "60D"
                  ],
                  "in":"query",
                  "name":"back_period",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The reservation term that you want recommendations for.",
                  "enum":[
                     "1Y",
                     "3Y"
                  ],
                  "in":"query",
                  "name":"term",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"he reservation purchase option that you want recommendations for.",
                  "enum":[
                     "NO_UPFRONT",
                     "PARTIAL_UPFRONT",
                     "ALL_UPFRONT",
                     "LIGHT_UTILIZATION",
                     "MEDIUM_UTILIZATION",
                     "HEAVY_UTILIZATION"
                  ],
                  "in":"query",
                  "name":"payment",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the aws regions filter",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"region",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the aws linked account filter",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the rightsizing type, idle to get instance to terminate and underutilized to get instances to modify",
                  "in":"query",
                  "items":{
                     "enum":[
                        "idle",
                        "underutilized"
                     ],
                     "type":"string"
                  },
                  "name":"rightsizing_type",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Gets recommendations for which saving plan to purchase to maximize your estimated savings.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/savingplan/usage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs, if provided start_date and end_date are ignore",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "1Y",
                     "MTD",
                     "YTD"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the granularity of the AWS utillization data for your savings plans",
                  "enum":[
                     "DAILY",
                     "MONTHLY"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the order that's used to sort the dat",
                  "enum":[
                     "ASCENDING",
                     "DESCENDING"
                  ],
                  "in":"query",
                  "name":"sorted_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"regions to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"regions",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"saving plan arn to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"saving_palan_arn",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"saving plan type to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "COMPUTE_SP",
                        "EC2_INSTANCE_SP",
                        "SAGEMAKER_SP"
                     ],
                     "type":"string"
                  },
                  "name":"saving_plan_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"accounts id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"payment option to filter on",
                  "in":"query",
                  "items":{
                     "enum":[
                        "NO_UPFRONT",
                        "PARTIAL_UPFRONT",
                        "ALL_UPFRONT",
                        "LIGHT_UTILIZATION",
                        "MEDIUM_UTILIZATION",
                        "HEAVY_UTILIZATION"
                     ],
                     "type":"string"
                  },
                  "name":"payment_option",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"instance type family to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_type_family",
                  "required":false,
                  "type":"array"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves the saving paln utilization for your account.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/tags":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "account_id":{
                           "description":"The account_id to filter",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "all":{
                           "description":"Get all tags with values",
                           "type":"boolean"
                        },
                        "end_date":{
                           "description":"the end date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "filter":{
                           "description":"filters expression",
                           "type":"object"
                        },
                        "page_token":{
                           "description":"the token to retrieve the next set of results",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"the start date for retrieving AWS costs (ex. 2019-09-01)",
                           "type":"string"
                        },
                        "tag_key":{
                           "description":"The key of the tag that you want to return values for",
                           "type":"string"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve biling tags.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/usage":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Month (ex. 09)",
                  "in":"query",
                  "name":"month",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Year (ex. 2019)",
                  "in":"query",
                  "name":"year",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Format (csv, None)",
                  "in":"query",
                  "name":"format",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve billing usages of the AWS ressources.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/billing/usage/{account_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing AccountId",
                  "in":"path",
                  "name":"account_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Month (ex. 09)",
                  "in":"query",
                  "name":"month",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Year (ex. 2019)",
                  "in":"query",
                  "name":"year",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Billing Format (csv)",
                  "enum":[
                     "csv"
                  ],
                  "in":"query",
                  "name":"format",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve billing usages of the AWS ressources by account id.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/global/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of regions.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/global/roles":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of roles.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/organization/accounts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve all the accounts in the organization.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/alarms":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Alarm Name Prefix",
                  "in":"query",
                  "name":"alarm_name_prefix",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"State Value",
                  "enum":[
                     "OK",
                     "ALARM",
                     "INSUFFICIENT_DATA"
                  ],
                  "in":"query",
                  "name":"state_value",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Action Prefix",
                  "in":"query",
                  "name":"action_prefix",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of alarms.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "actions_enabled":{
                           "default":true,
                           "description":"Indicates whether actions should be executed during any changes to the alarm state. True/False",
                           "type":"boolean"
                        },
                        "alarm_actions":{
                           "description":"The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN). (arn:aws:automate:*region* :ec2:terminate)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "alarm_description":{
                           "description":"The description for the alarm.",
                           "type":"string"
                        },
                        "comparison_operator":{
                           "description":"The arithmetic operation to use when comparing the specified statistic and threshold. Allowed Values= GreaterThanOrEqualToThreshold | GreaterThanThreshold | LessThanOrEqualToThreshold | LessThanThreshold.",
                           "type":"string"
                        },
                        "dimensions":{
                           "description":"The dimensions for the metric specified in MetricName . {Name:Value}",
                           "items":{
                              "properties":{
                                 "Name":{
                                    "type":"string"
                                 },
                                 "Value":{
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "Name",
                                 "Value"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "evaluation_periods":{
                           "description":"The number of periods over which data is compared to the specified threshold. (ex. 2)",
                           "type":"string"
                        },
                        "extended_statistic":{
                           "description":"The percentile statistic for the metric specified in MetricName. Specify a value between p0.0 and p100.",
                           "type":"string"
                        },
                        "insufficient_data_actions":{
                           "description":"The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).(arn:aws:automate:*region* :ec2:recover)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "metric_name":{
                           "description":"The name for the metric associated with the alarm. (ex. CPUUtilization)",
                           "type":"string"
                        },
                        "name":{
                           "description":"The name for the alarm. This name must be unique within your AWS account.",
                           "type":"string"
                        },
                        "name_space":{
                           "description":"The namespace for the metric associated specified in MetricName. Convention AWS/service (ex. AWS/EC2)",
                           "type":"string"
                        },
                        "ok_actions":{
                           "description":"The actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN). (arn:aws:automate:*region* :ec2:stop)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "period":{
                           "description":"The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60. (ex. 120)",
                           "type":"string"
                        },
                        "statistic":{
                           "description":"The statistic for the metric specified in MetricName. Allowed Values= Average | Maximum | Minimum | SampleCount | Sum",
                           "type":"string"
                        },
                        "threshold":{
                           "description":"The value against which the specified statistic is compared. (ex. 80)",
                           "type":"string"
                        },
                        "unit":{
                           "description":"The unit of measure for the statistic. Allowed Values= Bits | Bits/Second | Bytes | Bytes/Second | Count | Count/Second | Gigabits | Gigabits/Second | Gigabytes | Gigabytes/Second | Kilobits | Kilobits/Second | Kilobytes | Kilobytes/Second | Megabits | Megabits/Second | Megabytes | Megabytes/Second | Microseconds | Milliseconds | None | Percent | Seconds | Terabits | Terabits/Second | Terabytes | Terabytes/Second",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "evaluation_periods",
                        "threshold",
                        "comparison_operator"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create or updates an alarm and associates it with the specified metric or metric math expression.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/alarms/{alarm_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Alarm name",
                  "in":"path",
                  "name":"alarm_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of alarms.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "asg_name":{
                           "description":"The name of the Auto Scaling group.",
                           "type":"string"
                        },
                        "default_cooldown":{
                           "description":"default cooldown",
                           "example":300,
                           "type":"integer"
                        },
                        "desired_capacity":{
                           "description":"desired capacity",
                           "example":2,
                           "type":"integer"
                        },
                        "elb":{
                           "description":"Classic load balancers if health check ELB",
                           "type":"string"
                        },
                        "health_check_grace_period":{
                           "description":"health check grace period",
                           "example":300,
                           "type":"integer"
                        },
                        "health_check_type":{
                           "default":"EC2",
                           "description":"health check type",
                           "enum":[
                              null,
                              "EC2",
                              "ELB"
                           ],
                           "type":"string"
                        },
                        "lc_name":{
                           "description":"launch configuration name",
                           "type":"string"
                        },
                        "max_size":{
                           "description":"max size",
                           "example":2,
                           "type":"integer"
                        },
                        "min_size":{
                           "description":"min size",
                           "example":1,
                           "type":"integer"
                        },
                        "placement_group":{
                           "description":"placement group",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"subnet id (ex. subnet-06ae8766e71988812)",
                           "type":"string"
                        },
                        "tags":{
                           "description":"tags \"{\"key1\":\"val1\"}\"",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "target_group":{
                           "description":"target group",
                           "type":"string"
                        }
                     },
                     "required":[
                        "asg_name",
                        "lc_name",
                        "subnet_id",
                        "min_size",
                        "max_size",
                        "health_check_type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an ASG (Auto Scaling Group) with the specified name and attributes.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/adjustmenttypes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ASG adjustment types.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ASG instances.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/notificationtypes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ASG notification types.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/policy":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "adjustment_type":{
                           "description":"The adjustment type. This parameter is supported if the policy type is SimpleScaling or StepScaling.",
                           "enum":[
                              "ChangeInCapacity",
                              "ExactCapacity",
                              "PercentChangeInCapacity"
                           ],
                           "type":"string"
                        },
                        "asg_name":{
                           "description":"The name of the Auto Scaling group.",
                           "type":"string"
                        },
                        "cooldown":{
                           "default":300,
                           "description":"The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. This parameter is supported if the policy type is SimpleScaling .",
                           "type":"integer"
                        },
                        "estimated_instance_warmup":{
                           "default":300,
                           "description":"The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This parameter is supported if the policy type is StepScaling or TargetTrackingScaling",
                           "type":"integer"
                        },
                        "metric_aggregation_type":{
                           "default":"Average",
                           "description":"The aggregation type for the CloudWatch metrics. This parameter is supported if the policy type is StepScaling .",
                           "enum":[
                              "Average",
                              "Minimum",
                              "Maximum"
                           ],
                           "type":"string"
                        },
                        "min_adjustment_magnitude":{
                           "default":1,
                           "description":"The minimum number of instances to scale. This parameter is supported if the policy type is SimpleScaling or StepScaling",
                           "type":"integer"
                        },
                        "min_adjustment_step":{
                           "default":1,
                           "description":"Available for backward compatibility. Use MinAdjustmentMagnitude instead. This parameter is supported if the policy type is SimpleScaling or StepScaling .",
                           "type":"integer"
                        },
                        "policy_name":{
                           "description":"The name of the policy.",
                           "type":"string"
                        },
                        "policy_type":{
                           "default":"SimpleScaling",
                           "description":"The policy type.",
                           "enum":[
                              "SimpleScaling",
                              "StepScaling",
                              "TargetTrackingScaling"
                           ],
                           "type":"string"
                        },
                        "scaling_adjustment":{
                           "default":1,
                           "description":"The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. This parameter is required if the policy type is SimpleScaling.",
                           "type":"integer"
                        },
                        "step_adjustment":{
                           "description":"A set of adjustments that enable you to scale based on the size of the alarm breach. This parameter is required if the policy type is StepScaling. Set as  MetricIntervalLowerBound; MetricIntervalUpperBound; ScalingAdjustment  (ex, 123;123;123)",
                           "items":{
                              "properties":{
                                 "MetricIntervalLowerBound":{
                                    "type":"integer"
                                 },
                                 "MetricIntervalUpperBound":{
                                    "type":"integer"
                                 },
                                 "ScalingAdjustment":{
                                    "type":"integer"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "asg_name",
                        "policy_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create or updates a policy for an Application Auto Scaling scalable target.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/terminationpolicytypes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ASG termination policy types.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the SG",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"force delete",
                  "in":"query",
                  "name":"force_delete",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "description":"The new settings take effect on any scaling activities after this call returns. <br/>Scaling activities that are currently in progress aren't affected.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "AvailabilityZones":{
                           "description":"One or more Availability Zones for the group.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "DefaultCooldown":{
                           "description":"The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is 300 .",
                           "type":"integer"
                        },
                        "DesiredCapacity":{
                           "description":"The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.",
                           "in":"query",
                           "type":"integer"
                        },
                        "HealthCheckGracePeriod":{
                           "description":"The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is 0 .",
                           "in":"query",
                           "type":"integer"
                        },
                        "HealthCheckType":{
                           "description":"The service to use for the health checks. The valid values are EC2 and ELB . If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.",
                           "type":"string"
                        },
                        "LaunchConfigurationName":{
                           "description":"The name of the launch configuration. If you specify this parameter, you can't specify a launch template or a mixed instances policy.",
                           "in":"query",
                           "type":"string"
                        },
                        "MaxSize":{
                           "description":"The maximum size of the Auto Scaling group.",
                           "type":"integer"
                        },
                        "MinSize":{
                           "description":"The minimum size of the Auto Scaling group.",
                           "type":"integer"
                        },
                        "NewInstancesProtectedFromScaleIn":{
                           "default":false,
                           "description":"Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in",
                           "type":"boolean"
                        },
                        "PlacementGroup":{
                           "description":"The name of the placement group into which to launch your instances, if any.",
                           "type":"string"
                        },
                        "SubnetId":{
                           "description":"Subnet Id (ex. subnet-06ae8766e71988812)",
                           "type":"string"
                        },
                        "TerminationPolicies":{
                           "description":"A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the configuration for the specified ASG (Auto Scaling Group). ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/activities":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error.",
                  "example":[
                     null
                  ],
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"ActivityIds",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more scaling activities for the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/capacity":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "DesiredCapacity":{
                           "description":"The number of EC2 instances that should be running in the Auto Scaling group.",
                           "type":"string"
                        },
                        "HonorCooldown":{
                           "default":false,
                           "description":"Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity.",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "DesiredCapacity"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the size of the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/elbs":{
         "get":{
            "description":"This operation Describe only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use DescribeLoadBalancerTargetGroups instead.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the load balancers for the specified ASG (Auto Scaling Group). ",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "LoadBalancerNames":{
                           "description":"You can specify up to 10 load balancers",
                           "example":[
                              "elb1",
                              "elb2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "asg_name":{
                           "description":"The name of the Auto Scaling group.",
                           "type":"string"
                        },
                        "method":{
                           "default":"attach_load_balancers",
                           "enum":[
                              "attach_load_balancers"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "asg_name",
                        "method"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attaches/Detaches one or more Classic Load Balancers to the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/elbs/targetgroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the target groups for the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "TargetGroupARNs":{
                           "description":"The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups.",
                           "example":[
                              "arn1",
                              "arn2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "TargetGroupARNs"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attaches one or more target groups to the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/instances":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Modifies the instance protection settings of the specified instancesUpdates the instance protection settings of the specified instances<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "setprotection"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstanceIds":{
                           "description":"(attach, detach) The IDs of the instances. You can specify up to 20 instances.",
                           "example":[
                              "instanceid1",
                              "instanceid2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "ProtectedFromScaleIn":{
                           "default":false,
                           "description":"Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.",
                           "type":"boolean"
                        },
                        "ShouldDecrementDesiredCapacity":{
                           "default":false,
                           "description":"(detach) Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached.",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "InstanceIds",
                        "ShouldDecrementDesiredCapacity"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attach/Detach one or more instances from the specified ASG (Auto Scaling Group). ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/lifecycle":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstanceId":{
                           "description":"The ID of the instance.",
                           "type":"string"
                        },
                        "LifecycleActionResult":{
                           "default":"CONTINUE",
                           "description":"The action for the group to take. This parameter can be either CONTINUE or ABANDON",
                           "enum":[
                              "CONTINUE",
                              "ABANDON"
                           ]
                        },
                        "LifecycleActionToken":{
                           "description":"A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.",
                           "type":"string"
                        },
                        "LifecycleHookName":{
                           "description":"The name of the lifecycle hook.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "LifecycleHookName",
                        "LifecycleActionResult"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Completes the lifecycle action for the specified token or instance with the specified result.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/lifecyclehooks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.",
                  "example":[
                     null
                  ],
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"LifecycleHookNames",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the lifecycle hooks for the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "DefaultResult":{
                           "default":"ABANDON",
                           "description":"Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either CONTINUE or ABANDON . The default value is ABANDON",
                           "enum":[
                              "ABANDON",
                              "CONTINUE"
                           ],
                           "type":"string"
                        },
                        "HeartbeatTimeout":{
                           "description":"The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour).",
                           "example":3600,
                           "type":"integer"
                        },
                        "LifecycleHookName":{
                           "description":"The name of the lifecycle hook.",
                           "type":"string"
                        },
                        "LifecycleTransition":{
                           "default":"autoscaling:EC2_INSTANCE_LAUNCHING",
                           "description":"The instance state to which you want to attach the lifecycle hook.",
                           "enum":[
                              "autoscaling:EC2_INSTANCE_LAUNCHING",
                              "autoscaling:EC2_INSTANCE_TERMINATING"
                           ],
                           "type":"string"
                        },
                        "NotificationMetadata":{
                           "description":"Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.",
                           "type":"string"
                        },
                        "NotificationTargetARN":{
                           "description":"The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.",
                           "type":"string"
                        },
                        "RoleARN":{
                           "description":"The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "LifecycleHookName",
                        "LifecycleTransition"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create or updates a lifecycle hook for the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/lifecyclehooks/{lifecyclehook_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the lifecycle hook.",
                  "in":"path",
                  "name":"lifecyclehook_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an ASG (Auto Scaling Group) lifecycle hook.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/lifecyclehooks/{lshook_name}/heartbeat":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the lifecycle hook.",
                  "in":"path",
                  "name":"lshook_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstanceId":{
                           "description":"The ID of the instance.",
                           "type":"string"
                        },
                        "LifecycleActionToken":{
                           "description":"A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Records a heartbeat for the lifecycle action associated with the specified token or instance.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/metrics":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Granularity":{
                           "default":"1Minute",
                           "description":"(enable required) The granularity to associate with the metrics to collect. The only valid value is 1Minute .",
                           "type":"string"
                        },
                        "Metrics":{
                           "description":"(disable required) One or more of the following metrics. If you omit this parameter, all metrics are disabled.",
                           "example":[
                              "GroupMinSize",
                              "GroupMaxSize",
                              "GroupDesiredCapacity",
                              "GroupInServiceInstances",
                              "GroupPendingInstances",
                              "GroupStandbyInstances",
                              "GroupTerminatingInstances",
                              "GroupTotalInstances"
                           ],
                           "in":"query",
                           "items":{
                              "type":"string"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "required":[
                        "Metrics"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enables/Disables a group of metrics for the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/notification":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the notification actions associated with the specified ASG (Auto Scaling Group).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.<br/>This configuration overwrites any existing configuration.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "NotificationTypes":{
                           "description":"The type of event that causes the notification to be sent.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "TopicARN":{
                           "description":"The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic",
                           "type":"string"
                        }
                     },
                     "required":[
                        "TopicARN",
                        "NotificationTypes"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Configures an ASG (Auto Scaling Group) to send notifications when specified events take place. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/notification/{topic_arn}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.",
                  "in":"path",
                  "name":"topic_arn",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a ASG (Auto Scaling Group) notification configurations.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/policy":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the policies for the specified ASG (Auto Scaling group).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/policy/{policy_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"policy name",
                  "in":"path",
                  "name":"policy_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a ASG (Auto Scaling Group) policy.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name or ARN of the policy.",
                  "in":"path",
                  "name":"policy_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "BreachThreshold":{
                           "description":"The breach threshold for the alarm. Required if the policy type is StepScaling",
                           "type":"number"
                        },
                        "HonorCooldown":{
                           "default":false,
                           "description":"Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.This parameter is not supported if the policy type is StepScaling .",
                           "type":"boolean"
                        },
                        "MetricValue":{
                           "description":"The metric value to compare to BreachThreshold. Required if the policy type is StepScaling",
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Executes the specified policy.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/processes":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"If you suspend either the Launch or Terminate process types, it can prevent other process types from functioning properly.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "suspend",
                     "resume"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "ScalingProcesses":{
                           "description":"One or more of the following processes. If you omit this parameter, all processes are specified.",
                           "example":[
                              "Launch",
                              "Terminate",
                              "HealthCheck",
                              "ReplaceUnhealthy",
                              "AZRebalance",
                              "AlarmNotification",
                              "ScheduledActions",
                              "AddToLoadBalancer"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Suspends/Resumes the specified automatic scaling processes, or all processes, for the specified ASG (Auto Scaling Group). ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/scheduledactions":{
         "get":{
            "description":"To describe the actions that have already run, use Describe Scaling Activities .<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.",
                  "example":[
                     null
                  ],
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"ScheduledActionNames",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"yyyymmdd. The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.",
                  "in":"query",
                  "name":"StartTime",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"yyyymmdd. The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.",
                  "in":"query",
                  "name":"EndTime",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the actions scheduled for your ASG (Auto Scaling Group) that haven't run. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/scheduledactions/{scheduledaction_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the action to delete.",
                  "in":"path",
                  "name":"scheduledaction_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an ASG scheduled actions.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/standby":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "enter",
                     "exit"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstanceIds":{
                           "description":"(enter, exit) The IDs of the instances. You can specify up to 20 instances.",
                           "example":[
                              "instanceid1",
                              "instanceid2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "ShouldDecrementDesiredCapacity":{
                           "default":false,
                           "description":"(enter) Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to Standby mode.",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "InstanceIds",
                        "ShouldDecrementDesiredCapacity"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Moves the specified instances into the standby status, up to 20 instances.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/asgs/{asg_name}/tags":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the Auto Scaling group.",
                  "in":"path",
                  "name":"asg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "tags":{
                           "items":{
                              "properties":{
                                 "Key":{
                                    "description":"The tag key.",
                                    "type":"string"
                                 },
                                 "PropagateAtLaunch":{
                                    "description":"Determines whether the tag is added to new instances as they are launched in the group.",
                                    "type":"boolean"
                                 },
                                 "Value":{
                                    "description":"The tag value.",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "Key",
                                 "Value",
                                 "PropagateAtLaunch"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "tags"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create or updates tags for the specified ASG (Auto Scaling Group). ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/availabilityzones":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of avzones.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ELBs (Elastic Load Balancer).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzones":{
                           "description":"One or more Availability Zones from the same region as the load balancer. Either AvailabilityZones or SubnetIds must be specified",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "connection_draining":{
                           "default":false,
                           "description":null,
                           "type":"boolean"
                        },
                        "connection_draining_timeout":{
                           "default":300,
                           "description":null,
                           "example":300,
                           "type":"integer"
                        },
                        "cookie_stickiness":{
                           "description":"cookie stickiness",
                           "properties":{
                              "CookieExpirationPeriod":{
                                 "description":300,
                                 "type":"integer"
                              },
                              "CookieName":{
                                 "description":null,
                                 "type":"string"
                              },
                              "PolicyName":{
                                 "description":null,
                                 "type":"string"
                              },
                              "Type":{
                                 "description":"elb | application",
                                 "type":"string"
                              }
                           },
                           "required":[
                              null
                           ],
                           "type":"object"
                        },
                        "cross_zone":{
                           "default":false,
                           "description":null,
                           "type":"boolean"
                        },
                        "health_check":{
                           "items":{
                              "description":"health check (possible one health check)",
                              "properties":{
                                 "healthy_threshold":{
                                    "description":10,
                                    "type":"integer"
                                 },
                                 "interval":{
                                    "description":30,
                                    "type":"integer"
                                 },
                                 "port":{
                                    "description":"EC2-VPC=1-65535, EC2-Classic=25, 80, 443, 465, 587",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"/index.html",
                                    "type":"string"
                                 },
                                 "timeout":{
                                    "description":5,
                                    "type":"integer"
                                 },
                                 "unhealthy_threshold":{
                                    "description":2,
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 null
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "idle_timeout":{
                           "default":400,
                           "description":null,
                           "example":400,
                           "type":"integer"
                        },
                        "instances":{
                           "description":"Instances id list of dicts",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "items":{
                              "properties":{
                                 "instance_port":{
                                    "description":"The port on which the instance is listening",
                                    "type":"integer"
                                 },
                                 "instance_protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "lb_port":{
                                    "description":"EC2-VPC=1-65535, EC2-Classic=25, 80, 443, 465, 587",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "ssl_certificate_id":{
                                    "description":"The Amazon Resource Name (ARN) of the server certificate",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "lb_port",
                                 "instance_protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"The name of the load balancer.",
                           "type":"string"
                        },
                        "security_groups":{
                           "description":"The IDs of the security groups to assign to the load balancer.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnets":{
                           "description":"The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in AvailabilityZones . Either AvailabilityZones or SubnetIds must be specified",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"A list of tags to assign to the load balancer.  {\"Key\":\"key1\",\"Value\":\"value1\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "default":"internet-facing",
                           "description":null,
                           "enum":[
                              "internet-facing",
                              "internal"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "listeners"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Classic Load Balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Classic Load Balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/attributes":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the attributes for the specified load balancer.",
            "tags":[
               "provider/aws"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "AccessLog":{
                           "properties":{
                              "EmitInterval":{
                                 "default":60,
                                 "description":"The interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.",
                                 "type":"integer"
                              },
                              "Enabled":{
                                 "default":false,
                                 "description":"If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.",
                                 "type":"boolean"
                              },
                              "S3BucketName":{
                                 "description":"The name of the Amazon S3 bucket where the access logs are stored.",
                                 "type":"string"
                              },
                              "S3BucketPrefix":{
                                 "description":"The logical hierarchy you created for your Amazon S3 bucket, for example my-bucket-prefix/prod. If the prefix is not provided, the log is placed at the root level of the bucket.",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "Enabled"
                           ],
                           "type":"object"
                        },
                        "ConnectionDraining":{
                           "properties":{
                              "Enabled":{
                                 "default":false,
                                 "description":"If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.",
                                 "type":"boolean"
                              },
                              "Timeout":{
                                 "description":"The maximum time, in seconds, to keep the existing connections open before deregistering the instances.",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "Enabled"
                           ],
                           "type":"object"
                        },
                        "ConnectionSettings":{
                           "properties":{
                              "IdleTimeout":{
                                 "default":60,
                                 "description":"If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "IdleTimeout"
                           ],
                           "type":"object"
                        },
                        "CrossZoneLoadBalancing":{
                           "properties":{
                              "Enabled":{
                                 "default":false,
                                 "description":"If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.",
                                 "type":"boolean"
                              }
                           },
                           "required":[
                              "Enabled"
                           ],
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the specified attributes of the specified Application Load Balancer or Network Load Balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/availabilityzones":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"For load balancers in a non-default VPC, use AttachLoadBalancerToSubnets .<br/>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC. <br/>For load balancers in a non-default VPC, use DetachLoadBalancerFromSubnets.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "AvailabilityZones":{
                           "description":"The Availability Zones. These must be in the same region as the load balancer.",
                           "example":[
                              "az1",
                              "az2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "AvailabilityZones"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/backendserver/policies":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstancePort":{
                           "description":"The port number associated with the EC2 instance",
                           "type":"integer"
                        },
                        "PolicyNames":{
                           "description":"The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "InstancePort",
                        "PolicyNames"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/cookies/stickenesspolicy":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"This policy can be associated only with HTTP/HTTPS listeners.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cookie type",
                  "enum":[
                     "app",
                     "lb"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "CookieExpirationPeriod":{
                           "description":"(lb) The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.",
                           "type":"integer"
                        },
                        "CookieName":{
                           "description":"(app) required. The name of the application cookie used for stickiness.",
                           "type":"string"
                        },
                        "PolicyName":{
                           "description":"The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "PolicyName"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Generates a stickiness policy [app, lb] with sticky session lifetimes that follow that of an application-generated cookie. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/healthcheck":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "HealthCheck":{
                           "properties":{
                              "HealthyThreshold":{
                                 "description":"The number of consecutive health checks successes required before moving the instance to the Healthy state.",
                                 "type":"integer"
                              },
                              "Interval":{
                                 "description":"The approximate interval, in seconds, between health checks of an individual instance.",
                                 "type":"integer"
                              },
                              "Target":{
                                 "description":"The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535. Example TCP:5000, SSL:5000, HTTP:port;/;PathToPing",
                                 "type":"string"
                              },
                              "Timeout":{
                                 "description":"The amount of time, in seconds, during which no response means a failed health check. This value must be less than the Interval value.",
                                 "type":"integer"
                              },
                              "UnhealthyThreshold":{
                                 "description":"The number of consecutive health check failures required before moving the instance to the Unhealthy state.",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "Target",
                              "Interval",
                              "Timeout",
                              "UnhealthyThreshold",
                              "HealthyThreshold"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "HealthCheck"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the health check settings to use when evaluating the health state of your EC2 instances.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/instances":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":" After the instance is deregistered, it no longer receives traffic from the load balancer<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "register",
                     "deregister"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Instances":{
                           "description":"The IDs of the instances, list of dicts",
                           "items":{
                              "properties":{
                                 "InstanceId":{
                                    "description":"The IDs of the instances, list of dicts",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "InstanceId"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Instances"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds/Deregisters the specified instances to/from the specified load balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/instanceshealth":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The IDs of the instances (ex. i-1234567,i-12345678)",
                  "in":"query",
                  "name":"Instances",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the health attributes for the specified Instances. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/listeners":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"80, 8080, 4000",
                  "in":"query",
                  "name":"LoadBalancerPorts",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified listeners from the specified load balancer.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.<br/> ",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Listeners":{
                           "description":"list of dicts",
                           "items":{
                              "properties":{
                                 "InstancePort":{
                                    "description":"The port on which the instance is listening",
                                    "type":"integer"
                                 },
                                 "InstanceProtocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "LoadBalancerPort":{
                                    "description":"EC2-VPC 1-65535, EC2-Classic 25, 80, 443, 465, 587, 1024-65535",
                                    "type":"integer"
                                 },
                                 "Protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "SSLCertificateId":{
                                    "description":"The Amazon Resource Name (ARN) of the server certificate",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "InstancePort",
                                 "InstanceProtocol",
                                 "LoadBalancerPort",
                                 "Protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Listeners"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create one or more listeners for the specified load balancer. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/listeners/policies":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "LoadBalancerPort":{
                           "description":"The external port of the load balancer",
                           "type":"integer"
                        },
                        "PolicyNames":{
                           "description":"The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "LoadBalancerPort",
                        "PolicyNames"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Replaces the current set of policies for the specified load balancer port with the specified set of policies.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/listeners/sslcertificate":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "description":"The specified certificate replaces any prior certificate that was used on the same load balancer and port.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "LoadBalancerPort":{
                           "description":"The port that uses the specified SSL certificate.",
                           "type":"integer"
                        },
                        "SSLCertificateId":{
                           "description":"The Amazon Resource Name (ARN) of the SSL certificate.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "LoadBalancerPort",
                        "SSLCertificateId"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the certificate that terminates the specified listener's SSL connections. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/policy":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "PolicyAttributes":{
                           "description":"The policy attributes.",
                           "items":{
                              "properties":{
                                 "AttributeName":{
                                    "description":"The name of the attribute",
                                    "type":"string"
                                 },
                                 "AttributeValue":{
                                    "description":"The value of the attribute.",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "AttributeName",
                                 "AttributeValue"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "PolicyName":{
                           "description":"The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.",
                           "type":"string"
                        },
                        "PolicyTypeName":{
                           "description":"The name of the base policy type.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "PolicyName",
                        "PolicyTypeName",
                        "PolicyAttributes"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a policy with the specified attributes for the specified load balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/policy/{policy_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"load balancer policy name",
                  "in":"path",
                  "name":"policy_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/securitygroups":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"The specified security groups override the previously associated security groups.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "SecurityGroups":{
                           "description":"The IDs of the security groups to associate with the load balancer.",
                           "example":[
                              "sgid1",
                              "sgid2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "SecurityGroups"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associates one or more security groups with your load balancer in a virtual private cloud (VPC). ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/subnets":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Subnets":{
                           "description":"The IDs of the subnets to add",
                           "example":[
                              "subnet-09f0ce8573da838",
                              "subnet-07f0ce8r73da837"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Subnets"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds/Removes one or more subnets to the set of configured subnets for the specified load balancer.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/elbs/{elb_name}/tags":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Tags":{
                           "description":"List of Tags (max 10)",
                           "items":{
                              "properties":{
                                 "Key":{
                                    "type":"string"
                                 },
                                 "Value":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Tags"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/gateways":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of gateways.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/images/private":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private images.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/images/selfowned":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of self owned images.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/images/snapshot":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of snapshot images.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/images/{ami_id}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances; however, it doesn't affect any instances that you've already launched from the AMI.<br/>Initiates the copy of an AMI from the specified source Region to the destination Region.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the AMI. (ex. ami-a59c5cdc)",
                  "in":"path",
                  "name":"ami_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "copy",
                     "deregister"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "name":{
                           "description":"(copy) The name of the new AMI in the destination Region.",
                           "type":"string"
                        },
                        "region":{
                           "description":"(copy) The name of the destination Region.",
                           "type":"string"
                        },
                        "source":{
                           "description":"(copy) The name of the Region that contains the AMI to copy.",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on image [copy, deregister]",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-25487dt66)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"all",
                  "description":"The filters IDs",
                  "enum":[
                     "all",
                     "deployed_by_uic",
                     "not_deployed_by_uic"
                  ],
                  "in":"query",
                  "name":"filter",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/instances/monitoring":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"he time stamp indicating the earliest data to be returned. ex, '2022-02-12T12:00:00'",
                  "in":"query",
                  "name":"start_time",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The time stamp indicating the latest data to be returned. ex, '2022-02-12T12:00:00'",
                  "in":"query",
                  "name":"end_time",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Next token",
                  "in":"query",
                  "name":"next_token",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The order in which data points should be returned.",
                  "enum":[
                     "TimestampDescending",
                     "TimestampAscending"
                  ],
                  "in":"query",
                  "name":"scan_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of data points. The default of 100,800 is used.",
                  "in":"query",
                  "name":"max_datapoints",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specify your time zone",
                  "in":"query",
                  "name":"time_zone",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "items":{
                        "properties":{
                           "AccountId":{
                              "description":"The ID of the account where the metrics are located, if this is a cross-account alarm.",
                              "type":"string"
                           },
                           "Expression":{
                              "description":"The math expression to be performed on the returned data, if this object is performing a math expression.",
                              "type":"string"
                           },
                           "Id":{
                              "description":"A short name used to tie this object to the results in the response.",
                              "type":"string"
                           },
                           "Label":{
                              "description":"A human-readable label for this metric or expression.",
                              "type":"string"
                           },
                           "MetricStat":{
                              "description":"The metric to be returned, along with statistics, period, and units.",
                              "properties":{
                                 "InstanceIds":{
                                    "description":"Instances",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "MetricName":{
                                    "description":"The name of the metric.",
                                    "type":"string"
                                 },
                                 "Namespace":{
                                    "description":"The namespace of the metric.",
                                    "type":"string"
                                 },
                                 "Period":{
                                    "description":"The granularity, in seconds, of the returned data points.",
                                    "type":"integer"
                                 },
                                 "Stat":{
                                    "description":"The statistic to return.",
                                    "type":"string"
                                 },
                                 "Unit":{
                                    "description":null,
                                    "enum":[
                                       "Seconds",
                                       "Microseconds",
                                       "Milliseconds",
                                       "Bytes",
                                       "Kilobytes",
                                       "Megabytes",
                                       "Gigabytes",
                                       "Terabytes",
                                       "Bits",
                                       "Kilobits",
                                       "Megabits",
                                       "Gigabits",
                                       "Terabits",
                                       "Percent",
                                       "Count",
                                       "Bytes/Second",
                                       "Kilobytes/Second",
                                       "Megabytes/Second",
                                       "Gigabytes/Second",
                                       "Terabytes/Second",
                                       "Bits/Second",
                                       "Kilobits/Second",
                                       "Megabits/Second",
                                       "Gigabits/Second",
                                       "Terabits/Second",
                                       "Count/Second",
                                       "None"
                                    ],
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "Namespace",
                                 "MetricName",
                                 "InstanceIds"
                              ],
                              "type":"object"
                           },
                           "Period":{
                              "description":"The granularity, in seconds, of the returned data points.",
                              "type":"integer"
                           },
                           "ReturnData":{
                              "description":"default of True is used.",
                              "type":"boolean"
                           }
                        },
                        "required":[
                           "Id",
                           "MetricStat"
                        ],
                        "type":"object"
                     },
                     "type":"array"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retreive instance monitoring data",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/instances/{instance_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Id (ex. i-092ad34b7f09595e0)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an EC2 instance.",
            "tags":[
               "provider/aws"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id (ex. i-2548766)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-25487dt66)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances by instance id.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Id (ex. i-01cb1c5ccde1568b8)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "stop",
                     "start",
                     "restart",
                     "resume",
                     "resize",
                     "snapshot",
                     "firewall",
                     "password",
                     "enable_sourcedestinationcheck",
                     "disable_sourcedestinationcheck",
                     "enable_terminationprotection",
                     "disable_terminationprotection",
                     "enable_volume_erminationprotection",
                     "disable_volumeterminationprotection",
                     "monitor",
                     "metrics"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "days_period":{
                           "description":"(monitor) ex, 7",
                           "type":"string"
                        },
                        "description":{
                           "description":"(snapshot) Description",
                           "type":"string"
                        },
                        "device_name":{
                           "description":"(_volume_termination_protection) The device name (for example, /dev/sdh or xvdh).",
                           "type":"string"
                        },
                        "end_time":{
                           "description":"(monitor) ex, '2022-02-12T12:00:00'",
                           "type":"string"
                        },
                        "flavor":{
                           "description":"(resize) Flavor (ex. t2.small)",
                           "type":"string"
                        },
                        "metric":{
                           "description":"(monitor) see Action Metrics, ex, CPUUtilisation,",
                           "type":"string"
                        },
                        "monitoring_period":{
                           "description":"(monitor) ex, 3600",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) SnapshotName",
                           "type":"string"
                        },
                        "start_time":{
                           "description":"(monitor) ex, '2022-02-12T12:00:00'",
                           "type":"string"
                        },
                        "statistic":{
                           "description":"(monitor) [SampleCount, Average, Sum, Minimum, Maximum]",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on EC2 instance [stop, start, restart, resume, resize, snapshot, firewall, password, enable_sourcedestinationcheck, disable_sourcedestinationcheck, enable_terminationprotection, disable_terminationprotection, enable_volume_erminationprotection, disable_volumeterminationprotection, monitor, metrics].",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/internetgateways":{
         "delete":{
            "description":" You must detach the internet gateway from the VPC before you can delete it.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete network internet gateways.",
            "tags":[
               "provider/aws"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"query",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your internet gateways.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"After creating the internet gateway, you attach it to a VPC  or just enter VPC id.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway name",
                  "in":"query",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an internet gateway for use with a VPC. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/internetgateways/{gateway_id}":{
         "delete":{
            "description":"You must detach the internet gateway from the VPC before you can delete it.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway Id (ex. igw-bb852cfr5)",
                  "in":"path",
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified internet gateway. ",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway Id (ex. igw-bb852cfr5)",
                  "in":"path",
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"query",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"[attach, detach] Attach/Detach an internet gateway to a VPC, enabling connectivity between the internet and the VPC. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "key_name":{
                           "description":"A unique name for the key pair. Constraints, Up to 255 ASCII characters",
                           "type":"string"
                        }
                     },
                     "required":[
                        "key_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a 2048-bit RSA key pair with the specified name.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/keypairs/import":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "key_file":{
                           "description":"The public key. For API calls, the text must be base64-encoded.",
                           "type":"string"
                        },
                        "key_name":{
                           "description":"A unique name for the key pair",
                           "type":"string"
                        }
                     },
                     "required":[
                        "key_name",
                        "key_file"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Imports the public key from an RSA key pair that you created with a third-party tool.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/keypairs/{key_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the key pair.",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified key pair, by removing the public key from Amazon EC2.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/lcs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of LCs (Launch Configurations).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "access":{
                           "default":"private",
                           "enum":[
                              "private",
                              "public"
                           ],
                           "type":"string"
                        },
                        "classic_link_security_groups":{
                           "description":"classic_link_security_groups",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "classic_link_vpc_id":{
                           "description":"classic_link_vpc_id",
                           "type":"string"
                        },
                        "ebs_optimized":{
                           "default":false,
                           "description":"ebs optimized",
                           "type":"boolean"
                        },
                        "flavor":{
                           "description":"flavor",
                           "type":"string"
                        },
                        "image_id":{
                           "description":"required image id or instance id",
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"required instance id or image id",
                           "type":"string"
                        },
                        "key_name":{
                           "description":"key name",
                           "type":"string"
                        },
                        "lc_name":{
                           "description":"launch configuration name name",
                           "type":"string"
                        },
                        "monitor":{
                           "default":false,
                           "description":"monitor",
                           "type":"boolean"
                        },
                        "role":{
                           "description":"role",
                           "type":"string"
                        },
                        "security_group_id":{
                           "description":"security group id",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "storage":{
                           "description":"storage type json {}",
                           "properties":{
                              "delete_on_termination":{
                                 "default":false,
                                 "description":"true/false",
                                 "type":"boolean"
                              },
                              "device_name":{
                                 "description":"The device name (for example, /dev/sdh or xvdh).",
                                 "type":"string"
                              },
                              "encryption":{
                                 "description":"encryption",
                                 "type":"string"
                              },
                              "iops":{
                                 "description":null,
                                 "type":"string"
                              },
                              "size":{
                                 "description":"(GB)",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"Snapshot id (ex. snap-a59c5cdc)",
                                 "type":"string"
                              },
                              "type":{
                                 "description":"(ex. t2.micro)",
                                 "type":"string"
                              },
                              "virtual_name":{
                                 "description":"virtual name",
                                 "type":"string"
                              }
                           },
                           "required":[
                              null
                           ],
                           "type":"object"
                        },
                        "tenancy":{
                           "default":"default",
                           "description":"tenancy",
                           "type":"string"
                        },
                        "userdata":{
                           "description":"user data",
                           "type":"string"
                        }
                     },
                     "required":[
                        "lc_name",
                        "flavor",
                        "access",
                        "security_group_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create LC (Launch Configuration).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/lcs/{lc_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Launch Configuration Name",
                  "in":"path",
                  "name":"lc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a LC (Launch Configuration).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/metrics":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of metrics.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/natgateways":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of NAT gateways.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway name",
                  "in":"query",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "publicip":{
                           "description":"Public IP, Allocation id. (ex. eipalloc-be1fe157)",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"The ID of the subnet in your VPC to attach to the NAT. (ex. subnet-0b1bfaa78a48810a4)",
                           "type":"string"
                        },
                        "tags":{
                           "description":"A list of tags to assign to the NAT gateway.  {\"Key\":\"key1\",\"Value\":\"value1\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "required":[
                        "subnet_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an NAT gateway for use with a VPC.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/natgateways/{nat_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway id (ex. nat-8e0dd313)",
                  "in":"path",
                  "name":"nat_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the NAT gateway.",
            "tags":[
               "provider/aws"
            ]
         },
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway id (ex. nat-8e0dd313)",
                  "in":"path",
                  "name":"nat_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a NAT gateway.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPCs (Virtual Private Cloud).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"IPv4 Cidr Block (ex. 10.0.0.0/16)",
                           "type":"string"
                        },
                        "dns":{
                           "description":"Enable DNS hostnames (yes)",
                           "type":"string"
                        },
                        "name":{
                           "description":"VPC Name",
                           "type":"string"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "access":{
                                 "default":"private",
                                 "description":"VPC with Public / Private Subnets",
                                 "enum":[
                                    "public",
                                    "private"
                                 ],
                                 "type":"string"
                              },
                              "avzone":{
                                 "description":"Subnet Availability Zone",
                                 "type":"string"
                              },
                              "cidr_block":{
                                 "description":"Subnet IPv4 Cidr Block (ex. 10.0.1.0/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet Name",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "avzone",
                              "access",
                              "cidr_block"
                           ],
                           "type":"object"
                        },
                        "tags":{
                           "description":"tags {\"key1\":\"val1\", \"key2\":\"val2\"}",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "tenancy":{
                           "default":"default",
                           "description":"Indicates the tenancy of the Capacity Reservation",
                           "enum":[
                              "default",
                              null
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "cidr_block",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Virtual Private Cloud (VPC).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/natinstance":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "name":{
                           "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                           "in":"query",
                           "required":true,
                           "type":"string"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "access":{
                                 "default":"private_wia",
                                 "description":"VPC with Private Subnet",
                                 "enum":[
                                    "private_wia"
                                 ],
                                 "type":"string"
                              },
                              "avzone":{
                                 "description":"availability zone if new subnet",
                                 "type":"string"
                              },
                              "cidr_block":{
                                 "description":"cidr block if new subnet",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet Id (ex. subnet-06ae8766e71988812)",
                                 "type":"string"
                              },
                              "nat_instance":{
                                 "properties":{
                                    "flavor":{
                                       "description":"Flavor (Ex, t2.micro)",
                                       "type":"string"
                                    },
                                    "image_id":{
                                       "description":"Image Id (Ex, ami-a8f54g62)",
                                       "type":"string"
                                    },
                                    "keypair":{
                                       "description":"ubuntu_c98cf8a1-be18-4c47-9906-0ebce3d3882a",
                                       "type":"string"
                                    },
                                    "name":{
                                       "description":"NAT Name",
                                       "type":"string"
                                    },
                                    "publicip":{
                                       "default":"new",
                                       "description":"NAT Elastic IP (Ex, eipalloc-042bfd48669b86bfc)",
                                       "type":"string"
                                    },
                                    "subnet":{
                                       "properties":{
                                          "name":{
                                             "description":"VPC subnet Id (ex. subnet-06ae8766e71988812) or subnet name if new subnet",
                                             "type":"string"
                                          }
                                       },
                                       "required":[
                                          "name"
                                       ],
                                       "type":"object"
                                    }
                                 },
                                 "required":[
                                    "subnet",
                                    "publicip",
                                    "name",
                                    "flavor",
                                    "image_id",
                                    "keypair"
                                 ],
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "access",
                              "nat_instance"
                           ],
                           "type":"object"
                        },
                        "tags":{
                           "description":"tags {\"key1\":\"val1\", \"key2\":\"val2\"}",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "tenancy":{
                           "default":"default",
                           "description":"Indicates the tenancy of the Capacity Reservation",
                           "enum":[
                              "default",
                              null
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "tenancy",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create NAT (Network Address Translation) Instance.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Private Cloud Id (ex. vpc-0fc89e5dcccd61000)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Delete All Dependencies",
                  "in":"query",
                  "name":"all_dependencies",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete VPC (Virtual Private Cloud).",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/classiclink":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action.",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enables/Disables a VPC for ClassicLink.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/dnshostnames":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action. Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Modifies the EnableDnsHostnames and EnableDnsSupport of the specified VPC.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"all",
                  "description":"The filters IDs",
                  "enum":[
                     "all",
                     "deployed_by_uic",
                     "not_deployed_by_uic"
                  ],
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe all network's instances.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/instances/{instance_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The instance IDs. Default Describe all your instances.  (ex. i-092ad34b7f09595e0)",
                  "in":"path",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the specified instance.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of an EC2-Classic instance  (ex. i-092ad34b7f09595e0)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action.",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attach/Detach Ec2-Classic instance to the VPC.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/routetable":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"After you create a route table, you can add routes and associate the table with a subnet.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rtable_name":{
                           "description":"Route Table Name",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"Subnet Id (ex. subnet-06ae8766e71988812)",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "required":[
                        "rtable_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a route table for the specified VPC. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/routetables":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your route tables.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"The subnet and route table must be in the same VPC. Disassociates a subnet from a route table.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "association_id":{
                           "description":"(disassociate) The association ID representing the current association between the route table and subnet. (ex. rtbassoc-059b11b9d02e856b6)",
                           "type":"string"
                        },
                        "rtable_id":{
                           "description":"(associate) Route Table Id (ex. rtb-a50ab5c1)",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"(associate) Subnet Id (ex. subnet-06ae8766e71988812)",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associates a subnet with a route table. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/routetables/{routetable_id}":{
         "delete":{
            "description":"You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the route table. (ex. rtb-0a82413c9c34dd7dd)",
                  "in":"path",
                  "name":"routetable_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified route table. ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/routetables/{rtable_id}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the route table. (ex. rtb-0a82413c9c34dd7dd)",
                  "in":"path",
                  "name":"rtable_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "route_destination":{
                           "description":"(add, delete) Destination Cidr Block (ex. 0.0.0.0/0)",
                           "type":"string"
                        },
                        "target_route":{
                           "default":null,
                           "description":"(add) Target (ex. GatewayId)",
                           "enum":[
                              "GatewayId",
                              "InstanceId",
                              "NetworkInterfaceId",
                              "VpcPeeringConnectionId",
                              "NatGatewayId"
                           ],
                           "type":"string"
                        },
                        "target_value":{
                           "description":"(add) Target Id (ex. igw-c0a643a9)",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a route in a route table within a VPC.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/securitygroups":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Warning !!!  All Security Group Ids different from \"default\" will be deleted.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/securitygroups/{securitygroup_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id. (ex. sg-02175299fdc0626da)",
                  "in":"path",
                  "name":"securitygroup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a security group.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/subnet":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your subnets.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Private Cloud Id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC's subnets.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/networks/{network_id}subnets/{subnet_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet Id (ex. subnet-06ae8766e71988812)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete one of your subnets.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/placementgroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Placement groups.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "group_name":{
                           "description":"placement group name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "group_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Placement group.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/placementgroups/{group_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"placement group name",
                  "in":"path",
                  "name":"group_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Placement group.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of public ips.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "type":{
                           "default":"standard",
                           "description":"Ip type",
                           "enum":[
                              "standard",
                              "vpc"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create public ip.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/publicips/{allocation_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Allocation ID",
                  "in":"path",
                  "name":"allocation_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a public ip.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Allocation ip (ex. eipalloc-067c0fcd79fb49860)",
                  "in":"path",
                  "name":"allocation_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public ip",
                  "in":"query",
                  "name":"public_ip",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Instance id (ex. i-092ad34b7f09595e0)",
                  "in":"query",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Release public ip (disassociate)",
                  "in":"query",
                  "name":"release",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associate/Disassociate Public Ip to/from one instance.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/securitygroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of security groups (firewalls).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Group Name",
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"Network Id (ex. vpc-038e1c1b7ec8f3cb0)",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "vnet_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a security group.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/securitygroups/{securitygroup_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id (ex. sg-08bce49ad839e64ae)",
                  "in":"path",
                  "name":"securitygroup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a security group.",
            "tags":[
               "provider/aws"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"securitygroup_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"SG Rules",
                           "properties":{
                              "direction":{
                                 "default":"in",
                                 "description":"Ingress firewall rules grant access to networks (Inbound) . Egress rule applies to traffic leaving the subnet (Outbound).",
                                 "enum":[
                                    "in",
                                    "out"
                                 ],
                                 "type":"string"
                              },
                              "from":{
                                 "description":"The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number",
                                 "type":"integer"
                              },
                              "protocol":{
                                 "description":"Ip Protocol TCP, UDP",
                                 "type":"string"
                              },
                              "range":{
                                 "default":"0.0.0.0/0",
                                 "description":"The CIDR IPv4 address range",
                                 "type":"string"
                              },
                              "to":{
                                 "description":"The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "direction",
                              "protocol",
                              "range",
                              "from",
                              "to"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds/Removes one rule to/from a security group.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of snapshots.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/snapshots/{snapshot_id}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"You can copy the snapshot within the same Region or from one Region to another. <br/>Restore a volume from an EBS snapshot.<br/>Delete an EBS snapshot.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)  (copy) Snapshot Destination Region ID",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot id (ex. snap-a59c5cdc) or ami id (ex. ami-8c4ffef1)",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "copy",
                     "create",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"(create) The Availability Zone in which to create the volume.",
                           "type":"string"
                        },
                        "name":{
                           "description":"(copy) required Snapshot name in the Destination Region (create) Volume name",
                           "type":"string"
                        },
                        "option":{
                           "description":"(create) Options",
                           "properties":{
                              "encrypted":{
                                 "description":"Indicates whether the volume will be encrypted.",
                                 "type":"boolean"
                              },
                              "iops":{
                                 "description":"if type io1, Provisioned IOPS (SSD)",
                                 "type":"string"
                              },
                              "kms_key_id":{
                                 "description":"The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"The snapshot from which to create the volume. (ex. snap-a59c5cdc)",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "snapshot_id"
                           ],
                           "type":"object"
                        },
                        "size":{
                           "description":"(create) size (GB)",
                           "type":"integer"
                        },
                        "source_region":{
                           "description":"(copy) required Snapshot Source Region ID",
                           "type":"string"
                        },
                        "type":{
                           "default":null,
                           "description":"(create) Volume type, gp2 General Purpose (SSD), io1 Provisioned IOPS (SSD), standard Magnetic",
                           "enum":[
                              "gp2",
                              "io1",
                              "standard"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "region"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Snapshots [copy, create, delete] ",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/sns/topics":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of SNS topics (Simple Notification Service).",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "endpoint":{
                           "description":"EndPoint description",
                           "type":"string"
                        },
                        "protocol":{
                           "description":"protocol",
                           "enum":[
                              "HTTP",
                              "HTTPS",
                              "Lambda",
                              "SQS",
                              "Email",
                              "Application"
                           ],
                           "type":"string"
                        },
                        "topic_arn":{
                           "description":"required TopicName or TopicArn (amazon resource name)",
                           "type":"string"
                        },
                        "topic_name":{
                           "description":"required TopicName or TopicArn (amazon resource name)",
                           "type":"string"
                        }
                     },
                     "required":null,
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create SNS topics (Simple Notification Service) topic .",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/subnets/{subnet_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id (ex. subnet-06ae8766e71988812)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a subnet by id.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of EBS volumes.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"The Availability Zone for the volume.",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"device name ( example /dev/sdf )",
                           "type":"string"
                        },
                        "mountname":{
                           "description":"mountname",
                           "type":"string"
                        },
                        "name":{
                           "description":"volume name",
                           "type":"string"
                        },
                        "option":{
                           "properties":{
                              "encrypted":{
                                 "default":false,
                                 "description":"Indicates whether the volume will be encrypted. true/false",
                                 "type":"boolean"
                              },
                              "iops":{
                                 "description":"for Provisioned IOPS",
                                 "type":"string"
                              },
                              "kms_key_id":{
                                 "description":"The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"snapshot id (ex. snap-a59c5cdc)",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "partition":{
                           "description":"partition",
                           "type":"string"
                        },
                        "size":{
                           "description":"size (GB)",
                           "type":"integer"
                        },
                        "tag":{
                           "description":"Tags (max 10) {\"key1\":\"value1\",\"key2\":\"value2\"}",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "default":"standard",
                           "description":"Volume type, gp2 General Purpose (SSD), io1 Provisioned IOPS (SSD), standard Magnetic",
                           "enum":[
                              "gp2",
                              "io1",
                              "standard"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "avzone",
                        "name",
                        "type",
                        "size",
                        "devicename"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create EBS volume.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"volume id  (ex. vol-02197ea4cc684c170)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a EBS volume.",
            "tags":[
               "provider/aws"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. vol-02197ea4cc684c170)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "devicename":{
                           "description":"(attach, detach) Device name (/dev/sdf, /dev/sdg, ...)",
                           "type":"string"
                        },
                        "force":{
                           "description":"(detach) Force detach",
                           "type":"boolean"
                        },
                        "instance_id":{
                           "description":"(attach, detach) Instance id",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"EBS volume [attach, detach, snapshot].",
            "tags":[
               "provider/aws"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. vol-02197ea4cc684c170)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Tags":{
                           "description":"tags {\"key1\":\"val1\", \"key2\":\"val2\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "auto_enable_io":{
                           "default":false,
                           "description":"auto enabled io",
                           "type":"boolean"
                        },
                        "iops":{
                           "description":"for Provisioned IOPS",
                           "type":"string"
                        },
                        "size":{
                           "description":"size (GB)",
                           "type":"string"
                        },
                        "type":{
                           "description":"volume type gp2 General Purpose (SSD), io1 Provisioned IOPS (SSD), standard Magnetic",
                           "enum":[
                              "gp2",
                              "io1",
                              "standard"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates EBS volume.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/aws/{uuid}/regions/{region}/vpn":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "av_zone":{
                           "description":"AvailabilityZone",
                           "type":"string"
                        },
                        "customer_gateway":{
                           "description":"create vpn custom gateway",
                           "properties":{
                              "bgpasn":{
                                 "description":"Customer's GW. The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of your customer gateway. Only if Dynamic Routing. (ex. 65000)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"reference",
                                 "type":"string"
                              },
                              "public_ip":{
                                 "description":"Customer's GW. Specify the Internet-routable IP address for your gateway's external interface; the address must be static and may be behind a device performing network NAT (Network Address Translation).",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "public_ip",
                              "name"
                           ],
                           "type":"object"
                        },
                        "name":{
                           "description":"Customer's GW name",
                           "in":"query",
                           "required":true,
                           "type":"string"
                        },
                        "routing":{
                           "default":"static",
                           "description":"Customer's GW. Static or Dynamic",
                           "enum":[
                              "static",
                              "dynamic"
                           ],
                           "type":"string"
                        },
                        "rtable_id":{
                           "description":"rtable_id",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnet_id":{
                           "description":"subnet_id",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "type":{
                           "default":"ipsec.1",
                           "description":"type",
                           "enum":[
                              "ipsec.1"
                           ],
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                           "in":"query",
                           "required":true,
                           "type":"string"
                        },
                        "vpn_gateway":{
                           "description":"vpn gateway",
                           "properties":{
                              "name":{
                                 "description":"reference",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name"
                           ],
                           "type":"object"
                        },
                        "vpnroute":{
                           "description":"VPN route. The CIDR block associated with the local subnet of the customer network. (ex. \"10.0.2.0/24\")",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vnet_id",
                        "name",
                        "customer_gateway",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPN connection between an existing virtual private gateway and a VPN customer gateway.",
            "tags":[
               "provider/aws"
            ]
         }
      },
      "/v2.0/provider/clevercloud/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization id",
                  "in":"query",
                  "name":"organisation_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of organisation invoices.",
            "tags":[
               "provider/clevercloud"
            ]
         }
      },
      "/v2.0/provider/clevercloud/{uuid}/billing/invoices/{invoice_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice id",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organisation id",
                  "in":"query",
                  "name":"organisation_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the invoice.",
            "tags":[
               "provider/clevercloud"
            ]
         }
      },
      "/v2.0/provider/clevercloud/{uuid}/organisations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of organisations.",
            "tags":[
               "provider/clevercloud"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/check":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Check billing API",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/contracts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of contracts.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/contracts/{contract_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Contract id",
                  "in":"path",
                  "name":"contract_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a contract by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Contract id",
                  "in":"query",
                  "name":"contract_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of invoices.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/invoices/{invoice_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice file name (ex. 1200883780-OCB0002331-06016620.pdf)",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Contract id",
                  "in":"query",
                  "name":"contract_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Invoice URL",
                  "in":"query",
                  "name":"invoice_url",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an invoice in Base64 format. You have to decode Base64 response to PDF.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/reports":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Type",
                  "enum":[
                     "reports",
                     "partial_bills",
                     "partial_consumption_rated_reports",
                     "consumption_rated_reports"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Contract id",
                  "in":"query",
                  "name":"contract_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of reports [reports, partial bills, partial consumption rated reports, consumption rated reports].",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/billing/reports/{report_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Report id",
                  "in":"path",
                  "name":"report_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Report URL",
                  "in":"query",
                  "name":"report_url",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a report by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/projects":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Projects.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of regions.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the list of Classic Load Balancers.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "avzone":{
                           "description":"Specifies the AZ where the load balancer works. This field is valid when type is set to Internal. If type is set to Internal and an AZ is specified, the specified AZ must support private network load balancers.",
                           "type":"string"
                        },
                        "description":{
                           "description":"Load balancer description",
                           "type":"string"
                        },
                        "front_ip":{
                           "description":"Specifies the private IP address of the load balancer. When type is set to External, the parameter value is the EIP.",
                           "type":"string"
                        },
                        "health_check":{
                           "items":{
                              "properties":{
                                 "healthy_threshold":{
                                    "description":"From 1 to 10,  Specifies the threshold at which the health check result is success.",
                                    "type":"integer"
                                 },
                                 "interval":{
                                    "description":"Specifies the interval between health checks in the unit of second. From 1 to 50.",
                                    "type":"integer"
                                 },
                                 "name":{
                                    "description":"Health check name.",
                                    "type":"string"
                                 },
                                 "port":{
                                    "description":"From 1 to 65535",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                                    "enum":[
                                       "HTTP",
                                       "TCP",
                                       "HTTPS",
                                       "UDP"
                                    ],
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"Specifies the health check URI. This parameter is valid when protocol is HTTP. \"/\"",
                                    "type":"string"
                                 },
                                 "timeout":{
                                    "description":"Specifies the maximum time required for waiting for a response from the health check in the unit of second. From 1 to 50.",
                                    "type":"integer"
                                 },
                                 "unhealthy_threshold":{
                                    "description":"From 1 to 10, Specifies the threshold at which the health check result is fail.",
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "port",
                                 "interval",
                                 "target"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "instances":{
                           "description":"List of associated instances",
                           "items":{
                              "properties":{
                                 "id":{
                                    "description":"Instance id",
                                    "type":"string"
                                 },
                                 "listener_name":{
                                    "description":"Listener name",
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "items":{
                              "properties":{
                                 "description":{
                                    "description":"Listener description",
                                    "type":"string"
                                 },
                                 "instance_port":{
                                    "description":"From 1 to 65535. , Specifies the port used by backend ECSs.",
                                    "type":"integer"
                                 },
                                 "instance_protocol":{
                                    "description":"Specifies the backend ECS protocol, The value can be HTTP, TCP, or UDP",
                                    "enum":[
                                       "HTTP",
                                       "TCP",
                                       "UDP"
                                    ],
                                    "type":"string"
                                 },
                                 "lb_port":{
                                    "description":"From 1 to 65535.",
                                    "type":"integer"
                                 },
                                 "name":{
                                    "description":"Listener name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "algorithm":{
                                          "description":"Specifies the load balancing algorithm. The value can be roundrobin, leastconn, or source.",
                                          "enum":[
                                             "roundrobin",
                                             "leastconn",
                                             "source"
                                          ],
                                          "type":"string"
                                       },
                                       "certificate_id":{
                                          "description":"Certificate id",
                                          "type":"string"
                                       },
                                       "cookie_timeout":{
                                          "description":"From 1 to 1440. his parameter is valid when protocol is set to TCP.",
                                          "type":"integer"
                                       },
                                       "instances":{
                                          "description":"List of instances to be associate with the listener.",
                                          "items":{
                                             "type":"string"
                                          },
                                          "type":"array"
                                       },
                                       "session_sticky":{
                                          "description":"Specifies whether to enable the sticky session feature.",
                                          "type":"boolean"
                                       },
                                       "ssl_ciphers":{
                                          "description":"SSL ciphers",
                                          "type":"string"
                                       },
                                       "ssl_protocols":{
                                          "description":"The value is TLSv1.2 or TLSv1.2 TLSv1.1 TLSv1 and the default value is TLSv1.2.",
                                          "enum":[
                                             "TLSv1.2",
                                             "TLSv1.2",
                                             "TLSv1.1",
                                             "TLSv1"
                                          ],
                                          "type":"string"
                                       },
                                       "sticky_session_type":{
                                          "description":"Specifies where the cookie is from, the only value is insert. This parameter is valid when protocol is set to HTTP and session_sticky to true.",
                                          "enum":[
                                             "insert"
                                          ],
                                          "type":"string"
                                       },
                                       "tcp_draining":{
                                          "description":"Specifies whether to maintain TCP connections to a backend ECS that has been removed",
                                          "type":"boolean"
                                       },
                                       "tcp_draining_timeout":{
                                          "description":"The value ranges from 0 to 60.",
                                          "type":"integer"
                                       },
                                       "tcp_timeout":{
                                          "description":"From 1 to 1440. his parameter is valid when protocol is set to TCP.",
                                          "type":"integer"
                                       },
                                       "udp_timeout":{
                                          "description":"The value ranges from 1 to 1440.",
                                          "type":"integer"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                                    "enum":[
                                       "HTTP",
                                       "TCP",
                                       "HTTPS",
                                       "UDP"
                                    ],
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "lb_port",
                                 "instance_protocol",
                                 "instance_port"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"Load balancer name.",
                           "type":"string"
                        },
                        "option":{
                           "properties":{
                              "admin_state_up":{
                                 "default":true,
                                 "description":"Specifies the administrative status of the load balancer.",
                                 "type":"boolean"
                              },
                              "bandwidth_charge_mode":{
                                 "anum":[
                                    "traffic",
                                    "bandwidth"
                                 ],
                                 "description":"Specifies how a new elastic IP address (EIP) is billed.",
                                 "type":"string"
                              },
                              "bandwidth_size":{
                                 "description":"Specifies the bandwidth (Mbit/s). This parameter is mandatory when type is set to External. 1 \u00e0 1000",
                                 "type":"integer"
                              },
                              "tenantid":{
                                 "description":"This parameter is mandatory when type is set to Internal. default is the curent Project id (ex. c726c46bc07b463c8a20f8a8deadfd88).",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "security_groups":{
                           "description":"List of sg id. Specifies the security group ID. This parameter is mandatory if the value of type is Internal, while it is ignored when the value of type is External.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnets":{
                           "description":"List of subnet_id s. Specifies the subnet ID of backend ECSs. This parameter is mandatory when type is set to Internal. Only IPv4 subnets can be specified.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "type":{
                           "description":"Load balancer type.",
                           "enum":[
                              "Internal",
                              "External"
                           ],
                           "type":"string"
                        },
                        "vpc_id":{
                           "description":"Network id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "vpc_id",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Classic Load Balancer.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/healthchecks":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"query",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "healthy_threshold":{
                           "description":"From 1 to 10,  Specifies the threshold at which the health check result is success.",
                           "type":"integer"
                        },
                        "interval":{
                           "description":"Specifies the interval between health checks in the unit of second. From 1 to 50.",
                           "type":"integer"
                        },
                        "name":{
                           "description":"Health check name.",
                           "type":"string"
                        },
                        "port":{
                           "description":"From 1 to 65535",
                           "type":"integer"
                        },
                        "protocol":{
                           "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "HTTPS",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "target":{
                           "description":"Specifies the health check URI. This parameter is valid when protocol is HTTP. \"/\"",
                           "type":"string"
                        },
                        "timeout":{
                           "description":"Specifies the maximum time required for waiting for a response from the health check in the unit of second. From 1 to 50.",
                           "type":"integer"
                        },
                        "unhealthy_threshold":{
                           "description":"From 1 to 10, Specifies the threshold at which the health check result is fail.",
                           "type":"integer"
                        }
                     },
                     "required":[
                        "protocol",
                        "port",
                        "interval",
                        "target"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add Healthcheck to the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/healthchecks/{healthcheck_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Health check id",
                  "in":"path",
                  "name":"healthcheck_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Healthcheck.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Health check id",
                  "in":"path",
                  "name":"healthcheck_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retreive a Healthcheck.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/listeners/{listener_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the listener ID.",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the listener ID.",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the specified Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/listeners/{listener_id}/members/{member_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Member id (see Retrieve a list of servers, copy \"id\")",
                  "in":"path",
                  "name":"member_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Private IP address required for action 'add'",
                  "in":"query",
                  "name":"address",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add/Remove the Member (server) to/from the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/listeners/{listener_id}members":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the resource ID of pagination query. If the parameter is left blank, only resources on the first page are queried.",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies the number of records on each page.",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Members (Servers) of the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/{elb_id}/listeners":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Listeners.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "algorithm":{
                           "description":"Specifies the load balancing algorithm. The value can be roundrobin, leastconn, or source.",
                           "enum":[
                              "roundrobin",
                              "leastconn",
                              "source"
                           ],
                           "type":"string"
                        },
                        "backend_port":{
                           "description":"From 1 to 65535. , Specifies the port used by backend ECSs.",
                           "type":"integer"
                        },
                        "backend_protocol":{
                           "description":"Specifies the backend ECS protocol, The value can be HTTP, TCP, or UDP",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "certificate_id":{
                           "description":"Certificate id",
                           "type":"string"
                        },
                        "cookie_timeout":{
                           "description":"From 1 to 1440. his parameter is valid when protocol is set to TCP.",
                           "type":"integer"
                        },
                        "description":{
                           "description":"Listener description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Listener name",
                           "type":"string"
                        },
                        "port":{
                           "description":"From 1 to 65535.",
                           "type":"integer"
                        },
                        "protocol":{
                           "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "HTTPS",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "session_sticky":{
                           "description":"Specifies whether to enable the sticky session feature.",
                           "type":"boolean"
                        },
                        "ssl_ciphers":{
                           "description":"SSL ciphers",
                           "type":"string"
                        },
                        "ssl_protocols":{
                           "description":"The value is TLSv1.2 or TLSv1.2 TLSv1.1 TLSv1 and the default value is TLSv1.2.",
                           "enum":[
                              "TLSv1.2",
                              "TLSv1.2",
                              "TLSv1.1",
                              "TLSv1"
                           ],
                           "type":"string"
                        },
                        "sticky_session_type":{
                           "description":"Specifies where the cookie is from, the only value is insert. This parameter is valid when protocol is set to HTTP and session_sticky to true.",
                           "enum":[
                              "insert"
                           ],
                           "type":"string"
                        },
                        "tcp_draining":{
                           "description":"Specifies whether to maintain TCP connections to a backend ECS that has been removed",
                           "type":"boolean"
                        },
                        "tcp_draining_timeout":{
                           "description":"The value ranges from 0 to 60.",
                           "type":"integer"
                        },
                        "tcp_timeout":{
                           "description":"From 1 to 1440. his parameter is valid when protocol is set to TCP.",
                           "type":"integer"
                        },
                        "udp_timeout":{
                           "description":"The value ranges from 1 to 1440.",
                           "type":"integer"
                        }
                     },
                     "required":[
                        "protocol",
                        "lb_port",
                        "instance_protocol",
                        "backend_port"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the Listener to the load balancer.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/classic/{lb_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id (ex. 7a3ea69b2160449fb8067412f39ad78b)",
                  "in":"path",
                  "name":"lb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Classic Load Balancer.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Enhanced Load Balancers.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "algorithm":{
                           "description":"optional if provided, it is applied on all listeners, The value can be ROUND_ROBIN, LEAST_CONNECTIONS,  SOURCE_IP.",
                           "enum":[
                              "ROUND_ROBIN",
                              "LEAST_CONNECTIONS",
                              "SOURCE_IP"
                           ],
                           "type":"string"
                        },
                        "description":{
                           "description":"Load balancer description",
                           "type":"string"
                        },
                        "front_ip":{
                           "description":"When type is set to External, the parameter value is the EIP id.",
                           "type":"string"
                        },
                        "health_check":{
                           "items":{
                              "properties":{
                                 "healthy_threshold":{
                                    "description":"Specifies the number of consecutive health checks when the health check result of a backend server changes from fail to success. The value ranges from 1 to 10.",
                                    "type":"integer"
                                 },
                                 "interval":{
                                    "description":"Specifies the interval between health checks in the unit of second. From 1 to 50.",
                                    "type":"integer"
                                 },
                                 "method":{
                                    "description":"Specifies the HTTP request method. The default value is GET. The value can be GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, and PATCH.",
                                    "enum":[
                                       "GET",
                                       "HEAD",
                                       "POST",
                                       "PUT",
                                       "DELETE",
                                       "TRACE",
                                       "OPTIONS",
                                       "CONNECT",
                                       "PATCH"
                                    ],
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Healthcheck name.",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "admin_state_up":{
                                          "description":"description",
                                          "type":"boolean"
                                       },
                                       "domain_name":{
                                          "description":"Specifies the domain name of the HTTP request during the health check.",
                                          "type":"string"
                                       },
                                       "expected_codes":{
                                          "description":"Specifies the expected HTTP status code.",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "port":{
                                    "description":"From 1 to 65535",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                                    "enum":[
                                       "HTTP",
                                       "TCP",
                                       "HTTPS",
                                       "UDP"
                                    ],
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"Specifies the HTTP request path for the health check. The default value is /, and the value must start with a slash (/).",
                                    "type":"string"
                                 },
                                 "timeout":{
                                    "description":"Specifies the maximum time required for waiting for a response from the health check in the unit of second. From 1 to 50.",
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 "name",
                                 "protocol",
                                 "port",
                                 "interval",
                                 "target"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "instances":{
                           "description":"List of associated instances. The ports used by the two ECSs have been configured in the security group. (You can enable all ports first and then disable the ports that are not used after service deployment.) To ensure normal health checks, the security group for the two ECSs allows traffic from the 100.125.0.0/16 IP address block. You have two EIPs and have bound each to an ECS.",
                           "items":{
                              "properties":{
                                 "id":{
                                    "description":"Instance id",
                                    "type":"string"
                                 },
                                 "listener_name":{
                                    "description":"Listener name",
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "items":{
                              "properties":{
                                 "lb_port":{
                                    "description":"From 1 to 65535.",
                                    "type":"integer"
                                 },
                                 "name":{
                                    "description":"Listener name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "admin_state_up":{
                                          "description":"true / false",
                                          "type":"boolean"
                                       },
                                       "algorithm":{
                                          "description":"Specifies the load balancing algorithm. The value can be roundrobin, leastconn, or source_ip.",
                                          "enum":[
                                             "ROUND_ROBIN",
                                             "LEAST_CONNECTIONS",
                                             "SOURCE_IP"
                                          ],
                                          "type":"string"
                                       },
                                       "client_ca_tls_container_ref":{
                                          "description":"Lists the IDs of SNI certificates (server certificates with a domain name) used by the listener.",
                                          "items":{
                                             "type":"string"
                                          },
                                          "type":"array"
                                       },
                                       "connection_limit":{
                                          "description":"The value ranges from -1 to 2,147,483,647. The default value is -1, indicating that there is no restriction on maximum connections.",
                                          "type":"integer"
                                       },
                                       "default_pool_id":{
                                          "description":"Specifies the ID of the associated backend server group.",
                                          "type":"string"
                                       },
                                       "default_tls_container_ref":{
                                          "description":"Specifies the ID of the server certificate used by the listener.",
                                          "type":"string"
                                       },
                                       "description":{
                                          "description":"description",
                                          "type":"string"
                                       },
                                       "http2_enable":{
                                          "description":"true / false",
                                          "type":"boolean"
                                       },
                                       "instances":{
                                          "description":"Backend servers for the listerner",
                                          "items":{
                                             "type":"string"
                                          },
                                          "type":"array"
                                       },
                                       "session_cookie_name":{
                                          "description":"This parameter is mandatory when the sticky session type is APP_COOKIE",
                                          "type":"string"
                                       },
                                       "session_persistence_timeout":{
                                          "description":"integer from 1 to 60 if  protocol is TCP or UDP,  from 1 to 1440. if protocol is HTTP",
                                          "type":"integer"
                                       },
                                       "session_type":{
                                          "description":"string valide values SOURCE_IP, HTTP_COOKIE,  APP_COOKIE",
                                          "enum":[
                                             "SOURCE_IP",
                                             "HTTP_COOKIE",
                                             "APP_COOKIE"
                                          ],
                                          "type":"string"
                                       },
                                       "tls_ciphers_policy":{
                                          "description":"Specifies the security policy used by the listener",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "description":"The value can be HTTP, TCP, TERMINATED_HTTPS, or UDP.",
                                    "enum":[
                                       "HTTP",
                                       "TCP",
                                       "TERMINATED_HTTPS",
                                       "UDP"
                                    ],
                                    "type":"string"
                                 },
                                 "weight":{
                                    "description":"integer from 0 to 100 Specifies the backend server weight",
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 "name",
                                 "protocol",
                                 "lb_port",
                                 "instance_protocol",
                                 "instance_port"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"Load balancer name.",
                           "type":"string"
                        },
                        "option":{
                           "properties":{
                              "admin_state_up":{
                                 "default":true,
                                 "description":"Specifies the administrative status of the load balancer.",
                                 "type":"boolean"
                              },
                              "bandwidth_charge_mode":{
                                 "description":"If the value is traffic, the bandwidth is billed by traffic",
                                 "type":"string"
                              },
                              "bandwidth_id":{
                                 "description":"Id of existing bandwith",
                                 "type":"string"
                              },
                              "bandwidth_name":{
                                 "description":"Specifies the bandwidth name",
                                 "type":"string"
                              },
                              "bandwidth_share_type":{
                                 "description":"The value is PER, indicating that the bandwidth is dedicated.",
                                 "type":"string"
                              },
                              "bandwidth_size":{
                                 "description":"integer",
                                 "type":"integer"
                              },
                              "eip_type":{
                                 "description":"Default value is 5_bgp. Specifies the EIP type.",
                                 "type":"string"
                              },
                              "ip_version":{
                                 "description":"IP version 4 or 6,",
                                 "enum":[
                                    4,
                                    6
                                 ],
                                 "type":"integer"
                              },
                              "provider":{
                                 "description":"vlb",
                                 "type":"string"
                              },
                              "tenantid":{
                                 "description":"Specifies the ID of the project where the load balancer is used.",
                                 "type":"string"
                              },
                              "vip_address":{
                                 "description":"Specifies the private IP address of the load balancer.",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "admin_state_up"
                           ],
                           "type":"object"
                        },
                        "subnets":{
                           "description":"List of subnet_id s. Specifies the subnet ID of backend ECSs. This parameter is mandatory when type is set to Internal. Only IPv4 subnets can be specified.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "type":{
                           "description":"Load balancer type. Internal (private), External (public)",
                           "enum":[
                              "Internal",
                              "External"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "type",
                        "subnets"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Enhanced Load Balancer.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/healthchecks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a List of Health checks.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/healthchecks/{healthcheck_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Health check id",
                  "in":"path",
                  "name":"healthcheck_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Healthcheck.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Health check id",
                  "in":"path",
                  "name":"healthcheck_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the Healthcheck by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/listeners":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a List of Listeners.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/listeners/{listener_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"path",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the Listener by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/pools":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Loadbalancer id",
                  "in":"query",
                  "name":"loadbalancer_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrive a list of Pools (Backend Server Groups).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Listener id",
                  "in":"query",
                  "name":"listener_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "admin_state_up":{
                           "description":"true / false",
                           "type":"boolean"
                        },
                        "description":{
                           "description":"description",
                           "type":"string"
                        },
                        "lb_algorithm":{
                           "description":"Specifies the load balancing algorithm. The value can be roundrobin, leastconn, or source_ip.",
                           "enum":[
                              "ROUND_ROBIN",
                              "LEAST_CONNECTIONS",
                              "SOURCE_IP"
                           ],
                           "type":"string"
                        },
                        "name":{
                           "description":"Pool name.",
                           "type":"string"
                        },
                        "protocol":{
                           "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "HTTPS",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "session_cookie_name":{
                           "description":"This parameter is mandatory when the sticky session type is APP_COOKIE",
                           "type":"string"
                        },
                        "session_persistence_timeout":{
                           "description":"Integer from 1 to 60 if  protocol is TCP or UDP,  from 1 to 1440. if protocol is HTTP",
                           "type":"integer"
                        },
                        "session_type":{
                           "description":"string valide values SOURCE_IP, HTTP_COOKIE,  APP_COOKIE",
                           "enum":[
                              "SOURCE_IP",
                              "HTTP_COOKIE",
                              "APP_COOKIE"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "protocol",
                        "lb_algorithm"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add a Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/pools/{pool_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool id (Backend Server Group)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool Id (Backend Server Group)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrive a Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/pools/{pool_id}/healthchecks":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool id (Backend Server Group)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "admin_state_up":{
                           "description":"Specifies the administrative status of the health check.",
                           "type":"boolean"
                        },
                        "domain_name":{
                           "description":"Specifies the domain name of the HTTP request during the health check.",
                           "type":"string"
                        },
                        "expected_codes":{
                           "description":"Specifies the expected HTTP status code.",
                           "type":"string"
                        },
                        "healthy_threshold":{
                           "description":"Specifies the number of consecutive health checks when the health check result of a backend server changes from fail to success. The value ranges from 1 to 10.",
                           "type":"integer"
                        },
                        "http_method":{
                           "description":"Specifies the HTTP request method. The default value is GET. The value can be GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, and PATCH.",
                           "enum":[
                              "GET",
                              "HEAD",
                              "POST",
                              "PUT",
                              "DELETE",
                              "TRACE",
                              "OPTIONS",
                              "CONNECT",
                              "PATCH"
                           ],
                           "type":"string"
                        },
                        "interval":{
                           "description":"Specifies the interval between health checks in the unit of second. From 1 to 50.",
                           "type":"integer"
                        },
                        "name":{
                           "description":"Healthcheck name.",
                           "type":"string"
                        },
                        "port":{
                           "description":"From 1 to 65535",
                           "type":"integer"
                        },
                        "protocol":{
                           "description":"The value can be HTTP, TCP, HTTPS, or UDP.",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "HTTPS",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "target":{
                           "description":"Specifies the HTTP request path for the health check. The default value is /, and the value must start with a slash (/).",
                           "type":"string"
                        },
                        "timeout":{
                           "description":"Specifies the maximum time required for waiting for a response from the health check in the unit of second. From 1 to 50.",
                           "type":"integer"
                        }
                     },
                     "required":[
                        "name",
                        "protocol",
                        "port",
                        "interval",
                        "target"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Configure a health check for a backend server group (pool) to check the status of backend servers.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/pools/{pool_id}/members":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool id (Backend Server Group)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the resource ID of pagination query. If the parameter is left blank, only resources on the first page are queried.",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies the number of records on each page.",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Members (servers) in the Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "description":"Add a backend server to a specific backend server group. After a backend server group is added to a listener, <br/>traffic is distributed to backend servers in this server group using the specified load balancing algorithm.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the backend server group ID.",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "protocol_port":{
                           "description":"Specifies the port used by the backend server. The port number ranges from 1 to 65535.",
                           "type":"integer"
                        },
                        "server_id":{
                           "description":"Server id.",
                           "type":"string"
                        },
                        "server_name":{
                           "description":"Specifies the backend server name.",
                           "type":"string"
                        },
                        "server_private_ip_address":{
                           "description":"Specifies the private IP address of the backend server. This IP address must be in the subnet specified by subnet_id.",
                           "type":"string"
                        },
                        "server_subnet_id":{
                           "description":"Specifies the ID of the subnet where the backend server works.",
                           "type":"string"
                        },
                        "weight":{
                           "description":"Specifies the backend server weight. The value ranges from 0 to 100.",
                           "type":"integer"
                        }
                     },
                     "required":[
                        "server_subnet_id",
                        "protocol_port",
                        "server_private_ip_address"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the Member (server) to the Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/pools/{pool_id}/members/{member_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the backend server group ID.",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the backend server ID.",
                  "in":"path",
                  "name":"member_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Remove the Member (server) from the Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool id (Backend Server Group)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Member id (Server)",
                  "in":"path",
                  "name":"member_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retreive the Member (server) form the Pool (Backend Server Group).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/{elb_id}/listeners":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Loadbalancer Id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "admin_state_up":{
                           "description":"Specifies the administrative status of the listener. (true/false)",
                           "type":"boolean"
                        },
                        "client_ca_tls_container_ref":{
                           "description":"Lists the IDs of SNI certificates (server certificates with a domain name) used by the listener.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "default_pool_id":{
                           "description":"Specifies the ID of the associated backend server group.",
                           "type":"string"
                        },
                        "default_tls_container_ref":{
                           "description":"Specifies the ID of the server certificate used by the listener.",
                           "type":"string"
                        },
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "http2_enable":{
                           "description":"Specifies whether to use HTTP/2 (true/false)",
                           "type":"boolean"
                        },
                        "name":{
                           "description":"Listener name",
                           "type":"string"
                        },
                        "protocol":{
                           "description":"The value can be HTTP, TCP, TERMINATED_HTTPS, or UDP.",
                           "enum":[
                              "HTTP",
                              "TCP",
                              "TERMINATED_HTTPS",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "protocol_port":{
                           "description":"From 1 to 65535.",
                           "type":"integer"
                        },
                        "sni_container_refs":{
                           "description":"Lists the IDs of SNI certificates (server certificates with a domain name) used by the listener. This parameter is valid only when protocol is set to TERMINATED_HTTPS.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tls_ciphers_policy":{
                           "description":"Specifies the security policy used by the listener",
                           "type":"string"
                        }
                     },
                     "required":[
                        "protocol",
                        "protocol_port"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the Listener.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/elbs/enhanced/{lb_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id (ex. 7a3ea69b2160449fb8067412f39ad78b)",
                  "in":"path",
                  "name":"lb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Enhanced Load Balancer.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Security Group Name",
                           "type":"string"
                        },
                        "rules":{
                           "items":{
                              "properties":{
                                 "direction":{
                                    "default":"in",
                                    "description":"Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"From",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "group_id":{
                                          "type":"string"
                                       },
                                       "ip_type":{
                                          "default":"IPv4",
                                          "type":"string"
                                       }
                                    },
                                    "required":null,
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "icmp"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Range (0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"To",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "name",
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a firewall (security_group).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/firewalls/{firewall_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the firewall.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a firewall by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action, add new rule / remove old rule",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "items":{
                              "properties":{
                                 "direction":{
                                    "default":"in",
                                    "description":"Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"From (ex. 4000)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "icmp"
                                    ],
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Range (ex. 0.0.0.0/0)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"To (ex. 4010)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "from",
                                 "to",
                                 "direction",
                                 "protocol",
                                 "range"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the firewall, add or remove one or more rules.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Private images",
                  "in":"query",
                  "name":"private",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/images/{image_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Image Id",
                  "in":"path",
                  "name":"image_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an image by id.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/instances/{instance_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action on instance",
                  "enum":[
                     "stop",
                     "start",
                     "delete",
                     "resize",
                     "snapshot",
                     "monitor",
                     "metrics"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "ecs_endpoint":{
                           "description":"(monitor, metrics)",
                           "type":"string"
                        },
                        "end_date":{
                           "description":"(monitor) '2021-04-30 20:00:00'",
                           "type":"string"
                        },
                        "flavor_id":{
                           "description":"(resize) Flavor Id (ex. s3.medium.4)",
                           "type":"string"
                        },
                        "limit":{
                           "description":"(metrics) 1-1000",
                           "type":"string"
                        },
                        "metric_name":{
                           "description":"(monitor, metrics) [cpu_util, mem_util, disk_utilinband, disk_read_bytes_rate, disk_write_bytes_rate, disk_read_requests_rate, disk_write_requests_rate, network_incoming_bytes_rate_inband, network_outgoing_bytes_rate_inband, network_incoming_bytes_aggregate_rate, network_outgoing_bytes_aggregate_rate, inst_sys_status_error]",
                           "type":"string"
                        },
                        "mfilter":{
                           "description":"(monitor) [ average, max, min, sum, variance]",
                           "type":"string"
                        },
                        "namespace":{
                           "description":"(monitor, metrics) SYS.ECS",
                           "type":"string"
                        },
                        "order":{
                           "description":"(metrics) [desc, asc]",
                           "type":"string"
                        },
                        "period":{
                           "description":"(monitor) [1, 300, 1200, 3600, 14400, 86400]  secondes",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot Name",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"(monitor) '2021-04-30 20:00:00'",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on the instance [stop, start, delete, resize, snapshot, monitor, metrics].",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "key_name":{
                           "description":"Key name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "key_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a keypairs.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/keypairs/{key_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the keypair.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks (VPC).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"Cidr Block (ex. 192.168.0.0/16)",
                           "type":"string"
                        },
                        "name":{
                           "description":"Network Name",
                           "type":"string"
                        },
                        "subnet":{
                           "properties":{
                              "access":{
                                 "default":"public",
                                 "description":"Subnet access public/private",
                                 "type":"string"
                              },
                              "avzone":{
                                 "description":"Subnet Availability Zone",
                                 "type":"string"
                              },
                              "cidr_block":{
                                 "description":"Subnet Cidr Block (ex. 192.168.0.2/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet Name",
                                 "type":"string"
                              },
                              "option":{
                                 "properties":{
                                    "dhcp_enable":{
                                       "default":true,
                                       "description":"DHCP Enabled",
                                       "type":"boolean"
                                    },
                                    "dns1":{
                                       "description":"Subnet DNS 1 (ex. 8.8.8.8)",
                                       "type":"string"
                                    },
                                    "dns2":{
                                       "description":"Subnet DNS 2",
                                       "type":"string"
                                    },
                                    "dnsList":{
                                       "description":"DNS List",
                                       "items":{
                                          "type":"string"
                                       },
                                       "type":"array"
                                    },
                                    "gateway_ip":{
                                       "description":"Gateway IP",
                                       "type":"string"
                                    },
                                    "ipversion":{
                                       "description":"Ip version",
                                       "type":"string"
                                    },
                                    "router":{
                                       "description":"Router name",
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "cidr_block",
                              "avzone"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "name",
                        "cidr_block",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a network (VPC).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Delete with All Dependencies",
                  "in":"query",
                  "name":"all_dependencies",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the network (VPC).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a  VPC by Id (Virtual Private Cloud).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/networks/{network_id}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Limit",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Marker",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Subnets for the VPCs Id (Virtual Private Cloud).",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet name",
                  "in":"query",
                  "name":"subnet_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"Subnet Availability Zone",
                           "type":"string"
                        },
                        "cidr_block":{
                           "description":"Subnet Cidr Block",
                           "type":"string"
                        },
                        "dhcp_enable":{
                           "default":true,
                           "description":"DHCP Enabled",
                           "type":"boolean"
                        },
                        "dnsList":{
                           "description":"DNS List",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "gateway_ip":{
                           "description":"GatewayIp",
                           "type":"string"
                        },
                        "primary_dns":{
                           "description":"Subnet DNS 1",
                           "type":"string"
                        },
                        "secondary_dns":{
                           "description":"Subnet DNS 2",
                           "type":"string"
                        }
                     },
                     "required":[
                        "cidr_block",
                        "availability_zone",
                        "dhcp_enable"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a network subnet (VPC).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/networks/{network_id}/subnets/{subnet_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet Id",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the network subnet (VPC).",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Public (Elastic) IPs.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "type":{
                           "default":"ipv4",
                           "description":"IP type",
                           "enum":[
                              "ipv4",
                              "ipv6"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Public (Elastic) IP.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/publicips/{publicip_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP Id",
                  "in":"path",
                  "name":"publicip_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Public (Elastic) IP.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP Id",
                  "in":"path",
                  "name":"publicip_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "instance_id":{
                           "description":"(associate) Instance IP",
                           "type":"string"
                        },
                        "port_id":{
                           "description":"(disassociate) Port Id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "instance_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associate/Disassociate a Public (Elastic) IP.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/regions/availabilityzones":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of availability zones.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Instance/Volume Snapshots.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/snapshots/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot Id",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Snapshot.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"Availability zone",
                           "type":"string"
                        },
                        "description":{
                           "description":"description",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"devicename",
                           "type":"string"
                        },
                        "format_dict":{
                           "default":true,
                           "description":"Format Dict",
                           "type":"boolean"
                        },
                        "mountname":{
                           "description":"mountname",
                           "type":"string"
                        },
                        "name":{
                           "description":"Volume name",
                           "type":"string"
                        },
                        "option":{
                           "properties":{
                              "image_id":{
                                 "description":"image_id",
                                 "type":"string"
                              },
                              "multiattach":{
                                 "description":"multiattach",
                                 "type":"string"
                              },
                              "scheduler_hints":{
                                 "description":"scheduler_hints",
                                 "type":"string"
                              },
                              "shareable":{
                                 "description":"shareable",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"snapshot_id",
                                 "type":"string"
                              },
                              "tag":{
                                 "description":"Up to 10 tags",
                                 "properties":{
                                    "example":[
                                       "key1:val1"
                                    ],
                                    "key":{
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "type":"object"
                        },
                        "partition":{
                           "description":"partition",
                           "type":"string"
                        },
                        "size":{
                           "description":"Size (Gb)",
                           "type":"string"
                        },
                        "type":{
                           "default":"SATA",
                           "description":"Type",
                           "enum":[
                              "SSD",
                              "SATA"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "size",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Volume.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"force",
                  "in":"query",
                  "name":"force",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Volume.",
            "tags":[
               "provider/flexibleengine"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume Id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "snapshot",
                     "resize"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "devicename":{
                           "description":"(attach) Device Name (ex. /dev/vdc)",
                           "type":"string"
                        },
                        "force":{
                           "description":"(snapshot) Force",
                           "type":"boolean"
                        },
                        "instance_id":{
                           "description":"(attach) Instance Id",
                           "type":"string"
                        },
                        "name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        },
                        "size":{
                           "description":"(resize) Go",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on the Volume, [attach, detach, snapshot, resize].",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/flexibleengine/{uuid}/regions/{region}/volumetypes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-0)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id (ex. c726c46bc07b463c8a20f8a8deadfd88)",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Volume types.",
            "tags":[
               "provider/flexibleengine"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/accounts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of billing infos.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/commitment/coverage":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs in this format yyyy-mm-dd",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs in this format yyyy-mm-dd",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "LBM",
                     "3M",
                     "6M",
                     "MTD",
                     "BMTD",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"time zone default value is Europe/Paris",
                  "in":"query",
                  "required":false,
                  "time_zone":null,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve commitment sustained and committed discount coverage",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/commitment/estimatedsaving":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the rightsizing type",
                  "enum":[
                     "commited_usage_discount",
                     "commited_spend_based"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the project id, defaut is principal project id provided in the credentials",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve commitment recommendations",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/commitment/saving":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the monthly amount of savings from Committed Use Discounts (CUD)",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/cost/analysis":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "end_date":{
                           "description":"end date in format yyyy-mm-dd",
                           "type":"string"
                        },
                        "filters":{
                           "description":"filter for results",
                           "properties":{
                              "billing_account_id":{
                                 "description":"billing account id",
                                 "type":"string"
                              },
                              "commitment":{
                                 "description":"filter on commitment credit",
                                 "type":"boolean"
                              },
                              "contractual_discount":{
                                 "description":"filter on contractual credit",
                                 "type":"boolean"
                              },
                              "cost_type":{
                                 "description":"service id",
                                 "items":{
                                    "enum":[
                                       "regular",
                                       "adjustment",
                                       "tax",
                                       "rounding_error"
                                    ],
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "location":{
                                 "description":"location",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "project_id":{
                                 "description":"project id",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "service":{
                                 "description":"service id",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "sku":{
                                 "description":"sku id",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "sustained_discount":{
                                 "description":"filter on sustained credit",
                                 "type":"boolean"
                              },
                              "tag_keys":{
                                 "description":"tag keys",
                                 "oneOf":[
                                    {
                                       "type":"string"
                                    },
                                    {
                                       "type":"array"
                                    }
                                 ]
                              },
                              "tags":{
                                 "description":"tags with value as string or array",
                                 "type":"object"
                              }
                           },
                           "type":"object"
                        },
                        "granularity":{
                           "description":"granularity valid value is monthly",
                           "enum":[
                              "monthly"
                           ],
                           "type":"string"
                        },
                        "groub_by":{
                           "description":"group costs by, valid values are service | location | project | cost_type | sku | billing_account | tag_value | tags",
                           "enum":[
                              "service",
                              "location",
                              "project",
                              "cost_type",
                              "billing_account",
                              "sku",
                              "tag_value",
                              "tags"
                           ],
                           "type":"string"
                        },
                        "start_date":{
                           "description":"start date  in format yyyy-mm-dd",
                           "type":"string"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve cost and usage analysis",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/cost/report":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs in this format yyyy-mm-dd",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs in this format yyyy-mm-dd",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "LBM",
                     "3M",
                     "6M",
                     "MTD",
                     "BMTD",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"granularity valid value is monthly",
                  "enum":[
                     "monthly"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"how to group costs valid values are service | location | project | cost_type | sku | billing_account | tag_value | tags",
                  "enum":[
                     "service",
                     "location",
                     "project",
                     "cost_type",
                     "billing_account",
                     "sku",
                     "tag_value",
                     "tags"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter with location",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"location",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filters on project id",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"project_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter on billing account id",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"billing_account_id",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filters on service id",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"service",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filters on sku id",
                  "in":"query",
                  "name":"sku",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filters on cost_type",
                  "in":"query",
                  "items":{
                     "enum":[
                        "regular",
                        "tax",
                        "adjustment",
                        "rounding_error"
                     ],
                     "type":"string"
                  },
                  "name":"cost_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filters on commitment (reservation)",
                  "in":"query",
                  "name":"commitment",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "tag_keys":{
                           "description":"tag keys",
                           "oneOf":[
                              {
                                 "type":"string"
                              },
                              {
                                 "type":"array"
                              }
                           ]
                        },
                        "tags":{
                           "description":"tags value coul be string or array",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve cost and usage analysis",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"start date in the format yyyy-mm-dd",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"end date in the format yyyy-mm-dd",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"time zone",
                  "in":"query",
                  "required":false,
                  "time_zone":null,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"enable invoice details",
                  "in":"query",
                  "project_id":null,
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve invoices.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/invoices/{invoice_month}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"invoice month reference in the format yyyymm",
                  "in":"path",
                  "name":"invoice_month",
                  "required":"required",
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get invoice details.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/monthlycost":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "filters":{
                           "description":"filter for results",
                           "properties":{
                              "location":{
                                 "description":"location",
                                 "type":"string"
                              },
                              "project_id":{
                                 "description":"project id",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get monthly cost by service",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/projects":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get billing projects.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/recommendations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the rightsizing type, idle to get instance to terminate and underutilized to get instances to modify",
                  "enum":[
                     "idle_instances",
                     "underused_instances",
                     "unattached_disks",
                     "underused_disks",
                     "unassigned_reserved_ips",
                     "unused_images",
                     "too_old_snapshots",
                     "unused_sql_instances",
                     "sql_rightsizing",
                     "object_storage_optimization",
                     "bigquery_stale_tables"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the project id, defaut is principal project id provided in the credentials",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter by zones",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"zone",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve recommendations",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/recommendations/recommender":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the rightsizing type, idle to get instance to terminate and underutilized to get instances to modify",
                  "enum":[
                     "idle_instances",
                     "underused_instances",
                     "idle_disks",
                     "unassigned_reserved_ips",
                     "unused_images",
                     "sql_out_of_disk",
                     "idle_sql_instances",
                     "sql_overprovisioned_instances",
                     "managed_instance_group_machine_type",
                     "cloud_run",
                     "unattended_project",
                     "commitment_usage",
                     "spend_based_commitment"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the project id, defaut is principal project id provided in the credentials",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter by zones",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"zone",
                  "required":false,
                  "type":"array"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve recommendations via gcp recommender service, available only if you have the GCP Standard Support or higher",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/services":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get a list of billing services.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/billing/services/{service_id}/skus":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Service id (ex. DA34-426B-A397)",
                  "in":"path",
                  "name":"service_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Currency (ex. USD)",
                  "in":"query",
                  "name":"currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Start time (ex. 2014-10-02T15:01:23.045Z)",
                  "in":"query",
                  "name":"start_time",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"End time (ex. 2014-10-02T15:01:23.045Z)",
                  "in":"query",
                  "name":"end_time",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of all publicly available SKUs for a given cloud service.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "key_name":{
                           "description":"key_name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "key_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a keypair.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/keypairs/upload":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A unique name for the key pair",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The public key. For API calls, the text must be base64-encoded.",
                  "in":"query",
                  "name":"public_key",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Uploads the public key from an RSA key pair that you created with a third-party tool.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/keypairs/{key_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a keypair.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get projects.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "bucket":{
                           "description":"The name of an existing bucket in Cloud Storage where the usage report object is stored.",
                           "type":"string"
                        },
                        "report_name_prefix":{
                           "description":"An optional prefix for the name of the usage report object stored in bucketName.",
                           "type":"string"
                        }
                     },
                     "required":null,
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enables the usage export feature and sets the usage export bucket where reports are stored. If you provide an empty request body using this method, the usage export feature will be disabled.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/backendservice":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result The maximum number of results per page that should be returned. Acceptable values are 0 to 500, inclusive.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List BackendService resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/backendservice/{backendservice_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend service name",
                  "in":"path",
                  "name":"backendservice_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete BackendService resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/backendservices":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "affinity_cookie_ttl_sec":{
                           "description":"If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value is one day (86,400).",
                           "type":"number"
                        },
                        "backend_service_name":{
                           "description":"Backend service name",
                           "type":"string"
                        },
                        "backend_timeout":{
                           "description":"The backend service timeout has a different meaning depending on the type of load balancer.",
                           "type":"number"
                        },
                        "backends":{
                           "description":"The list of backends that serve this BackendService.",
                           "items":{
                              "properties":{
                                 "balancingMode":{
                                    "default":"UTILIZATION",
                                    "description":"When choosing a balancing mode, you need to consider the loadBalancingScheme, and protocol for the backend service, as well as the type of backend (instance group or NEG).",
                                    "enum":[
                                       "UTILIZATION",
                                       "CONNECTION",
                                       "RATE"
                                    ],
                                    "type":"string"
                                 },
                                 "capacityScaler":{
                                    "description":"A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1.",
                                    "type":"number"
                                 },
                                 "description":{
                                    "description":"An optional description of this resource. Provide this property when you create the resource.",
                                    "type":"string"
                                 },
                                 "group":{
                                    "description":"The fully-qualified URL of an instance group or network endpoint group (NEG) resource. (ex. \"https://www.googleapis.com/compute/v1/projects/prj-12/zones/europe-west4-b/instanceGroups/instance-group-22\")",
                                    "type":"string"
                                 },
                                 "maxConnections":{
                                    "description":"Defines a maximum target for simultaneous connections for the entire backend (instance group or NEG).",
                                    "type":"number"
                                 },
                                 "maxConnectionsPerEndpoint":{
                                    "description":"Defines a maximum target for simultaneous connections for an endpoint of a NEG.",
                                    "type":"number"
                                 },
                                 "maxConnectionsPerInstance":{
                                    "description":"Defines a maximum target for simultaneous connections for a single VM in a backend instance group. This is multiplied by the number of instances in the instance group to implicitly calculate a target maximum number of simultaneous connections for the whole instance group.",
                                    "type":"number"
                                 },
                                 "maxRate":{
                                    "description":"The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                                    "type":"number"
                                 },
                                 "maxRatePerEndpoint":{
                                    "description":"Defines a maximum target for requests per second (RPS) for an endpoint of a NEG. This is multiplied by the number of endpoints in the NEG to implicitly calculate a target maximum rate for the NEG.",
                                    "type":"number"
                                 },
                                 "maxRatePerInstance":{
                                    "description":"Defines a maximum target for requests per second (RPS) for a single VM in a backend instance group. This is multiplied by the number of instances in the instance group to implicitly calculate a target maximum rate for the whole instance group.",
                                    "type":"number"
                                 },
                                 "maxUtilization":{
                                    "description":"Defines the maximum average CPU utilization of a backend VM in an instance group. The valid range is [0.0, 1.0]. This is an optional parameter if the backend's balancingMode is UTILIZATION.",
                                    "type":"number"
                                 }
                              },
                              "required":[
                                 "group",
                                 "balancingMode"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "description":{
                           "description":"Options",
                           "type":"string"
                        },
                        "draining_timeout":{
                           "description":"The amount of time in seconds to allow existing connections to persist while on unhealthy backend VMs. Only applicable if the protocol is not UDP. The valid range is [0, 3600].",
                           "type":"number"
                        },
                        "enable_cdn":{
                           "description":"If true, enables Cloud CDN for the backend service. Only applicable if the loadBalancingScheme is EXTERNAL and the protocol is HTTP or HTTPS.",
                           "type":"boolean"
                        },
                        "healthchecks":{
                           "description":"The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. (ex. \"https://www.googleapis.com/compute/v1/projects/rpj-12/global/healthChecks/healthcheck12\")",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "lb_scheme":{
                           "default":"EXTERNAL",
                           "description":"Indicates whether the backend service will be used with internal or external load balancing.",
                           "enum":[
                              "EXTERNAL",
                              "INTERNAL"
                           ],
                           "type":"string"
                        },
                        "port_name":{
                           "description":"A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL and the backends are instance groups.",
                           "type":"string"
                        },
                        "session_affinity":{
                           "description":"Type of session affinity to use. The default is NONE. Session affinity is not applicable if the --protocol is UDP. Only for INTERNAL - CLIENT_IP_PROTO, CLIENT_IP_PORT_PROTO",
                           "enum":[
                              "NONE",
                              "CLIENT_IP",
                              "GENERATED_COOKIE",
                              "CLIENT_IP_PROTO",
                              "CLIENT_IP_PORT_PROTO"
                           ],
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create BackendService resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/healthchecks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result The maximum number of results per page that should be returned. Acceptable values are 0 to 500, inclusive.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List HealthChecks resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/healthchecks/{healthcheck_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Healthcheck service name",
                  "in":"path",
                  "name":"healthcheck_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete HealthChecks resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/targethttpproxies":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List Target Http Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "http_proxy_name":{
                           "description":"Name of the resource. Provided by the client when the resource is created",
                           "type":"string"
                        },
                        "urlmap_uri":{
                           "description":"URL to the UrlMap resource that defines the mapping from URL to the BackendService.",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Target Http Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/targethttpproxies/{http_proxy_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the resource. Provided by the client when the resource is created",
                  "in":"path",
                  "name":"http_proxy_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete Target Http Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/targethttpsproxies":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List Target Https Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "https_proxy_name":{
                           "description":"Name of the resource. Provided by the client when the resource is created",
                           "type":"string"
                        },
                        "ssl_certificates":{
                           "description":"URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "urlmap_uri":{
                           "description":"A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map * * https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map * projects/project/global/urlMaps/url-map * global/urlMaps/url-map",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Target Https Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/targethttpsproxies/{https_proxy_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the resource. Provided by the client when the resource is created",
                  "in":"path",
                  "name":"https_proxy_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete Target Https Proxies resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/urlmaps":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result The maximum number of results per page that should be returned. Acceptable values are 0 to 500, inclusive.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List UrlMaps resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "default_service":{
                           "description":"The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match.",
                           "type":"string"
                        },
                        "description":{
                           "description":"Options",
                           "type":"string"
                        },
                        "host_rules":{
                           "description":"The list of HostRules to use against the URL.",
                           "items":{
                              "properties":{
                                 "description":{
                                    "description":"An optional description of this resource. Provide this property when you create the resource.",
                                    "type":"string"
                                 },
                                 "hosts":{
                                    "description":"The list of host patterns to match.",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "pathMatcher":{
                                    "description":"The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.",
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "path_matchers":{
                           "description":"The list of named PathMatchers to use against the URL.",
                           "items":{
                              "properties":{
                                 "defaultService":{
                                    "description":"The full or partial URL to the BackendService resource. This will be used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource - *https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService *compute/v1/projects/project/global/backendServices/backendService *global/backendServices/backendService",
                                    "type":"string"
                                 },
                                 "description":{
                                    "description":"An optional description of this resource. Provide this property when you create the resource.",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"The name to which this PathMatcher is referred by the HostRule.",
                                    "type":"string"
                                 },
                                 "pathRules":{
                                    "description":"The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required.",
                                    "items":{
                                       "properties":{
                                          "paths":{
                                             "description":"The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or",
                                             "items":{
                                                "type":"string"
                                             },
                                             "type":"array"
                                          },
                                          "service":{
                                             "description":"The full or partial URL of the backend service resource to which traffic is directed if this rule is matched.",
                                             "type":"string"
                                          }
                                       },
                                       "type":"object"
                                    },
                                    "type":"array"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "urlmap_name":{
                           "description":"Healthcheck service name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create UrlMaps resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/elbs/urlmaps/{urlmap_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Healthcheck service name",
                  "in":"path",
                  "name":"urlmap_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete UrlMaps resource in the specified project using the data included in the request.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the list of firewall rules.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"New rules",
                           "items":{
                              "properties":{
                                 "action":{
                                    "default":"allow",
                                    "description":"Security Rule Access",
                                    "enum":[
                                       "allow",
                                       "deny"
                                    ],
                                    "type":"string"
                                 },
                                 "direction":{
                                    "default":"in",
                                    "description":"Security Rule Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "description":"Options",
                                    "properties":{
                                       "priority":{
                                          "default":200,
                                          "description":"Rules are processed in priority order; the lower the number, the higher the priority. (1000, 2000, 3000, etc.)",
                                          "type":"string"
                                       },
                                       "source_tags":{
                                          "type":"string"
                                       },
                                       "target_tags":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Security Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "any"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Source Ip Range (ex. 0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "security_group_id":{
                           "description":"security_group_id",
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"Vnet id or Vnet name",
                           "type":"string"
                        },
                        "vnet_name":{
                           "description":"Vnet name or Vnet id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a firewall rule.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"New rules",
                           "items":{
                              "properties":{
                                 "action":{
                                    "default":"allow",
                                    "description":"Security Rule Access",
                                    "enum":[
                                       "allow",
                                       "deny"
                                    ],
                                    "type":"string"
                                 },
                                 "direction":{
                                    "default":"in",
                                    "description":"Security Rule Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "description":"Options",
                                    "properties":{
                                       "priority":{
                                          "default":200,
                                          "description":"Rules are processed in priority order; the lower the number, the higher the priority. (1000, 2000, 3000, etc.)",
                                          "type":"string"
                                       },
                                       "source_tags":{
                                          "type":"string"
                                       },
                                       "target_tags":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Security Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "any"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Source Ip Range (ex. 0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "security_group_id":{
                           "description":"security_group_id",
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"Vnet id or Vnet name",
                           "type":"string"
                        },
                        "vnet_name":{
                           "description":"Vnet name or Vnet id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the specified firewall rule.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/firewalls/{firewall_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall name",
                  "in":"path",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified firewall.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall name",
                  "in":"path",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one firewall rules.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private images.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/images/{image_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Image name",
                  "in":"path",
                  "name":"image_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one private image.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a network.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one network.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of snapshots.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/global/snapshots/{snapshot_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot name",
                  "in":"path",
                  "name":"snapshot_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve specific snapshot.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot name.",
                  "in":"path",
                  "name":"snapshot_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "set_label",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"[set_label] Sets the labels (tags) on a snapshot. [delete] Deletes the specified Snapshot resource. Deleting a single snapshot might not necessarily delete all the data on that snapshot. ",
                     "properties":{
                        "label_finger_print":{
                           "description":"(set_label) The fingerprint of the previous set of labels for this resource, used to detect conflicts. Make a get() request to the resource to get the latest fingerprint. (ex. \"labelFingerprint\":\"SkXONPE6VvQ=\")",
                           "type":"string"
                        },
                        "tags":{
                           "description":"(set_label) A list of tags to apply for this resource. Each label key & value must comply with RFC1035.",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on a snapshot. [set_label, delete]",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/instances/monitoring":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Metrics",
                  "enum":[
                     "cpu_usage_time",
                     "cpu_utilization"
                  ],
                  "in":"query",
                  "name":"metrics",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The time stamp indicating the earliest data to be returned. ex, '2022-02-12T12:00:00Z'",
                  "in":"query",
                  "name":"start_time",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The time stamp indicating the latest data to be returned. ex, '2022-02-12T12:00:00Z'",
                  "in":"query",
                  "name":"end_time",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"query",
                  "name":"instance_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "aggregation":{
                           "description":"Describes how to combine multiple time series to provide a different view of the data.",
                           "properties":{
                              "alignmentPeriod":{
                                 "description":"The alignmentPeriod specifies a time interval, in seconds, that is used to divide the data in all the time series into consistent blocks of time.  The value must be at least 60 seconds ( 60s )",
                                 "type":"string"
                              },
                              "crossSeriesReducer":{
                                 "description":"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.",
                                 "enum":[
                                    "REDUCE_NONE",
                                    "REDUCE_MEAN",
                                    "REDUCE_MIN",
                                    "REDUCE_MAX",
                                    "REDUCE_SUM",
                                    "REDUCE_STDDEV",
                                    "REDUCE_COUNT",
                                    "REDUCE_COUNT_TRUE",
                                    "REDUCE_COUNT_FALSE",
                                    "REDUCE_FRACTION_TRUE",
                                    "REDUCE_PERCENTILE_99",
                                    "REDUCE_PERCENTILE_95",
                                    "REDUCE_PERCENTILE_50",
                                    "REDUCE_PERCENTILE_05"
                                 ],
                                 "type":"string"
                              },
                              "groupByFields":{
                                 "description":"The groupByFields determine how the time series are partitioned into subsets prior to applying the aggregation operation.",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "perSeriesAligner":{
                                 "description":"An Aligner describes how to bring the data points in a single time series into temporal alignment.",
                                 "enum":[
                                    "ALIGN_NONE",
                                    "ALIGN_DELTA",
                                    "ALIGN_RATE",
                                    "ALIGN_INTERPOLATE",
                                    "ALIGN_NEXT_OLDER",
                                    "ALIGN_MIN",
                                    "ALIGN_MAX",
                                    "ALIGN_MEAN",
                                    "ALIGN_COUNT",
                                    "ALIGN_SUM",
                                    "ALIGN_STDDEV",
                                    "ALIGN_COUNT_TRUE",
                                    "ALIGN_COUNT_FALSE",
                                    "ALIGN_FRACTION_TRUE",
                                    "ALIGN_PERCENTILE_99",
                                    "ALIGN_PERCENTILE_95",
                                    "ALIGN_PERCENTILE_50",
                                    "ALIGN_PERCENTILE_05",
                                    "ALIGN_PERCENT_CHANGE"
                                 ],
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "page_size":{
                           "description":"A positive number that is the maximum number of results to return. (100000)",
                           "type":"integer"
                        },
                        "secondary_aggregation":{
                           "description":"Apply a second aggregation after aggregation is applied. May only be specified if aggregation is specified.",
                           "properties":{
                              "alignmentPeriod":{
                                 "description":"The alignmentPeriod specifies a time interval, in seconds, that is used to divide the data in all the time series into consistent blocks of time.  The value must be at least 60 seconds ( 60s )",
                                 "type":"string"
                              },
                              "crossSeriesReducer":{
                                 "description":"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.",
                                 "enum":[
                                    "REDUCE_NONE",
                                    "REDUCE_MEAN",
                                    "REDUCE_MIN",
                                    "REDUCE_MAX",
                                    "REDUCE_SUM",
                                    "REDUCE_STDDEV",
                                    "REDUCE_COUNT",
                                    "REDUCE_COUNT_TRUE",
                                    "REDUCE_COUNT_FALSE",
                                    "REDUCE_FRACTION_TRUE",
                                    "REDUCE_PERCENTILE_99",
                                    "REDUCE_PERCENTILE_95",
                                    "REDUCE_PERCENTILE_50",
                                    "REDUCE_PERCENTILE_05"
                                 ],
                                 "type":"string"
                              },
                              "groupByFields":{
                                 "description":"The groupByFields determine how the time series are partitioned into subsets prior to applying the aggregation operation.",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "perSeriesAligner":{
                                 "description":"An Aligner describes how to bring the data points in a single time series into temporal alignment.",
                                 "enum":[
                                    "ALIGN_NONE",
                                    "ALIGN_DELTA",
                                    "ALIGN_RATE",
                                    "ALIGN_INTERPOLATE",
                                    "ALIGN_NEXT_OLDER",
                                    "ALIGN_MIN",
                                    "ALIGN_MAX",
                                    "ALIGN_MEAN",
                                    "ALIGN_COUNT",
                                    "ALIGN_SUM",
                                    "ALIGN_STDDEV",
                                    "ALIGN_COUNT_TRUE",
                                    "ALIGN_COUNT_FALSE",
                                    "ALIGN_FRACTION_TRUE",
                                    "ALIGN_PERCENTILE_99",
                                    "ALIGN_PERCENTILE_95",
                                    "ALIGN_PERCENTILE_50",
                                    "ALIGN_PERCENTILE_05",
                                    "ALIGN_PERCENT_CHANGE"
                                 ],
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "view":{
                           "description":"FULL Returns the identity of the metric(s), the time series, and the time series data. HEADERS Returns the identity of the metric and the time series resource, but not the time series data.",
                           "enum":[
                              "FULL",
                              "HEADERS"
                           ],
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retreive instance monitoring data.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/elbs":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. europe-west4) (to create ip address)",
                  "in":"path",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"A HTTP(S) load balancer has 3 parts. 1) Backend configuration- Create or select a backend service for incoming traffic. You can add multiple backend services and backend buckets to serve different types of content. 2) Host and path rules- Host and path rules determine how your traffic will be directed. You can direct traffic to a backend service or a storage bucket. Any traffic not explicitly matched with a host and path rule will be sent to the default service selected on the first row. 3) Frontend configuration- Specify an IP address, port and protocol. This IP address is the frontend IP for your clients requests. For SSL, a certificate must also be assigned.",
                     "properties":{
                        "backend_port":{
                           "description":"Deprecated in favor of portName. The TCP port to connect on the backend.",
                           "type":"number"
                        },
                        "backend_protocol":{
                           "default":"HTTP",
                           "description":"The protocol this BackendService uses to communicate with backends.Possible values are HTTP, HTTPS, TCP, SSL, or UDP",
                           "enum":[
                              "HTTP",
                              "HTTPS",
                              "TCP",
                              "SSL",
                              "UDP"
                           ],
                           "type":"string"
                        },
                        "backend_service":{
                           "description":"Backend service name",
                           "type":"string"
                        },
                        "check_exists":{
                           "default":true,
                           "description":"Check exists",
                           "type":"boolean"
                        },
                        "forwarding_rule":{
                           "description":"Forwarding rule name.",
                           "type":"string"
                        },
                        "frontip":{
                           "description":"Name of the IP address",
                           "type":"string"
                        },
                        "health_check":{
                           "description":"Health checks are used for most GCP load balancers and managed instance group auto-healing",
                           "items":{
                              "properties":{
                                 "healthy_threshold":{
                                    "description":"A so-far unhealthy instance will be marked healthy after this many consecutive successes.",
                                    "type":"number"
                                 },
                                 "interval":{
                                    "description":"How often (in seconds) to send a health check.",
                                    "type":"number"
                                 },
                                 "label":{
                                    "description":"Name of the resource. Provided by the client when the resource is created.",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "port_name":{
                                          "description":"Port name as defined in InstanceGroup#NamedPort#name. If both port and portName are defined, port takes precedence.",
                                          "type":"string"
                                       },
                                       "port_specification":{
                                          "description":"Specifies how port is selected for health checking.",
                                          "type":"string"
                                       }
                                    },
                                    "required":[
                                       null
                                    ],
                                    "type":"object"
                                 },
                                 "port":{
                                    "description":"The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.",
                                    "type":"number"
                                 },
                                 "protocol":{
                                    "description":"Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2",
                                    "enum":[
                                       "TCP",
                                       "SSL",
                                       "HTTP",
                                       "HTTPS",
                                       "HTTP2"
                                    ],
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required.",
                                    "type":"string"
                                 },
                                 "timeout":{
                                    "description":"How long (in seconds) to wait before claiming failure.",
                                    "type":"number"
                                 },
                                 "unhealthy_threshold":{
                                    "description":"A so-far healthy instance will be marked unhealthy after this many consecutive failures.",
                                    "type":"number"
                                 }
                              },
                              "required":[
                                 "label",
                                 "protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "description":"listener",
                           "items":{
                              "properties":{
                                 "instance_group":{
                                    "description":"Contains instances that handle requests directed to the backend service through a specific set of ports.",
                                    "type":"string"
                                 },
                                 "instance_port":{
                                    "description":"A comma-separated list of ports that the backend will receive requests through.",
                                    "type":"number"
                                 },
                                 "option":{
                                    "properties":{
                                       "balancing_mode":{
                                          "default":"UTILIZATION",
                                          "description":"Specifies the balancing mode for the backend.",
                                          "enum":[
                                             "CONNECTION",
                                             "RATE",
                                             "UTILISATION"
                                          ],
                                          "type":"string"
                                       },
                                       "capacity_scaler":{
                                          "description":"A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity.",
                                          "type":"number"
                                       },
                                       "instance_port_name":{
                                          "description":"A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL and the backends are instance groups. The named port must be defined on each backend instance group.",
                                          "type":"string"
                                       },
                                       "max_connection":{
                                          "description":"Defines a maximum target for simultaneous connections for the entire backend (instance group or NEG).",
                                          "type":"number"
                                       },
                                       "max_connection_per_endpoint":{
                                          "description":"Defines a maximum target for simultaneous connections for an endpoint of a NEG.",
                                          "type":"number"
                                       },
                                       "max_connection_per_instance":{
                                          "description":"Defines a maximum target for simultaneous connections for a single VM in a backend instance group.",
                                          "type":"number"
                                       },
                                       "max_rate":{
                                          "description":"The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                                          "type":"number"
                                       },
                                       "max_rate_per_endpoint":{
                                          "description":"Defines a maximum target for requests per second (RPS) for an endpoint of a NEG.",
                                          "type":"number"
                                       },
                                       "max_rate_per_instance":{
                                          "description":"Defines a maximum target for requests per second (RPS) for a single VM in a backend instance group.",
                                          "type":"number"
                                       },
                                       "max_utilization":{
                                          "description":"Defines the maximum average CPU utilization of a backend VM in an instance group. The valid range is [0.0, 1.0]. This is an optional parameter if the backend's balancingMode is UTILIZATION.",
                                          "type":"number"
                                       }
                                    },
                                    "required":[
                                       null
                                    ],
                                    "type":"object"
                                 },
                                 "zone":{
                                    "description":"Zone (ex. europe-west4-c)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "instance_group",
                                 "zone"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"ELB name/reference",
                           "type":"string"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "backend_affinity_coookie_ttl":{
                                 "description":"If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value is one day (86,400).",
                                 "type":"number"
                              },
                              "backend_affinity_session":{
                                 "description":"Type of session affinity to use. The default is NONE. Session affinity is not applicable if the --protocol is UDP.",
                                 "enum":[
                                    "NONE",
                                    "CLIENT_IP",
                                    "GENERATED_COOKIE"
                                 ],
                                 "type":"string"
                              },
                              "backend_draining_timeout":{
                                 "description":"The amount of time in seconds to allow existing connections to persist while on unhealthy backend VMs. Only applicable if the protocol is not UDP. The valid range is [0, 3600].",
                                 "type":"number"
                              },
                              "backend_port_name":{
                                 "description":"A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL and the backends are instance groups. The named port must be defined on each backend instance group",
                                 "type":"string"
                              },
                              "backend_timeout":{
                                 "description":"The backend service timeout has a different meaning depending on the type of load balancer.",
                                 "type":"string"
                              },
                              "path_matcher":{
                                 "description":"The name to which this PathMatcher is referred by the HostRule.",
                                 "type":"string"
                              },
                              "ssl_certificates":{
                                 "description":"SSL certificates if HTTPS",
                                 "type":"string"
                              },
                              "urlmap":{
                                 "description":"urlmap",
                                 "type":"string"
                              }
                           },
                           "required":[
                              null
                           ],
                           "type":"object"
                        },
                        "proxy":{
                           "description":"Name of the resource.",
                           "type":"string"
                        },
                        "type":{
                           "description":"Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other. Possible values are INTERNAL and EXTERNAL.",
                           "enum":[
                              "INTERNAL",
                              "EXTERNAL"
                           ],
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"Network ID",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "frontip"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"HTTP/HTTPS Load balancing.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/networks":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"Cidr block (ex. 10.0.0.0/16)",
                           "type":"string"
                        },
                        "name":{
                           "description":"Network name",
                           "type":"string"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "auto_create_subnetworks":{
                                 "default":false,
                                 "type":"boolean"
                              },
                              "description":{
                                 "type":"string"
                              },
                              "routing_mode":{
                                 "default":"REGIONAL",
                                 "enum":[
                                    "GLOBAL",
                                    "REGIONAL"
                                 ],
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "cidr_block":{
                                 "description":"subnet cidr (ex. 10.0.0.0/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"subnet name",
                                 "type":"string"
                              },
                              "option":{
                                 "description":"Options",
                                 "properties":{
                                    "description":{
                                       "type":"string"
                                    },
                                    "enable_flow_logs":{
                                       "default":false,
                                       "type":"boolean"
                                    },
                                    "privateip_google_access":{
                                       "default":false,
                                       "type":"boolean"
                                    },
                                    "secondary_ip_range":{
                                       "type":"string"
                                    },
                                    "secondary_ip_range_name":{
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "cidr_block"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "name",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a network.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/networks/{network_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "add",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"subnet cidr (ex. 10.0.0.0/24)",
                           "type":"string"
                        },
                        "description":{
                           "description":"Options",
                           "type":"string"
                        },
                        "enable_flow_logs":{
                           "default":false,
                           "type":"boolean"
                        },
                        "ip_version":{
                           "description":"Ip version",
                           "type":"string"
                        },
                        "privateip_google_access":{
                           "default":false,
                           "type":"boolean"
                        },
                        "secondary_ip_range":{
                           "type":"string"
                        },
                        "secondary_ip_range_name":{
                           "type":"string"
                        },
                        "subnet_name":{
                           "description":"Subnet name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "subnet_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on network. [add, delete]",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of public ips.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "address_name":{
                           "description":"Address name (Public ip name)",
                           "type":"string"
                        },
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "ip_version":{
                           "default":"IPV4",
                           "description":"IP Version is not supported for regional addresses.",
                           "enum":[
                              "IPV4",
                              "IPV6"
                           ],
                           "type":"string"
                        },
                        "network_tier":{
                           "default":"PREMIUM",
                           "description":"Network service tier",
                           "enum":[
                              "PREMIUM",
                              "STANDARD"
                           ],
                           "type":"string"
                        },
                        "private_address":{
                           "description":"Private address",
                           "type":"string"
                        },
                        "type":{
                           "default":"regional",
                           "description":"type regional/global",
                           "enum":[
                              "regional"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "address_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a public IP.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/publicips/{publicip_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public ip id. (ex. 1491596153604118786).",
                  "in":"path",
                  "name":"publicip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a public IP.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/publicips/{publicip_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public ip name",
                  "in":"path",
                  "name":"publicip_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve specified public ip.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of subnets.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/regions/{region}/subnets/{subnet_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. europe-west4)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet name",
                  "in":"path",
                  "name":"subnet_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one subnet.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result (ex. 20)",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/flavors/{flavor_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Flavor (ex. f1-micro)",
                  "in":"path",
                  "name":"flavor_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one flavor.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/instancegroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instance groups.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "group_name":{
                           "description":"Group name",
                           "type":"string"
                        },
                        "named_ports":{
                           "description":"Named ports (ex. {name:\"http\", port:80})",
                           "items":{
                              "properties":{
                                 "name":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name",
                                 "port"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "network_uri":{
                           "description":"Network uri (ex. \"https://www.googleapis.com/compute/v1/projects/xxxxxx/global/networks/mynetwork\")",
                           "type":"string"
                        }
                     },
                     "required":[
                        "group_name",
                        "network_uri"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an instance group.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/instancegroups/{group_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Group name",
                  "in":"path",
                  "name":"group_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified instance group. The instances in the group are not deleted.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/instances/{instance_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance name",
                  "in":"path",
                  "name":"instance_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one instance.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone.  (ex. europe-west2-a)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance name.",
                  "in":"path",
                  "name":"instance_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "start",
                     "stop",
                     "reset",
                     "restart",
                     "delete",
                     "snapshot",
                     "resize"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "flavor_id":{
                           "description":"(resize) You must stop the VM instance to edit its machine type. Full or partial URL of the machine type resource (ex. zones/europe-west4-c/machineTypes/n1-standard-2)",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        },
                        "tags":{
                           "description":"(snapshot) Tags (max 10)",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [start, stop, reset, restart, delete, snapshot, resize].",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Name",
                           "type":"string"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "source_image":{
                                 "description":"Source image",
                                 "type":"string"
                              },
                              "source_snapshot":{
                                 "description":"Source snapshot",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "size":{
                           "description":"Size in (GB)",
                           "type":"string"
                        },
                        "tag":{
                           "description":"Tags (max 10)",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "default":"pd-ssd",
                           "description":"type",
                           "enum":[
                              "pd-standard",
                              "pd-ssd"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "size",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a volume.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/volumes/types":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Max result",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page token",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume types.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/volumes/types/{volume_type}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume type (ex. local-ssd)",
                  "in":"path",
                  "name":"volume_type",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one volume type.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id. (ex. 8443300416408457929).",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete volume.",
            "tags":[
               "provider/googlecloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"attach",
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "auto_delete":{
                           "default":false,
                           "description":"(attach) Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                           "type":"boolean"
                        },
                        "boot":{
                           "default":false,
                           "description":"(attach) Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                           "type":"boolean"
                        },
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"(attach) If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks. (detach) The device name of the disk to detach. Make a get() request on the instance to view currently attached disks and device names. (ex. \"deviceName\":\"persistent-disk-1\")",
                           "type":"string"
                        },
                        "force_attach":{
                           "default":false,
                           "description":"(attach) Whether to force attach the disk even if it's currently attached to another instance.",
                           "type":"boolean"
                        },
                        "instance_name":{
                           "description":"(attach, detach) Instance name.",
                           "type":"string"
                        },
                        "interface":{
                           "description":"(attach) Specifies the disk interface to use for attaching this disk.",
                           "enum":[
                              "SCSI",
                              "NVME"
                           ],
                           "type":"string"
                        },
                        "mode":{
                           "default":"READ_WRITE",
                           "description":"(attach) The mode in which to attach this disk.",
                           "enum":[
                              "READ_WRITE",
                              "READ_ONLY"
                           ],
                           "type":"string"
                        },
                        "type":{
                           "default":"PERSISTENT",
                           "description":"(attach) Specifies the type of the disk.",
                           "enum":[
                              "PERSISTENT",
                              "SCRATCH"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "instance_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attaches/Detaches an existing Disk resource to/from an instance.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/projects/{project_id}/zones/{zone}/volumes/{volume_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the zone. (ex. europe-west4-c)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume name",
                  "in":"path",
                  "name":"volume_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve one volume.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of regions.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/googlecloud/{uuid}/zones":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of zones.",
            "tags":[
               "provider/googlecloud"
            ]
         }
      },
      "/v2.0/provider/inventory/scheduler":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"scheduled inventory id",
                  "in":"query",
                  "name":"id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List scheduled inventories",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/inventory/scheduler/{inventory_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"scheduled inventory id",
                  "in":"path",
                  "name":"inventory_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "force":{
                           "description":"force the delete action",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete scheduled inventory.",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/inventory/scheduler/{uuid}":{
         "post":{
            "parameters":[
               {
                  "description":"inventory uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"inventory action",
                  "enum":[
                     "scan'",
                     "get_stat",
                     "get_content",
                     "get_next",
                     "get_error",
                     "init_scheduler",
                     "proper_scheduler",
                     "next_trigger"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"action parameters",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action on scheduled inventory",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/inventory/storage":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"storage inventory id",
                  "in":"query",
                  "name":"id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway"
                  ],
                  "in":"query",
                  "name":"provider",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"provider tenant id",
                  "in":"query",
                  "name":"tenant",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"storage inventory type",
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get storage inventories",
            "tags":[
               "provider/inventory"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "depth":{
                           "description":"number of data archive to store",
                           "type":"integer"
                        },
                        "description":{
                           "description":"inventory description",
                           "type":"string"
                        },
                        "name":{
                           "description":"inventory storage name",
                           "type":"string"
                        },
                        "provider":{
                           "description":"type string or object, provider targets, valid value 'all' for type string",
                           "type":"string"
                        },
                        "ttl":{
                           "description":"time to live to apply for the archive",
                           "type":"integer"
                        },
                        "type":{
                           "description":"inventory storage type",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "202":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "uuid":{
                           "description":"inventory uuid",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Store resource inventory",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/inventory/storage/{inventory_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"storage inventory id",
                  "in":"path",
                  "name":"inventory_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "force":{
                           "description":"force the delete action",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete storage inventory.",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/inventory/storage/{uuid}":{
         "post":{
            "parameters":[
               {
                  "description":"inventory uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"inventory action",
                  "enum":[
                     "put_data",
                     "replace_data",
                     "get_content",
                     "get_next",
                     "get_last",
                     "get_previous",
                     "purge"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"action parameters",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "properties":{
                        "data":{
                           "description":"data to store",
                           "type":"object"
                        },
                        "next_token":{
                           "description":"token, this param is valid for get_previous action",
                           "type":"string"
                        },
                        "time_zone":{
                           "description":"time zone",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action on storage inventory",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/budgets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Budget name",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get budgets.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "amount":{
                           "description":"The total amount of cost to track with the budget. (106.65)",
                           "type":"number"
                        },
                        "end_date":{
                           "description":"(2019-10-01 00:00:00.0) The day the budget stops evaluating and/or alerting and becomes expired.",
                           "type":"string"
                        },
                        "meters":{
                           "description":"The list of filters on meters (GUID), mandatory for budgets of usage category. (00000000-0000-0000-0000-000000000000)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"Budget name",
                           "type":"string"
                        },
                        "notifications":{
                           "description":"Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
                           "items":{
                              "properties":{
                                 "comparison_operator":{
                                    "description":"required 'EqualTo', 'GreaterThan', 'GreaterThanOrEqualTo'",
                                    "enum":[
                                       "EqualTo",
                                       "GreaterThan",
                                       "GreaterThanOrEqualTo"
                                    ],
                                    "type":"string"
                                 },
                                 "contact_emails":{
                                    "description":"List of Email addresses to send the budget notification to when the threshold is exceeded. [\"johndoe1@contoso.com\", \"johndoe2@contoso.com\"]",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "contact_groups":{
                                    "description":"Action groups to send the budget notification to when the threshold is exceeded.",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "contact_roles":{
                                    "description":"Contact roles to send the budget notification to when the threshold is exceeded. [\"Contributor\", \"Reader\"]",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "enable_notification":{
                                    "description":"The notification is enabled or not. (true/false)",
                                    "type":"boolean"
                                 },
                                 "notification_name":{
                                    "description":"Notification name",
                                    "type":"string"
                                 },
                                 "threshold":{
                                    "description":"threshold required is always percent and has to be between 0 and 100",
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 "notification_name",
                                 "threshold",
                                 "comparison_operator"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "period":{
                           "description":"required The time window analyzed by the budget. At the beginning of each new period the cost evaluated will start at zero.",
                           "enum":[
                              "monthly",
                              "quarterly",
                              "annually"
                           ],
                           "type":"string"
                        },
                        "resource_groups":{
                           "description":"The list of filters on resource groups, allowed at subscription level only.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "resources":{
                           "description":"option example [\"/subscriptions/{subscription-id}/resourceGroups/MYDEVTESTRG/providers/Microsoft.Compute/virtualMachines/MYVM2\"]",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "scope":{
                           "description":"The scope associated with budget operations. ('providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.)",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"(2018-10-01 00:00:00.0) The first day of the first budget evaluation period. Subsequent evaluation periods will begin on the same day of the month moving forward.",
                           "type":"string"
                        },
                        "tags":{
                           "description":"option A list of tags to assign to the load balancer. exemple \"{\"category\":[ \"Dev\", \"Prod\" ], \"department\":[ \"engineering\", \"sales\"] }\"",
                           "properties":{
                              "key":{
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "description":"The category of the budget, whether the budget tracks cost or usage.",
                           "enum":[
                              "cost",
                              "usage"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "type",
                        "amount",
                        "period",
                        "start_date",
                        "end_date",
                        "notifications"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the budget.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/budgets/{name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Budget name",
                  "in":"path",
                  "name":"name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the budget.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/cost/analysis":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "aggregation":{
                           "description":"data aggregation",
                           "enum":[
                              "PreTaxCost",
                              "Cost",
                              "CostUS",
                              "PreTaxCostUSD"
                           ],
                           "type":"string"
                        },
                        "billing_period_type":{
                           "description":"valid values  invoice | billing_period | custom",
                           "enum":[
                              "invoice",
                              "billing_period",
                              "custom"
                           ],
                           "type":"string"
                        },
                        "charge_type":{
                           "description":"filter by charge type, reservation purchases and refunds are available only when using actual costs and not when using amortized costs. Unused reservation costs are available only when looking at amortized costs",
                           "items":{
                              "enum":[
                                 "purchase",
                                 "usage",
                                 "unusedreservation",
                                 "refund"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "customer":{
                           "description":"the customer name, this option is available only for CSP accounts",
                           "type":"string"
                        },
                        "end_date":{
                           "description":"end_date (ex. 2019-06-24)",
                           "type":"string"
                        },
                        "filters":{
                           "description":"the filter expression to be used",
                           "oneOf":[
                              {
                                 "type":"string"
                              },
                              {
                                 "type":"object"
                              }
                           ]
                        },
                        "granularity":{
                           "description":"the granularity of consumptions, valid values are Daily | Monthly",
                           "enum":[
                              "Daily",
                              "Monthly"
                           ],
                           "type":"string"
                        },
                        "groupby":{
                           "description":"group cost by category",
                           "oneOf":[
                              {
                                 "enum":[
                                    "resource_group",
                                    "service",
                                    "resource_type",
                                    "location",
                                    "resource_id",
                                    "resource_guid",
                                    "invoice_id",
                                    "invoice_section_id",
                                    "customer_domain_name",
                                    "subscription",
                                    "customer",
                                    "charge_type",
                                    "reservation_id",
                                    "reservation_name",
                                    "pricing_model",
                                    "product",
                                    "provider",
                                    "meter",
                                    "publisher_type"
                                 ],
                                 "type":"string"
                              },
                              {
                                 "type":"object"
                              }
                           ]
                        },
                        "metric":{
                           "description":"metric usage",
                           "enum":[
                              "ActualCost",
                              "AmortizedCost"
                           ],
                           "type":"string"
                        },
                        "partner_earned_credit":{
                           "description":"filter by partner_earned_credit",
                           "type":"boolean"
                        },
                        "pricing_model":{
                           "description":"filter by pricing model",
                           "items":{
                              "enum":[
                                 "ondemand",
                                 "reservation",
                                 "spot"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "publisher":{
                           "description":"filter by publisher",
                           "items":{
                              "enum":[
                                 "azure",
                                 "marketplace"
                              ],
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "region":{
                           "description":"filter by locations/regions",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "scope":{
                           "description":"scope of the query, This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"start date (ex. 2019-06-14)",
                           "type":"string"
                        },
                        "subscriptions_id":{
                           "description":"the subscription id scope",
                           "type":"string"
                        },
                        "subscriptions_ids":{
                           "description":"the subscriptions id to filter",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "timeframe":{
                           "description":"The time frame for pulling data consumptions, valid values are BillingMonthToDate | Custom | MonthToDate | BillingMonthToDate | TheLastBillingMonth | TheLastMonth | WeekToDate.If custom start_date and end_date must be provided",
                           "enum":[
                              "Custom",
                              "MonthToDate",
                              "TheLastBillingMonth",
                              "TheLastMonth",
                              "WeekToDate",
                              "BillingMonthToDate"
                           ],
                           "type":"string"
                        },
                        "untagged":{
                           "description":"filter to get cost for only untagged resources",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "metric"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform cost analysis.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/cost/forecast":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "filters":{
                           "description":"May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
                           "type":"string"
                        },
                        "metric":{
                           "description":"metric usage, valid values are ActualCost | amortizedcost | usage",
                           "type":"string"
                        },
                        "scope":{
                           "description":"scope of the query, This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope",
                           "type":"string"
                        }
                     },
                     "required":[
                        "metric"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get cost and usage forecast.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/cost/report":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"ActualCost",
                  "description":"The type of the query",
                  "enum":[
                     "ActualCost",
                     "AmortizedCost"
                  ],
                  "in":"query",
                  "name":"metric",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "LBM",
                     "3M",
                     "6M",
                     "MTD",
                     "BMTD",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"how to group costs",
                  "in":"query",
                  "items":{
                     "enum":[
                        "service",
                        "resource_group",
                        "resource_type",
                        "resource",
                        "resource_id",
                        "location",
                        "pricing_model",
                        "charge_type",
                        "publisher_type",
                        "subscription",
                        "reservation_id",
                        "reservation_name",
                        "customer"
                     ],
                     "type":"string"
                  },
                  "name":"groupby",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"use pretaxcost to get cost before tax",
                  "enum":[
                     "pretaxcost",
                     "cost"
                  ],
                  "in":"query",
                  "name":"aggregation",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter by pricing model",
                  "in":"query",
                  "items":{
                     "enum":[
                        "ondemand",
                        "reservation",
                        "spot"
                     ],
                     "type":"string"
                  },
                  "name":"pricing_model",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter by charge type, reservation purchases and refunds are available only when using actual costs and not when using amortized costs. Unused reservation costs are available only when looking at amortized costs",
                  "in":"query",
                  "items":{
                     "enum":[
                        "purchase",
                        "usage",
                        "unusedreservation",
                        "refund"
                     ],
                     "type":"string"
                  },
                  "name":"charge_type",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter by publisher",
                  "in":"query",
                  "items":{
                     "enum":[
                        "azure",
                        "marketplace"
                     ],
                     "type":"string"
                  },
                  "name":"publisher",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter by locations/regions",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"region",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the customer name, this option is available only for CSP accounts",
                  "in":"query",
                  "name":"customer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the subscription id scope",
                  "in":"query",
                  "name":"subscriptions_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the subscriptions id to filter",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"subscriptions_ids",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter by partner_earned_credit",
                  "in":"query",
                  "name":"partner_earned_credit",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"filter to get cost for only untagged resources",
                  "in":"query",
                  "name":"untagged",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "groupby_tags":{
                           "description":"group by tag key values",
                           "type":"object"
                        },
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a cost report summary.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"data format, valid only for direct type account",
                  "in":"query",
                  "name":"raw",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"to get invoice download url, valid only for direct type account",
                  "in":"query",
                  "name":"download_url",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"start invoices period date",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"end invoices period date",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get Invoices.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/invoices/{invoice}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"invoice name",
                  "in":"path",
                  "name":"invoice",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get invoice.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/offers":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of MS Offers.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/periods":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get billing periods.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/rates":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"MS Offer number (ex. 0023P, see action Retrieve a list of MS Offers.)",
                  "in":"query",
                  "name":"offer_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"USD",
                  "description":"Currency (ex.USD, EUR)",
                  "in":"query",
                  "name":"currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"US",
                  "description":"Region Info (ex. US, FR)",
                  "in":"query",
                  "name":"regioninfo",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"en-US",
                  "description":"Locale (ex. en-US, fr-FR)",
                  "in":"query",
                  "name":"locale",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Rates.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/recommendations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"filter on resource group",
                  "in":"query",
                  "name":"resource_group",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on billing_account_name, only supported for CSP account",
                  "in":"query",
                  "name":"billing_account_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on customer_name, only supported for CSP account",
                  "in":"query",
                  "name":"customer_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on subscription_ids, if empty by default all subscriptions are requested",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"subscription_ids",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the properties scope",
                  "enum":[
                     "rightsizing",
                     "sql_to_hb",
                     "mysql_to_ri",
                     "idle_instances",
                     "incorrect_stopped_instances",
                     "instances_with_licence_to_hb",
                     "instances_scaleset_to_ri",
                     "postgre_to_ri",
                     "instances_to_ri",
                     "unattached_disks",
                     "too_old_snapshots",
                     "premium_snapshots",
                     "unassigned_reserved_ips",
                     "unused_load_balancers",
                     "unused_sql_databases",
                     "unused_mysql_servers",
                     "unused_postgresql_servers",
                     "unused_mariadb_servers",
                     "orphaned_backups",
                     "unused_storage_accounts",
                     "idle_vpn_gateways",
                     "blob_storage_optimization"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve rightsizing recommendations.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/reservation/cost":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"ActualCost",
                  "description":"The type of the query",
                  "enum":[
                     "ActualCost",
                     "AmortizedCost"
                  ],
                  "in":"query",
                  "name":"metric",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving costs (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving costs if provided start_date and end_date are ignored",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "LBM",
                     "3M",
                     "6M",
                     "MTD",
                     "BMTD",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"how to group costs",
                  "in":"query",
                  "items":{
                     "enum":[
                        "service",
                        "resource_group",
                        "resource_type",
                        "resource",
                        "resource_id",
                        "location",
                        "reservation_name",
                        "customer"
                     ],
                     "type":"string"
                  },
                  "name":"groupby",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"use pretaxcost to get cost before tax",
                  "enum":[
                     "pretaxcost",
                     "cost"
                  ],
                  "in":"query",
                  "name":"aggregation",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter by locations/regions",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"region",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the customer name, this option is available only for CSP accounts",
                  "in":"query",
                  "name":"customer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the subscription id for scope",
                  "in":"query",
                  "name":"subscriptions_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"list of subscriptions id to filter on",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"subscriptions_ids",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"filter to get cost for only untagged resources",
                  "in":"query",
                  "name":"untagged",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "groupby_tags":{
                           "description":"group by tag key values",
                           "type":"object"
                        },
                        "tag_keys":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag key values",
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve reservations cost summary.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/reservation/coverage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"monthly",
                  "description":"can be daily or monthly",
                  "enum":[
                     "daily",
                     "monthly"
                  ],
                  "in":"query",
                  "name":"grain",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving coverage (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving coverage (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving coverage, if provided the params start_date and end_date are ignored",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"reservation Order Id GUID. Required if reservation_id is provided. Filter to a specific reservation order",
                  "in":"query",
                  "name":"reservation_order_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"reservation Id GUID. Only valid if reservation_order_id is also provided. Filter to a specific reservation",
                  "in":"query",
                  "name":"reservation_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve reservations coverage, valid only for CSP (Partener Center) and EA (Entreprise Agreement) accounts",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/reservation/estimatedsaving":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the properties scope",
                  "enum":[
                     "Single",
                     "Shared"
                  ],
                  "in":"query",
                  "name":"scope_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the properties resource type default is  VirtualMachines",
                  "enum":[
                     "VirtualMachines",
                     "SQLDatabases",
                     "PostgreSQL",
                     "ManagedDisk",
                     "MySQL",
                     "RedHat",
                     "MariaDB",
                     "RedisCache",
                     "CosmosDB",
                     "SqlDataWarehouse",
                     "SUSELinux",
                     "AppService",
                     "BlockBlob",
                     "AzureDataExplorer",
                     "VMwareCloudSimple"
                  ],
                  "in":"query",
                  "name":"resource_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the properties look back period default is 7D",
                  "enum":[
                     "7D",
                     30,
                     "60D"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on subscription_ids, by default it take your default subscriptions",
                  "in":"query",
                  "items":{
                     "type":"string"
                  },
                  "name":"subscription_ids",
                  "required":false,
                  "type":"array"
               },
               {
                  "description":"the customer name, this option is available only for CSP accounts",
                  "in":"query",
                  "name":"customer",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve recommendations for which reservations to purchase to maximize your estimated savings.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/reservation/usage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the start date for retrieving utilization (ex. 2019-09-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the end date for retrieving utilization (ex. 2019-09-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving utilization, if provided the params start_date and end_date are ignored",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"reservation Order Id GUID. Required if reservation_id is provided. Filter to a specific reservation order, valid only for CSP or EA account",
                  "in":"query",
                  "name":"reservation_order_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"reservation Id GUID. Only valid if reservation_order_id is also provided. Filter to a specific reservation, valid only for CSP or EA account",
                  "in":"query",
                  "name":"reservation_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve reservations utilization",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/services":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get billing supported services.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/usages":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"the period for retrieving usages, if provided the params start_date and end_date are ignored",
                  "enum":[
                     "1D",
                     "7D",
                     "CM",
                     "LM",
                     "3M",
                     "6M",
                     "YTD",
                     "1Y"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"start date (ex. 2019-06-14)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"end_date (ex. 2019-06-24)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"subscription scope",
                  "in":"query",
                  "name":"subscription_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get usages.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/billing/usages/service":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Service",
                  "enum":[
                     "compute",
                     "network",
                     "storage"
                  ],
                  "in":"query",
                  "name":"service",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource (ex. virtualMachines for compute service, VirtualNetworks for network service, storageAccounts for storage service)",
                  "in":"query",
                  "name":"resource",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"subscription id",
                  "in":"query",
                  "name":"subscription_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a usages by service and resource.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":true,
                  "description":"resource group",
                  "in":"query",
                  "name":"resource_group_name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of All Firewalls.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Keypairs.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Keypair Name",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Keypair.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/keypairs/upload":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A unique name for the key pair",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The public key. For API calls, the text must be base64-encoded.",
                  "in":"query",
                  "name":"public_key",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Uploads the public key from an RSA key pair that you created with a third-party tool.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Quotas.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Regions (Locations).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"query",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "tag":{
                           "description":"Tags",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              },
                              "key2":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Resource Group.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Flavors for the Region.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Images.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/images/offers":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Publisher Name (see Retrieve a list of Image Publishers)",
                  "in":"query",
                  "name":"publisher_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Image Offers.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/images/publishers":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Image Publishers.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/images/skus":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Publisher Name (ex. microsoft-ads)",
                  "in":"query",
                  "name":"publisher_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Offer (ex. linux-data-science-vm)",
                  "in":"query",
                  "name":"offer",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Image Skus (Stock Keeping Unit).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/regions/{region}/images/versions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Publisher Name",
                  "in":"query",
                  "name":"publisher_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"offer",
                  "in":"query",
                  "name":"offer",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Represents a purchasable Stock Keeping Unit (SKU) under a product. These represent the different shapes of the product.",
                  "in":"query",
                  "name":"sku",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Image Skus (Stock Keeping Unit) versions.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/reservations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"filter on billing_account_name",
                  "in":"query",
                  "name":"billing_account_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on billing_account_profile",
                  "in":"query",
                  "name":"billing_account_profile",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on selected state",
                  "enum":[
                     "Succeeded"
                  ],
                  "in":"query",
                  "name":"state",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"filter on resource type",
                  "in":"query",
                  "name":"filters",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve reservations.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Resource Groups.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete Resource Group.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/blobs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Storage Account Name",
                  "in":"query",
                  "name":"storageaccount_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Container Name",
                  "in":"query",
                  "name":"container_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Blobs.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/containers":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Storage Account Name",
                  "in":"query",
                  "name":"storageaccount_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Containers.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/elbs":{
         "get":{
            "description":" ",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Elastic Load Balancers (ELB).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/elbs/{elb_name}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ELB Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Elastic Load Balancers (ELB).",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "get":{
            "description":" ",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ELB Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Elastic Load Balancers (ELB) by name.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/firewalls/{firewall_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Name",
                  "in":"path",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Firewall (Security Group).",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Name (firewall)",
                  "in":"path",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the Firewall (Security Group) by name.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Name",
                  "in":"path",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"New rules",
                           "items":{
                              "properties":{
                                 "action":{
                                    "default":"allow",
                                    "description":"(add) Security Rule Access",
                                    "enum":[
                                       "allow",
                                       "deny"
                                    ],
                                    "type":"string"
                                 },
                                 "description":{
                                    "description":"(add) Rule Description",
                                    "type":"string"
                                 },
                                 "direction":{
                                    "default":"inbound",
                                    "description":"(add) Security Rule Direction",
                                    "enum":[
                                       "inbound",
                                       "outbound"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"(add) Rule From (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"(add, remove) Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "description":"(add) Options",
                                    "properties":{
                                       "priority":{
                                          "default":200,
                                          "description":"(add) Rules are processed in priority order; the lower the number, the higher the priority. (100, 200, 300, etc.)",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"(add) Security Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "any"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"(add) Rule Source Ip Range (ex. 0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"(add) Rule To (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the Firewall (Security Group) rules [add, remove].",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Networks.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/networks/{network_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Name",
                  "in":"path",
                  "name":"network_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Network.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/networks/{network_name}/subnets":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Name",
                  "in":"path",
                  "name":"network_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet Name",
                  "in":"query",
                  "name":"subnet_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Network Subnet.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Name",
                  "in":"path",
                  "name":"network_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Subnets.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Name",
                  "in":"path",
                  "name":"network_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"Subnet CidrBlock  (ex. 10.3.1.0/24)",
                           "type":"string"
                        },
                        "subnet_name":{
                           "description":"Subnet Name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "subnet_name",
                        "cidr_block"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the Network Subnet.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/elbs":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "details":{
                           "default":false,
                           "description":"Details true/false",
                           "type":"boolean"
                        },
                        "frontip":{
                           "description":"If static, enter the Public IP address Name",
                           "enum":[
                              "dynamic",
                              "static"
                           ],
                           "type":"string"
                        },
                        "healthcheck":{
                           "description":"Healthcheck",
                           "items":{
                              "properties":{
                                 "interval":{
                                    "default":5,
                                    "description":"The amount of time between probe attemptsinterval (s) (ex. 5)",
                                    "type":"integer"
                                 },
                                 "option":{
                                    "description":"Option",
                                    "properties":{
                                       "key":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "port":{
                                    "description":"The destination port of the health signal",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"The health protocol to use",
                                    "enum":[
                                       "tcp",
                                       "http"
                                    ],
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"Accept / for the default URI. You can replace this value with any other URI.",
                                    "type":"string"
                                 },
                                 "unhealthy_threshold":{
                                    "description":"The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint (Unhealthy threshold)",
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 "port",
                                 "protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "inbound_nat_rules":{
                           "description":"Inbound NAT Rules",
                           "items":{
                              "properties":{
                                 "backend_port":{
                                    "description":"The port used for the internal endpoint. Acceptable values range from 1 to 65535",
                                    "type":"integer"
                                 },
                                 "frontend_port":{
                                    "description":"The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
                                    "type":"integer"
                                 },
                                 "instance":{
                                    "description":"Instance",
                                    "type":"string"
                                 },
                                 "network_interface":{
                                    "description":"Network interface",
                                    "type":"string"
                                 },
                                 "option":{
                                    "description":"option",
                                    "properties":{
                                       "enable_floating_ip":{
                                          "default":false,
                                          "description":"Configures a virtual machine's endpoint for the  floating IP capability required to configure a SQL AlwaysOn Availability  Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the  endpoint",
                                          "type":"boolean"
                                       },
                                       "idle_timeout_in_minutes":{
                                          "description":"The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP (ex. 4)",
                                          "type":"integer"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "description":"The health protocol to use",
                                    "enum":[
                                       "tcp",
                                       "http",
                                       "https"
                                    ],
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "option",
                                 "frontend_port",
                                 "backend_port",
                                 "protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "instances":{
                           "description":"List of instance names to add to load balancer, obsolete if network_interfaces is provided. if elb is public instances should be private without public ip",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "description":null,
                           "items":{
                              "properties":{
                                 "instance_port":{
                                    "description":"backend port",
                                    "type":"integer"
                                 },
                                 "lb_port":{
                                    "description":"load balancer port",
                                    "type":"integer"
                                 },
                                 "option":{
                                    "description":"option",
                                    "properties":{
                                       "enable_floating_ip":{
                                          "default":false,
                                          "description":"Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
                                          "type":"boolean"
                                       },
                                       "idle_timeout_in_minutes":{
                                          "description":"The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP",
                                          "type":"integer"
                                       },
                                       "load_distribution":{
                                          "default":"Default",
                                          "description":"he load distribution policy for this rule. Possible values include 'Default', 'SourceIP', 'SourceIPProtocol'",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "description":"HTTP, HTTPS, TCP",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "option",
                                 "protocol",
                                 "lbport",
                                 "instport"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"ELB Name",
                           "type":"string"
                        },
                        "network_interfaces":{
                           "description":"Network interfaces of instances to add to elb",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "sku":{
                                 "default":"Standard",
                                 "description":"Choose a Standard load balancer for up to 1000 instances, greater backend pool flexibility, HA ports, and zonal and zone-redundant scenarios.",
                                 "enum":[
                                    "Standard",
                                    "Basic"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "sku"
                           ],
                           "type":"object"
                        },
                        "subnet":{
                           "description":"Subnet  (ex. subnet2000)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"Tags {\"key1\":\"value1\",\"key2\":\"value2\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "description":"You can use internal load balancers to balance traffic from private IP addresses. Public load balancers can balance traffic originating from public IP addresses.",
                           "enum":[
                              "Public",
                              "Internal"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "type",
                        "frontip",
                        "option"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the Elastic Load Balancers (ELB).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/elbs/natrules":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "backend_port":{
                           "description":"Backend port",
                           "type":"integer"
                        },
                        "enable_floating_ip":{
                           "description":"Enable floating ip",
                           "type":"boolean"
                        },
                        "frontend_ip_configuration_id":{
                           "description":"Frontend ip configuration id",
                           "type":"string"
                        },
                        "frontend_port":{
                           "description":"Frontend port",
                           "type":"integer"
                        },
                        "name":{
                           "description":"ELB Name",
                           "type":"string"
                        },
                        "protocol":{
                           "description":"Protocol",
                           "enum":[
                              "Tcp",
                              "Udp"
                           ],
                           "type":"string"
                        },
                        "rule_name":{
                           "description":"Rule name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "rule_name",
                        "protocol",
                        "frontend_port",
                        "frontend_ip_configuration_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the Elastic Load Balancers (ELB) NAT Rules. [add, remove]",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/elbs/vms":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "bakend_pool_name":{
                           "description":"Backend pool name",
                           "type":"string"
                        },
                        "name":{
                           "description":"ELB Name",
                           "type":"string"
                        },
                        "nic_name":{
                           "description":"NIC name",
                           "type":"string"
                        },
                        "vm_name":{
                           "description":"VM Name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "vm_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the Elastic Load Balancers (ELB) VMs. [add, remove]",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/firewalls":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "firewall_name":{
                           "description":"Security Group Name",
                           "required":true,
                           "type":"string"
                        },
                        "rules":{
                           "description":"New rules",
                           "items":{
                              "properties":{
                                 "action":{
                                    "default":"allow",
                                    "description":"Security Rule Access",
                                    "enum":[
                                       "allow",
                                       "deny"
                                    ],
                                    "type":"string"
                                 },
                                 "description":{
                                    "description":"Rule Description",
                                    "type":"string"
                                 },
                                 "direction":{
                                    "default":"inbound",
                                    "description":"Security Rule Direction",
                                    "enum":[
                                       "inbound",
                                       "outbound"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "description":"Options",
                                    "properties":{
                                       "priority":{
                                          "default":200,
                                          "description":"Rules are processed in priority order; the lower the number, the higher the priority. (100, 200, 300, etc.)",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Security Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "any"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Source Ip Range (ex. 0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "vnet_id":{
                           "description":"Network Id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "firewall_name",
                        "vnet_id",
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the Firewall (Security Group).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true
               },
               {
                  "description":"Uic deployed instances",
                  "in":"query",
                  "name":"uic",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Instances.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/instances/{instance_name}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vm name",
                  "in":"path",
                  "name":"instance_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an Instance.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Name",
                  "in":"path",
                  "name":"instance_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "start",
                     "stop",
                     "deallocate",
                     "restart",
                     "resize",
                     "snapshot",
                     "metrics",
                     "monitor",
                     "estimate_cost"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "aggregation":{
                           "description":"(monitor) ex. Total, Average",
                           "required":false,
                           "type":"string"
                        },
                        "charge_type":{
                           "description":"(estimate_cost) Filter by charge type, [purchase, usage, unusedreservation, refund]",
                           "items":{
                              "enum":[
                                 "purchase",
                                 "usage",
                                 "unusedreservation",
                                 "refund"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "delta_days":{
                           "description":"(monitor) ex. 1",
                           "required":false,
                           "type":"integer"
                        },
                        "end_date":{
                           "description":"(monitor, estimate_cost) ex. 2022-02-12 00:00:00. If period is choosen, start_date and end_date are ignored",
                           "required":false,
                           "type":"string"
                        },
                        "flavor":{
                           "description":"(resize) (ex. Standard_D2s_v3) See - Retrieve a list of Flavors for the Region",
                           "required":false,
                           "type":"string"
                        },
                        "format_data":{
                           "description":"(estimate_cost)  Data format",
                           "type":"boolean"
                        },
                        "granularity":{
                           "description":"(estimate_cost) the granularity of consumptions [daily, monthly]",
                           "enum":[
                              "Daily",
                              "Monthly"
                           ],
                           "type":"string"
                        },
                        "group_by":{
                           "description":"(estimate_cost) how to group costs",
                           "items":{
                              "enum":[
                                 "service",
                                 "resource_group",
                                 "resource_type",
                                 "resource",
                                 "resource_id",
                                 "location",
                                 "reservation_name",
                                 "customer"
                              ],
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "interval":{
                           "description":"(monitor) ex. PT1H",
                           "required":false,
                           "type":"string"
                        },
                        "metadata":{
                           "description":"(snapshot) Metadata",
                           "required":false,
                           "type":"string"
                        },
                        "metric":{
                           "description":"(estimate_cost) Metric type [ActualCost, AmortizedCost, Usage]",
                           "enum":[
                              "ActualCost",
                              "AmortizedCost",
                              "Usage"
                           ],
                           "required":false,
                           "type":"string"
                        },
                        "metricname":{
                           "description":"(monitor) ex. Percentage CPU, See in metrics",
                           "required":false,
                           "type":"string"
                        },
                        "period":{
                           "description":"(estimate_cost) If period is choosen, start_date and end_date are ignored. [1D-OneDay, 7D-WeekToDate, CM-CurrentMonth, LM-TheLastMonth, 3M-3Months, 6M-6Months, 1Y-12Months, MTD-MonthToDate, BMTD-BillingMonthToDate, LBM-TheLastBillingMonth, YTD-OneYearAgo]",
                           "enum":[
                              "1D",
                              "7D",
                              "CM",
                              "LM",
                              "3M",
                              "6M",
                              "1Y",
                              "MTD",
                              "BMTD",
                              "LBM",
                              "YTD"
                           ],
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Name",
                           "required":false,
                           "type":"string"
                        },
                        "start_date":{
                           "description":"(monitor, estimate_cost) ex. 2022-02-02 00:00:00. If period is choosen, start_date and end_date are ignored",
                           "required":false,
                           "type":"string"
                        },
                        "storage_account":{
                           "description":"(snapshot) Storage account",
                           "required":false,
                           "type":"string"
                        },
                        "vm_name":{
                           "description":"Vm Name",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "required":[
                        "vm_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Instances [start, stop, deallocate, restart, resize, snapshot, metrics, monitor, estimate_cost]",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/networkinterfaces":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of NICs (Network Interface Cards).",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "deployment_timeout":{
                           "default":1800,
                           "description":"Deployment Timeout (ex. 1800)",
                           "type":"number"
                        },
                        "name":{
                           "description":"Nic Name",
                           "required":true,
                           "type":"string"
                        },
                        "private_ip_address":{
                           "description":"Fill with a Private Ip Address for a Private Ip Address Static Assignement, elsewhere (None) is a Private Ip Address Dynamic Assignement",
                           "type":"string"
                        },
                        "public_ip_allocation_method":{
                           "default":"dynamic",
                           "description":"Public Ip Address Assignement",
                           "enum":[
                              "dynamic",
                              "static"
                           ],
                           "type":"string"
                        },
                        "public_ip_name":{
                           "description":"Fill with a Public Ip Name for a Public Ip Address Static Assignement",
                           "type":"string"
                        },
                        "security_group_name":{
                           "description":"Security Group Name",
                           "type":"string"
                        },
                        "subnet_name":{
                           "description":"Subnet Name",
                           "type":"string"
                        },
                        "vnet_name":{
                           "description":"Network Name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "vnet_name",
                        "subnet_name",
                        "public_ip_allocation_method"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the NIC (Network Interface Card).",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "allocation_method":{
                           "default":"dynamic",
                           "description":"Public Ip Address Assignement",
                           "enum":[
                              "dynamic",
                              "static"
                           ],
                           "type":"string"
                        },
                        "nic_name":{
                           "description":"Nic Name",
                           "required":true,
                           "type":"string"
                        },
                        "operation":{
                           "description":"Network Name",
                           "enum":[
                              "assign",
                              "remove"
                           ],
                           "type":"string"
                        },
                        "public_ip_name":{
                           "description":"Fill with a Public Ip Name for a Public Ip Address Static Assignement",
                           "type":"string"
                        }
                     },
                     "required":[
                        "nic_name",
                        "operation",
                        "allocation_method",
                        "public_ip_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the NIC (Network Interface Card) Public Ip.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/networkinterfaces/{networkinterface_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Nic Name",
                  "in":"path",
                  "name":"networkinterface_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the NIC (Network Interface Card).",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/networks":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"Network CidrBlock (ex. 10.3.0.0/16)",
                           "type":"string"
                        },
                        "dns":{
                           "description":"DNS (ex. 8.8.8.8)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"Network Name",
                           "type":"string"
                        },
                        "placement":{
                           "description":"Placement",
                           "properties":{
                              "resource_group_name":{
                                 "description":"Resource Group Name",
                                 "type":"string"
                              },
                              "tag":{
                                 "description":"Tags (max 10)",
                                 "properties":{
                                    "key1":{
                                       "type":"string"
                                    },
                                    "key2":{
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":[
                              "resource_group_name"
                           ],
                           "type":"object"
                        },
                        "subnet":{
                           "description":"New subnet",
                           "properties":{
                              "cidr_block":{
                                 "description":"Subnet CidrBlock  (ex. 10.3.0.0/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet Name",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "cidr_block"
                           ],
                           "type":"object"
                        },
                        "tag":{
                           "description":"Tags (max 10)",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              },
                              "key2":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "required":[
                        "cidr_block",
                        "name",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create the Network.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Public IP addresses.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP Name",
                  "in":"query",
                  "name":"publicip_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "tags":{
                           "description":"Tags",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              },
                              "key2":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Public IP address.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/publicips/{publicip_name}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP Name",
                  "in":"path",
                  "name":"publicip_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Public IP address.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Snapshots.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/storageaccounts":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "performance":{
                           "default":"Standard",
                           "description":"Standard storage accounts are backed by magnetic drives and provide the lowest cost per GB.",
                           "enum":[
                              "Standard"
                           ],
                           "type":"string"
                        },
                        "storage_kind":{
                           "default":"Storage (general purpose v1)",
                           "description":"General purpose storage accounts provide storage for blobs, files, tables and queues in a unified account.",
                           "enum":[
                              "Storage (general purpose v1)"
                           ],
                           "type":"string"
                        },
                        "storage_name":{
                           "description":"Storage Name",
                           "type":"string"
                        },
                        "type":{
                           "default":"standard_lrs",
                           "description":"The data storage account is always replicated to ensure durability and high availability.",
                           "enum":[
                              "standard_lrs (Locally redundant storage (LRS))",
                              "standard_zrs (Zone redundant storage (ZRS))",
                              "standard_grs (Geo redundant storage (GRS))",
                              "standard_ragrs (Read access geo redundant storage (RA-GRS))"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "storage_name",
                        "performance",
                        "storage_kind",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Storage Account.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/volume":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "name":{
                           "description":"Volume Name",
                           "type":"string"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "create_option":{
                                 "default":"empty",
                                 "description":"Create option",
                                 "enum":[
                                    "empty"
                                 ],
                                 "type":"string"
                              },
                              "disk_category":{
                                 "default":"managed",
                                 "description":"Disk Category",
                                 "enum":[
                                    "managed"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "disk_category"
                           ],
                           "type":"object"
                        },
                        "size":{
                           "description":"Volume Size (GB)",
                           "type":"string"
                        },
                        "type":{
                           "default":"hdd",
                           "description":"Locally redundant storage (LRS), Standard (HDD), Premium (SSD)",
                           "enum":[
                              "hdd",
                              "ssd"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "size",
                        "type",
                        "option"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Volume.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Volumes.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/regions/{region}/volumes/{volume_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. westeurope)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Disk Name",
                  "in":"path",
                  "name":"volume_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"managed",
                  "description":"Disk Category",
                  "enum":[
                     "managed"
                  ],
                  "in":"query",
                  "name":"disk_category",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Volume.",
            "tags":[
               "provider/microsoftazure"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name (ex. francecentral)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume Name",
                  "in":"path",
                  "name":"volume_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "resize",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "lun":{
                           "description":"(attach) Logical Unit Number of data disk (0 through 15)",
                           "type":"string"
                        },
                        "size":{
                           "description":"(resize) Volume Size (GB)",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot Name",
                           "type":"string"
                        },
                        "timeout":{
                           "default":600,
                           "description":"Timeout (s) max 24h (ex. 600)",
                           "type":"string"
                        },
                        "vm_name":{
                           "description":"(attach, detach) Vm Name",
                           "type":"string"
                        },
                        "volume_id":{
                           "description":"(attach, detach, snapshot) Volume Id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "timeout"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Volume. [attach, detach, resize, snapshot]",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/snapshots/{snapshot_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot Name",
                  "in":"path",
                  "name":"snapshot_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Snapshot.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/storageaccounts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Storage Accounts.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/storageaccounts/{storageaccount_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Groupe Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Storage Name",
                  "in":"path",
                  "name":"storageaccount_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Storage Account.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcegroups/{rg_name}/storageaccounts/{storageaccount_name}/blobs":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource Group Name",
                  "in":"path",
                  "name":"rg_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Storage Account Name",
                  "in":"path",
                  "name":"storageaccount_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Container Name",
                  "in":"query",
                  "name":"container_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Blob Name",
                  "in":"query",
                  "name":"blob_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the Blob.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/resourcetypes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"include metadata and resource types aliases",
                  "in":"query",
                  "name":"include_additional_properties",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get provider resource types.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/storageaccounts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Storage Name",
                  "in":"query",
                  "name":"storage_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Check Storage Account Name Availability.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get subscriptions.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/microsoftazure/{uuid}/tags":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get tags.",
            "tags":[
               "provider/microsoftazure"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls (security groups).",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall (security group) name",
                  "in":"query",
                  "name":"firewall_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create firewall (security group).",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/firewalls/{firewall_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete firewall (security group) by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security group id. (ex. 4668f05e-7eeb-420d-883b-0921ef6abb6f)",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls (security groups) by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"New rules",
                           "items":{
                              "properties":{
                                 "direction":{
                                    "default":"in",
                                    "description":"Security Rule Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Security Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "icmp"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Source Ip Range (ex. 0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To (ex. 80) (ex. 1024-65535) (ex. 80, 1024-65535)",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update firewall [add, remove].",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Owned by tenant",
                  "in":"query",
                  "name":"owned_by_tenant",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Self owned",
                  "in":"query",
                  "name":"self_owned",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/images/backup":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of backup images.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/images/private":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private images.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/images/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of snapshot images.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/images/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot image id",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete snapshot image.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Deployed by UIC",
                  "in":"query",
                  "name":"uic",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/instances/{instance_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete instance.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "start",
                     "stop",
                     "restart",
                     "resize",
                     "console",
                     "snapshot",
                     "resume",
                     "revert",
                     "suspend",
                     "shelve",
                     "unshelve",
                     "shelve_offload",
                     "pause",
                     "unpause",
                     "rescue",
                     "unrescue",
                     "restore",
                     "backup",
                     "rebuild"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "backup_name":{
                           "description":"(backup) Name",
                           "type":"string"
                        },
                        "backup_type":{
                           "description":"(backup) Type",
                           "enum":[
                              "daily",
                              "weekly"
                           ],
                           "type":"string"
                        },
                        "confirm":{
                           "default":true,
                           "description":"(resize) Confirm resize",
                           "type":"boolean"
                        },
                        "console":{
                           "description":"(console) Method (vnc, rdp, spice)",
                           "enum":[
                              "vnc",
                              "rdp",
                              "spice"
                           ],
                           "type":"string"
                        },
                        "console_type":{
                           "description":"(console) (ex. novnc)",
                           "type":"string"
                        },
                        "flavor_id":{
                           "description":"(resize) See Retrieve a list of flavors.(ex. 3)",
                           "type":"string"
                        },
                        "image_id":{
                           "description":"(rebuild) Image id",
                           "type":"string"
                        },
                        "metadata":{
                           "description":"(snapshot) Snapshot metadata. (ex. {\"mykey1\":\"myvalue1\"})",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "required":[
                              "key"
                           ],
                           "type":"object"
                        },
                        "preserve_ephemeral":{
                           "default":false,
                           "description":"(rebuild) Preserve ephemeral",
                           "type":"booleab"
                        },
                        "rotation":{
                           "description":"(backup) Representing how many backups to keep around.",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [start, stop, restart, resize, console, snapshot, resume, revert, suspend, shelve, unshelve, shelve_offload, pause, unpause, rescue, unrescue, restore, backup, rebuild].",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create keypair.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/keypairs/{key_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete keypair by key name.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"IPv4 Cidr Block (ex. 10.0.0.0/16)",
                           "type":"string"
                        },
                        "dns":{
                           "description":"dns",
                           "type":"string"
                        },
                        "network_name":{
                           "description":"Network name",
                           "type":"string"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "access":{
                                 "description":"Network access",
                                 "enum":[
                                    "private",
                                    "public"
                                 ],
                                 "type":"string"
                              },
                              "cidr_block":{
                                 "description":"Subnet IPv4 Cidr Block (ex. 10.0.1.0/24)",
                                 "type":"string"
                              },
                              "option":{
                                 "properties":{
                                    "ipversion":{
                                       "default":4,
                                       "description":"Ip version (ex. 4)",
                                       "type":"string"
                                    },
                                    "router":{
                                       "description":"Router name (if access is public)",
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              },
                              "subnet_name":{
                                 "description":"Subnet name",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "subnet_name",
                              "cidr_block",
                              "access"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "network_name",
                        "cidr_block",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create network.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of subnets.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks/subnets/{subnet_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id (ex. 04305bf4-39dc-4bdb-bf76-b155c9e00a16)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of subnets by id.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete network by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. 58371710-72a8-4081-88ce-0ae937136fcc)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a network by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"Subnet IPv4 Cidr Block (ex. 10.0.1.0/24)",
                           "type":"string"
                        },
                        "dns":{
                           "description":"Dns",
                           "type":"string"
                        },
                        "ip_version":{
                           "description":"Ip version",
                           "type":"string"
                        },
                        "router_id":{
                           "description":"Router access ( ex. public)",
                           "type":"string"
                        },
                        "router_name":{
                           "description":"Router name",
                           "type":"string"
                        },
                        "subnet_name":{
                           "description":"Subnet name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "subnet_name",
                        "cidr_block"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a subnet for the network.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks/{network_id}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. 58371710-72a8-4081-88ce-0ae937136fcc)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of network's subnets.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/networks/{network_id}/subnets/{subnet_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Router id",
                  "in":"query",
                  "name":"router_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a subnet.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of public IPs.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool",
                  "in":"query",
                  "name":"pool",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create public IPs.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/publicips/{public_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP id",
                  "in":"path",
                  "name":"public_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete public IPs.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public IP id",
                  "in":"path",
                  "name":"public_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"query",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool",
                  "in":"query",
                  "name":"pool",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"(disassociate)",
                  "in":"query",
                  "name":"delete",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associate public IPs.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/routers/{router_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Router id",
                  "in":"path",
                  "name":"router_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a router.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/routers/{router_id}/interface":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Router id",
                  "in":"path",
                  "name":"router_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id",
                  "in":"query",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete interface between a router and a subnet.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume name",
                  "in":"query",
                  "name":"volume_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"Volume description",
                           "type":"string"
                        },
                        "size":{
                           "description":"Size Go",
                           "type":"string"
                        },
                        "type":{
                           "description":"Volume type (ex. Performance)",
                           "type":"string"
                        }
                     },
                     "required":[
                        "size",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create volume.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/volumes/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume's snapshots.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/volumes/snapshots/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume Snapshot id",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete volume snapshot by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume snapshot id. (ex. 063b1e46-2d99-4e1f-a403-aa6a1061e30f)",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume's snapshot by id.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/volumes/types":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume types.",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/openstack/{uuid}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete volume by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. 8b0b7c79-edd3-4ddf-9cbb-41b35e6ecef8)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume by id.",
            "tags":[
               "provider/openstack"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"(snapshot) Description",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"(attach) Device name",
                           "type":"string"
                        },
                        "force":{
                           "default":false,
                           "description":"(snapshot) Force",
                           "type":"boolean"
                        },
                        "instance_id":{
                           "description":"(attach, detach) Instance id",
                           "type":"string"
                        },
                        "name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on volume [attach, detach, snapshot].",
            "tags":[
               "provider/openstack"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/prices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Product id",
                  "in":"query",
                  "name":"product_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Currency default EUR",
                  "enum":[
                     "EUR",
                     "USD"
                  ],
                  "in":"query",
                  "name":"currency",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of prices.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/reports":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-frankfurt-1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Limit default 999",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Report type default usage",
                  "enum":[
                     "usage",
                     "cost"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of reports.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/reports/{name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Report name",
                  "in":"path",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-frankfurt-1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the report.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/services":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-frankfurt-1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of services.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/usage":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-frankfurt-1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "end_date":{
                           "description":"End date (2022-05-01)",
                           "type":"string"
                        },
                        "filter":{
                           "description":"Filter ex for region {\"operator\":\"AND\",\"dimensions\":[],\"tags\":[],\"filters\":[{\"operator\":\"OR\",\"dimensions\":[{\"value\":\"eu-frankfurt-1\",\"key\":\"region\"}],\"tags\":[],\"filters\":[]}]}",
                           "example":{
                              
                           },
                           "type":"string"
                        },
                        "granularity":{
                           "description":"Granularity [HOURLY, DAILY, MONTHLY, TOTAL]",
                           "example":"DAILY",
                           "type":"string"
                        },
                        "group_by":{
                           "description":"Group by example [\"service\"] or [\"service\", \"skuPartNumber\"] or [\"service\", \"skuName\"]",
                           "example":[
                              "service"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "start_date":{
                           "description":"Start date (2022-05-01)",
                           "type":"string"
                        },
                        "type":{
                           "description":"Type [COST, USAGE]",
                           "example":"COST",
                           "type":"string"
                        }
                     },
                     "required":[
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of usage.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/billing/usage/configurations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-frankfurt-1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a usage configuration.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/oraclecloud/{uuid}/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of regions.",
            "tags":[
               "provider/oraclecloud"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/billing/files":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of billing files.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/billing/files/{file_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"File name",
                  "in":"path",
                  "name":"file_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Bucket name",
                  "in":"query",
                  "name":"bucket_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the billing file.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/billing/usage":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Start date (ex. 2019-10-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"End date (ex. 2020-04-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of usage.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/global/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of regions.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/avzone":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of availability zones.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load Balancer Units.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzones":{
                           "description":"One or more Availability Zones from the same region as the load balancer. Either AvailabilityZones or SubnetIds must be specified",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "connection_draining":{
                           "default":false,
                           "description":null,
                           "type":"boolean"
                        },
                        "connection_draining_timeout":{
                           "default":300,
                           "description":null,
                           "example":300,
                           "type":"integer"
                        },
                        "cookie_stickiness":{
                           "description":"cookie stickiness",
                           "properties":{
                              "CookieExpirationPeriod":{
                                 "description":300,
                                 "type":"integer"
                              },
                              "CookieName":{
                                 "description":null,
                                 "type":"string"
                              },
                              "PolicyName":{
                                 "description":null,
                                 "type":"string"
                              },
                              "Type":{
                                 "description":"elb | application",
                                 "type":"string"
                              }
                           },
                           "required":[
                              null
                           ],
                           "type":"object"
                        },
                        "cross_zone":{
                           "default":false,
                           "description":null,
                           "type":"boolean"
                        },
                        "health_check":{
                           "items":{
                              "description":"health check (possible one health check)",
                              "properties":{
                                 "healthy_threshold":{
                                    "description":10,
                                    "type":"integer"
                                 },
                                 "interval":{
                                    "description":30,
                                    "type":"integer"
                                 },
                                 "port":{
                                    "description":"EC2-VPC=1-65535, EC2-Classic=25, 80, 443, 465, 587",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "target":{
                                    "description":"/index.html",
                                    "type":"string"
                                 },
                                 "timeout":{
                                    "description":5,
                                    "type":"integer"
                                 },
                                 "unhealthy_threshold":{
                                    "description":2,
                                    "type":"integer"
                                 }
                              },
                              "required":[
                                 null
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "idle_timeout":{
                           "default":400,
                           "description":null,
                           "example":400,
                           "type":"integer"
                        },
                        "instances":{
                           "description":"Instances id list of dicts",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "listener":{
                           "items":{
                              "properties":{
                                 "instance_port":{
                                    "description":"The port on which the instance is listening",
                                    "type":"integer"
                                 },
                                 "instance_protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "lb_port":{
                                    "description":"EC2-VPC=1-65535, EC2-Classic=25, 80, 443, 465, 587",
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "ssl_certificate_id":{
                                    "description":"The Amazon Resource Name (ARN) of the server certificate",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "lb_port",
                                 "instance_protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "name":{
                           "description":"The name of the load balancer.",
                           "type":"string"
                        },
                        "security_groups":{
                           "description":"The IDs of the security groups to assign to the load balancer.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnets":{
                           "description":"The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in AvailabilityZones . Either AvailabilityZones or SubnetIds must be specified",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"A list of tags to assign to the load balancer.  {\"Key\":\"key1\",\"Value\":\"value1\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "default":"internet-facing",
                           "description":null,
                           "enum":[
                              "internet-facing",
                              "internal"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "listeners"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Classic Load Balancer.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Load Balancer Unit.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ELB name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a LBU by name (Load Balancer Unit.).",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/attributes":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the attributes for the specified load balancer.",
            "tags":[
               "provider/outscale"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "AccessLog":{
                           "properties":{
                              "EmitInterval":{
                                 "default":60,
                                 "description":"The interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.",
                                 "type":"integer"
                              },
                              "Enabled":{
                                 "default":false,
                                 "description":"If enabled, the load balancer captures detailed information of all requests and delivers the information to the Object Storage Unit (OSU) bucket that you specify.",
                                 "type":"boolean"
                              },
                              "S3BucketName":{
                                 "description":"The name of the Object Storage Unit (OSU) bucket where the access logs are stored.",
                                 "type":"string"
                              },
                              "S3BucketPrefix":{
                                 "description":"The logical hierarchy you created for your Object Storage Unit (OSU) bucket, for example my-bucket-prefix/prod. If the prefix is not provided, the log is placed at the root level of the bucket.",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "Enabled"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "AccessLog"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the specified attributes of the specified Load Balancer.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/availabilityzones":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"For load balancers in a non-default VPC, use AttachLoadBalancerToSubnets .<br/>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC. <br/>For load balancers in a non-default VPC, use DetachLoadBalancerFromSubnets.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "AvailabilityZones":{
                           "description":"The Availability Zones. These must be in the same region as the load balancer.",
                           "example":[
                              "eu-west-2a",
                              "eu-west-2b"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "AvailabilityZones"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC. ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/backendserver":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "InstancePort":{
                           "description":"The port number associated with the EC2 instance",
                           "type":"integer"
                        },
                        "PolicyNames":{
                           "description":"The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "InstancePort",
                        "PolicyNames"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/cookies/stickenesspolicy":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"This policy can be associated only with HTTP/HTTPS listeners.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cookie type stickeness policy to be created",
                  "enum":[
                     "app",
                     "lb"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "CookieExpirationPeriod":{
                           "description":"(lb) The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.",
                           "type":"integer"
                        },
                        "CookieName":{
                           "description":"(app) required. The name of the application cookie used for stickiness.",
                           "type":"string"
                        },
                        "PolicyName":{
                           "description":"The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "PolicyName"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Generates a stickiness policy [app, lb] with sticky session lifetimes that follow that of an application-generated cookie. ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/healthcheck":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "HealthCheck":{
                           "properties":{
                              "HealthyThreshold":{
                                 "description":"The number of consecutive health checks successes required before moving the instance to the Healthy state.",
                                 "type":"integer"
                              },
                              "Interval":{
                                 "description":"The approximate interval, in seconds, between health checks of an individual instance.",
                                 "type":"integer"
                              },
                              "Target":{
                                 "description":"The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535. Example TCP:5000, SSL:5000, HTTP:port;/;PathToPing",
                                 "type":"string"
                              },
                              "Timeout":{
                                 "description":"The amount of time, in seconds, during which no response means a failed health check. This value must be less than the Interval value.",
                                 "type":"integer"
                              },
                              "UnhealthyThreshold":{
                                 "description":"The number of consecutive health check failures required before moving the instance to the Unhealthy state.",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "Target",
                              "Interval",
                              "Timeout",
                              "UnhealthyThreshold",
                              "HealthyThreshold"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "HealthCheck"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the health check settings to use when evaluating the health state of your instances.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/instances":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"After the instance is deregistered, it no longer receives traffic from the load balancer<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "register",
                     "deregister"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Instances":{
                           "description":"The IDs of the instances, list of dicts",
                           "items":{
                              "properties":{
                                 "InstanceId":{
                                    "description":"The IDs of the instances, list of dicts",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "InstanceId"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Instances"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Register/Deregister the specified instances to/from the specified load balancer.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/instanceshealth":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The IDs of the instances (ex. i-1234567,i-12345678)",
                  "in":"query",
                  "name":"Instances",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the health attributes for the specified Instances. ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/listeners":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"80, 8080, 4000",
                  "in":"query",
                  "name":"LoadBalancerPorts",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified listeners from the specified load balancer.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.<br/> ",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Listeners":{
                           "description":"list of dicts",
                           "items":{
                              "properties":{
                                 "InstancePort":{
                                    "description":"The port on which the instance is listening",
                                    "type":"integer"
                                 },
                                 "InstanceProtocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "LoadBalancerPort":{
                                    "description":"EC2-VPC 1-65535, EC2-Classic 25, 80, 443, 465, 587, 1024-65535",
                                    "type":"integer"
                                 },
                                 "Protocol":{
                                    "description":"HTTP, HTTPS, TCP, or SSL",
                                    "type":"string"
                                 },
                                 "SSLCertificateId":{
                                    "description":"The Amazon Resource Name (ARN) of the server certificate",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "InstancePort",
                                 "InstanceProtocol",
                                 "LoadBalancerPort",
                                 "Protocol"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Listeners"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create one or more listeners for the specified load balancer. ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/listeners/policies":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "LoadBalancerPort":{
                           "description":"The external port of the load balancer",
                           "type":"integer"
                        },
                        "PolicyNames":{
                           "description":"The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "LoadBalancerPort",
                        "PolicyNames"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Replaces the current set of policies for the specified load balancer port with the specified set of policies.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/listeners/sslcertificate":{
         "put":{
            "consumes":[
               "application/json"
            ],
            "description":"The specified certificate replaces any prior certificate that was used on the same load balancer and port.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "LoadBalancerPort":{
                           "description":"The port that uses the specified SSL certificate.",
                           "type":"integer"
                        },
                        "SSLCertificateId":{
                           "description":"The Amazon Resource Name (ARN) of the SSL certificate.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "LoadBalancerPort",
                        "SSLCertificateId"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the certificate that terminates the specified listener's SSL connections. ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/policy":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "PolicyAttributes":{
                           "description":"The policy attributes.",
                           "items":{
                              "properties":{
                                 "AttributeName":{
                                    "description":"The name of the attribute",
                                    "type":"string"
                                 },
                                 "AttributeValue":{
                                    "description":"The value of the attribute.",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "AttributeName",
                                 "AttributeValue"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "PolicyName":{
                           "description":"The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.",
                           "type":"string"
                        },
                        "PolicyTypeName":{
                           "description":"The name of the base policy type.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "PolicyName",
                        "PolicyTypeName",
                        "PolicyAttributes"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a policy with the specified attributes for the specified load balancer.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/policy/{policy_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load Balancer Name",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"load balancer policy name",
                  "in":"path",
                  "name":"policy_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/securitygroups":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"The specified security groups override the previously associated security groups.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "SecurityGroups":{
                           "description":"The IDs of the security groups to associate with the load balancer.",
                           "example":[
                              "sgid1",
                              "sgid2"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "SecurityGroups"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associates one or more security groups with your load balancer in a virtual private cloud (VPC). ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/subnets":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Subnets":{
                           "description":"The IDs of the subnets to add",
                           "example":[
                              "subnet-09f0ce8573da838",
                              "subnet-07f0ce8r73da837"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Subnets"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds/Removes one or more subnets to the set of configured subnets for the specified load balancer.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/elbs/{elb_name}/tags":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the load balancer. You can specify one load balancer only.",
                  "in":"path",
                  "name":"elb_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "Tags":{
                           "description":"List of Tags (max 10)",
                           "items":{
                              "properties":{
                                 "Key":{
                                    "type":"string"
                                 },
                                 "Value":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "Tags"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-71113ff4)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls (security groups).",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Group Name",
                           "type":"string"
                        },
                        "network_id":{
                           "description":"Network Id (ex. vpc-038e1c1b7ec8f3cb0)",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "network_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a security group.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/firewalls/{firewall_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Firewall (security group) id (ex. sg-ba986cdc)",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a firewall (security group).",
            "tags":[
               "provider/outscale"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "description":"SG Rules",
                           "properties":{
                              "direction":{
                                 "default":"in",
                                 "description":"Ingress firewall rules grant access to networks (Inbound) . Egress rule applies to traffic leaving the subnet (Outbound).",
                                 "enum":[
                                    "in",
                                    "out"
                                 ],
                                 "type":"string"
                              },
                              "from":{
                                 "description":"The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number",
                                 "type":"integer"
                              },
                              "protocol":{
                                 "description":"Ip Protocol TCP, UDP",
                                 "type":"string"
                              },
                              "range":{
                                 "default":"0.0.0.0/0",
                                 "description":"The CIDR IPv4 address range",
                                 "type":"string"
                              },
                              "to":{
                                 "description":"The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code",
                                 "type":"integer"
                              }
                           },
                           "required":[
                              "direction",
                              "protocol",
                              "range",
                              "from",
                              "to"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds/Removes one rule to/from a security group.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/igws":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Igw (Internet GateWays).",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/igws/{igw_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"IGW name (ex. igw-e296ddf5)",
                  "in":"path",
                  "name":"igw_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Igw by id (Internet GateWays).",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"All images / Private images",
                  "enum":[
                     "all",
                     "private"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images (private/public).",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/images/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Filter Name (see https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html?highlight=describe_addresses#EC2.Client.describe_images)",
                  "in":"query",
                  "name":"filter_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter Value (see Filter name)",
                  "in":"query",
                  "name":"filter_value",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Image Snapshots.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/images/{ami_id}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances; however, it doesn't affect any instances that you've already launched from the AMI.<br/>Initiates the copy of an AMI from the specified source Region to the destination Region.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the AMI. (ex. ami-a59c5cdc)",
                  "in":"path",
                  "name":"ami_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "copy",
                     "deregister"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "name":{
                           "description":"(copy) The name of the new AMI in the destination Region.",
                           "type":"string"
                        },
                        "region":{
                           "description":"(copy) The name of the destination Region.",
                           "type":"string"
                        },
                        "source":{
                           "description":"(copy) The name of the Region that contains the AMI to copy.",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Image [copy, deregister]",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/images/{image_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Image id (ex. ami-7eb39d40)",
                  "in":"path",
                  "name":"image_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an image by id.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network name if filter only_uic (ex. vpc-71113ff4)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Deployed by UIC",
                  "enum":[
                     "not_uic",
                     "only_uic"
                  ],
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/instances/{instance_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Id (ex. i-875ed617)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an Instance.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id (ex. i-acf0da58)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an instance by id.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Id (ex. i-875ed617)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "stop",
                     "start",
                     "restart",
                     "resume",
                     "resize",
                     "snapshot",
                     "get_firewall",
                     "get_password"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"(snapshot) Snapshot description",
                           "type":"string"
                        },
                        "flavor":{
                           "description":"(resize) Flavor (ex. t2.small)",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Instance [stop, start, restart, resume, resize, snapshot, get_firewall, get_password].",
            "tags":[
               "provider/outscale"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance Id (ex. i-875ed617)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Modify instance attribute.",
                  "enum":[
                     "volume_termination_protection",
                     "termination_protection",
                     "source_destination_check"
                  ],
                  "in":"query",
                  "name":"attribute",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action.",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"(volume_termination_protection) The device name (for example, /dev/sdh or xvdh).",
                  "in":"query",
                  "name":"device_name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Modify Instance Attributes [Instance Termination Protection, Volume Termination Protection, Source/Destination Check].",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/internetgateways":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway name",
                  "in":"query",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an internet gateway for use with a VPC. After creating the internet gateway, you attach it to a VPC or just enter VPC id.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/internetgateways/{gateway_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway id (ex. igw-8e0dd313)",
                  "in":"path",
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete network internet gateways. You must detach the internet gateway from the VPC before you can delete it or just enter VPC id.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A unique name for the key pair. Constraints, Up to 255 ASCII characters",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a 2048-bit RSA key pair with the specified name.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/keypairs/import":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "key_file":{
                           "description":"The public key. For API calls, the text must be base64-encoded.",
                           "type":"string"
                        },
                        "key_name":{
                           "description":"A unique name for the key pair",
                           "type":"string"
                        }
                     },
                     "required":[
                        "key_name",
                        "key_file"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Imports the public key from an RSA key pair that you created with a third-party tool.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/keypairs/{key_name}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A unique name for the key pair. Constraints, Up to 255 ASCII characters",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a key pair with the specified name.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/natgateways":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of NAT gateways.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway name",
                  "in":"query",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "publicip":{
                           "description":"Public IP, Allocation id. (ex. eipalloc-be1fe157)",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"The ID of the subnet in your VPC to attach to the NAT. (ex. subnet-0b1bfaa78a48810a4)",
                           "type":"string"
                        },
                        "tags":{
                           "description":"A list of tags to assign to the NAT gateway.  {\"Key\":\"key1\",\"Value\":\"value1\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "required":[
                        "subnet_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an NAT gateway for use with a VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/natgateways/{nat_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway id (ex. nat-8e0dd313)",
                  "in":"path",
                  "name":"nat_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the NAT gateway.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT Gateway id (ex. nat-8e0dd313)",
                  "in":"path",
                  "name":"nat_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"query",
                  "name":"network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a NAT gateway.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"IPv4 Cidr Block (ex. 10.0.0.0/16)",
                           "type":"string"
                        },
                        "dns":{
                           "description":"Enable DNS hostnames (yes)",
                           "type":"string"
                        },
                        "name":{
                           "description":"VPC Name",
                           "type":"string"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "access":{
                                 "default":"private",
                                 "description":"VPC with Public / Private Subnets",
                                 "enum":[
                                    "public",
                                    "private"
                                 ],
                                 "type":"string"
                              },
                              "avzone":{
                                 "description":"Subnet Availability Zone",
                                 "type":"string"
                              },
                              "cidr_block":{
                                 "description":"Subnet IPv4 Cidr Block (ex. 10.0.1.0/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet Name",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "avzone",
                              "access",
                              "cidr_block"
                           ],
                           "type":"object"
                        },
                        "tags":{
                           "description":"tags {\"key1\":\"val1\", \"key2\":\"val2\"}",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "tenancy":{
                           "default":"default",
                           "description":"Indicates the tenancy of the Capacity Reservation",
                           "enum":[
                              "default",
                              null
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "cidr_block",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create Virtual Private Cloud (VPC).",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/subnets/{subnet_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id (ex. subnet-39936517)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of subnets of one network.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Private Cloud Id (ex. vpc-b05142be)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Delete All Dependencies",
                  "in":"query",
                  "name":"all_dependencies",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete VPC (Virtual Private Cloud).",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-f47df931)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of a network.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/dnshostnames":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b78)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action. Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Modifies the EnableDnsHostnames and EnableDnsSupport of the specified VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/firewalls":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Warning !!!  All Security Group Ids different from \"default\" will be deleted.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/firewalls/{firewall_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id. (ex. sg-02175299)",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a security group.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-1)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b78)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":"only_uic",
                  "description":"The filters IDs",
                  "enum":[
                     "only_uic",
                     "not_uic"
                  ],
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe all of your instances.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/instances/{instance_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The instance IDs. Default Describe all your instances.  (ex. i-092ad34b)",
                  "in":"path",
                  "items":{
                     "type":"string"
                  },
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe the specified instance.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of an EC2-Classic instance  (ex. i-092ad34b7)",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action.",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attach/Detach Ec2-Classic instance to the VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/internetgateways":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-09335de66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete network internet gateways. You must detach the internet gateway from the VPC before you can delete it.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b781)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your internet gateways.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway name",
                  "in":"query",
                  "name":"internetgateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an internet gateway for use with a VPC. After creating the internet gateway, you attach it to a VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/internetgateways/{gateway_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway Id (ex. igw-bb852cfr5)",
                  "in":"path",
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified internet gateway. You must detach the internet gateway from the VPC before you can delete it.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b78)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway Ids",
                  "in":"path",
                  "items":{
                     "type":"string"
                  },
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one internet gateway.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7810)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Internet Gateway Id (ex. igw-bb852cfr5)",
                  "in":"path",
                  "name":"gateway_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attaches an internet gateway to a VPC, enabling connectivity between the internet and the VPC. Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/natgateways":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b78)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your NAT (Network Address Translation) gateways.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/natgateways/{nat_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-b05142be)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"NAT gateway id (ex. nat-33d8c340)",
                  "in":"path",
                  "name":"nat_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one NAT (Network Address Translation) gateway.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/routetables":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b7)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call.",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results.",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Describe one or more of your route tables.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b781)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rtable_name":{
                           "description":"Route Table Name",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"Subnet Id (ex. subnet-06ae8766e)",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "required":[
                        "rtable_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/routetables/{routetable_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b781d)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the route table. (ex. rtb-0a82413c9)",
                  "in":"path",
                  "name":"routetable_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/routetables/{rtable_id}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b781)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The ID of the route table. (ex. rtb-0a82413c9c)",
                  "in":"path",
                  "name":"rtable_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "add",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "route_destination":{
                           "description":"(add, delete) Destination Cidr Block (ex. 0.0.0.0/0)",
                           "type":"string"
                        },
                        "target_route":{
                           "default":null,
                           "description":"(add) Target (ex. GatewayId)",
                           "enum":[
                              "GatewayId",
                              "InstanceId",
                              "NetworkInterfaceId",
                              "VpcPeeringConnectionId",
                              "NatGatewayId"
                           ],
                           "type":"string"
                        },
                        "target_value":{
                           "description":"(add) Target Id (ex. igw-c0a643a9)",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a route in a route table within a VPC.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-f47df931)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of subnets of one network.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VPC Id (ex. vpc-093355b781)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "association_id":{
                           "description":"(disassociate) The association ID representing the current association between the route table and subnet. (ex. rtbassoc-059b11b9d02)",
                           "type":"string"
                        },
                        "rtable_id":{
                           "description":"(associate) Route Table Id (ex. rtb-a50ab5c1)",
                           "type":"string"
                        },
                        "subnet_id":{
                           "description":"(associate) Subnet Id (ex. subnet-06ae8766e7)",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associates a subnet with a route table. The subnet and route table must be in the same VPC. Disassociates a subnet from a route table.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/networks/{network_id}/subnets/{subnet_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. vpc-f47df931)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id (ex. subnet-a33d7457)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the subnet of one network.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/placementgroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Placement groups.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/products":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of products.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/publicips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Public IPs.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"standard",
                  "description":"Ip type",
                  "enum":[
                     "standard",
                     "vpc"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create public ip.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/publicips/{allocation_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Allocation ID (ex. eipalloc-3e017ae9)",
                  "in":"path",
                  "name":"allocation_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a public ip.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Allocation id (ex. eipalloc-3e017ae9)",
                  "in":"path",
                  "name":"allocation_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "associate",
                     "disassociate"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id (ex. i-875ed617)",
                  "in":"query",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Release public ip (disassociate)",
                  "in":"query",
                  "name":"release",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Associate/Disassociate Public Ip to/from one instance.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume snapshots.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/snapshots/{snapshot_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)  (copy) Snapshot Destination Region ID",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot id (ex. snap-a59c5cdc) or ami id (ex. ami-8c4ffef1)",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a volume snapshot.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"You can copy the snapshot within the same Region or from one Region to another. <br/>Restore a volume from a volume snapshot.<br/>Delete a volume snapshot.<br/>",
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)  (copy) Snapshot Destination Region ID",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot id (ex. snap-a59c5cdc) or ami id (ex. ami-8c4ffef1)",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "copy",
                     "create"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"(create) The Availability Zone in which to create the volume.",
                           "type":"string"
                        },
                        "name":{
                           "description":"(copy) required Snapshot name in the Destination Region (create) Volume name",
                           "type":"string"
                        },
                        "option":{
                           "description":"(create) Options",
                           "properties":{
                              "encrypted":{
                                 "description":"Indicates whether the volume will be encrypted.",
                                 "type":"boolean"
                              },
                              "iops":{
                                 "description":"if type io1, Provisioned IOPS (SSD)",
                                 "type":"string"
                              },
                              "kms_key_id":{
                                 "description":"The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"The snapshot from which to create the volume. (ex. snap-a59c5cdc)",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "snapshot_id"
                           ],
                           "type":"object"
                        },
                        "size":{
                           "description":"(create) size (GB)",
                           "type":"integer"
                        },
                        "source_region":{
                           "description":"(copy) required Snapshot Source Region ID",
                           "type":"string"
                        },
                        "type":{
                           "default":null,
                           "description":"(create) Volume type, gp2 General Purpose (SSD), io1 Provisioned IOPS (SSD), standard Magnetic",
                           "enum":[
                              "gp2",
                              "io1",
                              "standard"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "region"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Snapshots [copy, create] ",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/snapshots/{volume_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. vol-d8da7b42)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of a volume snapshots.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of results to return in a single call",
                  "in":"query",
                  "name":"max_result",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The token to request the next page of results",
                  "in":"query",
                  "name":"page_token",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"The Availability Zone for the volume. (ex. eu-west-2a)",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"device name ( example /dev/sdf )",
                           "type":"string"
                        },
                        "mountname":{
                           "description":"mountname",
                           "type":"string"
                        },
                        "name":{
                           "description":"volume name",
                           "type":"string"
                        },
                        "option":{
                           "properties":{
                              "encrypted":{
                                 "default":false,
                                 "description":"Indicates whether the volume will be encrypted. true/false",
                                 "type":"boolean"
                              },
                              "iops":{
                                 "description":"for Provisioned IOPS",
                                 "type":"string"
                              },
                              "kms_key_id":{
                                 "description":"The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"snapshot id (ex. snap-a59c5cdc)",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "partition":{
                           "description":"partition",
                           "type":"string"
                        },
                        "size":{
                           "description":"size (GB)",
                           "type":"integer"
                        },
                        "tag":{
                           "description":"Tags (max 10) {\"key1\":\"value1\",\"key2\":\"value2\"}",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "default":"standard",
                           "description":"Volume type, gp2 General Purpose (SSD), io1 Provisioned IOPS (SSD), standard Magnetic",
                           "enum":[
                              "gp2",
                              "io1",
                              "standard"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "avzone",
                        "name",
                        "type",
                        "size",
                        "devicename"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create storage volume.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/volumes/{volume_id}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume name (ex. vol-7d4a2504)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a storage volume.",
            "tags":[
               "provider/outscale"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. vol-d8da7b42)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a volume.",
            "tags":[
               "provider/outscale"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id (ex. vol-7d4a2504)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "attach",
                     "detach",
                     "modify",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"(snapshot) Snapshot description",
                           "type":"string"
                        },
                        "devicename":{
                           "description":"(attach, detach) Device name (/dev/sdf, /dev/sdg, ...)",
                           "type":"string"
                        },
                        "force":{
                           "description":"(detach) Force detach",
                           "type":"boolean"
                        },
                        "instance_id":{
                           "description":"(attach, detach) Instance id (ex. i-875ed617)",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        },
                        "tags":{
                           "description":"(modify) Modify tags {\"key1\":\"val1\", \"key2\":\"val2\"}",
                           "properties":{
                              "key":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on Volume [attach, detach, modify, snapshot].",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/outscale/{uuid}/regions/{region}/vpn":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. eu-west-2)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "av_zone":{
                           "description":"AvailabilityZone",
                           "type":"string"
                        },
                        "customer_gateway":{
                           "description":"create vpn custom gateway",
                           "properties":{
                              "bgpasn":{
                                 "description":"Customer's GW. The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of your customer gateway. Only if Dynamic Routing. (ex. 65000)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"reference",
                                 "type":"string"
                              },
                              "public_ip":{
                                 "description":"Customer's GW. Specify the Internet-routable IP address for your gateway's external interface; the address must be static and may be behind a device performing network NAT (Network Address Translation).",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "public_ip",
                              "name"
                           ],
                           "type":"object"
                        },
                        "name":{
                           "description":"Customer's GW name",
                           "in":"query",
                           "required":true,
                           "type":"string"
                        },
                        "routing":{
                           "default":"static",
                           "description":"Customer's GW. static or dynamic",
                           "enum":[
                              "static",
                              "dynamic"
                           ],
                           "type":"string"
                        },
                        "rtable_id":{
                           "description":"rtable_id",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnet_id":{
                           "description":"subnet_id",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "type":{
                           "default":"ipsec.1",
                           "description":"type",
                           "enum":[
                              "ipsec.1"
                           ],
                           "type":"string"
                        },
                        "vnet_id":{
                           "description":"VPC Id (ex. vpc-093355b7810cde66d)",
                           "in":"query",
                           "required":true,
                           "type":"string"
                        },
                        "vpn_gateway":{
                           "description":"vpn gateway",
                           "properties":{
                              "name":{
                                 "description":"reference",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name"
                           ],
                           "type":"object"
                        },
                        "vpnroute":{
                           "description":"VPN route. The CIDR block associated with the local subnet of the customer network. (ex. \"10.0.2.0/24\")",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vnet_id",
                        "name",
                        "customer_gateway",
                        "type",
                        "vpn_gateway",
                        "routing"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPN connection between an existing virtual private gateway and a VPN customer gateway.",
            "tags":[
               "provider/outscale"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/currentcosts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get current usages and forecast information of all services",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"project id",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Get bills from (ex. 2019-01-01)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Get bills to (ex. 2019-02-01)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of invoices.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/invoices/{invoice_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice id",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get the invoice.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/payments":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter results having date superior to from (ex. 2019-09-01T00:00:00Z)",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter results having date inferior to (ex. 2019-09-31T00:00:00Z)",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get history usages information of a project.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/services":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"filter parent services",
                  "in":"query",
                  "name":"parent",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List billing services.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/usages/current":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get current usages information of all services",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/usages/forecast":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get forecast usage information of a project.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/billing/usages/history":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter results having date superior to from (ex. 2019-09-01T00:00:00Z)",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Filter results having date inferior to (ex. 2019-09-31T00:00:00Z)",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get history usages information of all services.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"All project",
                  "in":"query",
                  "name":"all",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of projects.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/billing/budget/alerts":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of alerts.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"(see GET regions, ex. DE1) Region where to activate private network. No parameters means all regions.",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "delay":{
                           "description":"Delay between alerts in seconds (3600, 10800, 21600, 43200, 86400, 172800, 259200, 604800)",
                           "type":"string"
                        },
                        "email":{
                           "description":"Email to contact",
                           "type":"string"
                        },
                        "monthly_threshold":{
                           "description":"Monthly threshold for this alerting in currency",
                           "type":"string"
                        }
                     },
                     "required":[
                        "delay",
                        "email",
                        "monthly_threshold"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a new alert. (Manage alerts on your consumption).",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/billing/budget/alerts/{alert_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Alert id",
                  "in":"path",
                  "name":"alert_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"(see GET regions, ex. DE1) Region where to activate private network. No parameters means all regions.",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an alert.",
            "tags":[
               "provider/ovh"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Alert id",
                  "in":"path",
                  "name":"alert_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "delay":{
                           "description":"Delay between alerts in seconds. (3600, 10800, 21600, 43200, 86400, 172800, 259200, 604800)",
                           "type":"string"
                        },
                        "email":{
                           "description":"Email to contact",
                           "type":"string"
                        },
                        "monthly_threshold":{
                           "description":"Monthly threshold for this alerting in currency",
                           "type":"string"
                        }
                     },
                     "required":[
                        "delay",
                        "email",
                        "monthly_threshold"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update alert. (Manage alerts on your consumption).",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/billing/usages/current":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get current usages information of a project.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/billing/usages/forecast":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get forecast usage information of a project.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/billing/usages/history":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter results having date superior to from (ex. 2019-09-01T00:00:00Z)",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Filter results having date inferior to (ex. 2019-09-31T00:00:00Z)",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get history usages information of a project.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Requests a page size of items.",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"description",
                           "type":"string"
                        },
                        "name":{
                           "description":"Security Group Name",
                           "type":"string"
                        },
                        "rules":{
                           "items":{
                              "properties":{
                                 "direction":{
                                    "default":"in",
                                    "description":"Rule Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Rule Name",
                                    "type":"string"
                                 },
                                 "option":{
                                    "properties":{
                                       "group_id":{
                                          "type":"string"
                                       },
                                       "ip_type":{
                                          "default":"IPv4",
                                          "enum":[
                                             "IPv4",
                                             "IPv6"
                                          ],
                                          "type":"string"
                                       }
                                    },
                                    "required":null,
                                    "type":"object"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "icmp"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Range (0.0.0.0/0)",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "name"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "name",
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a firewall.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/firewalls/{firewall_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the firewall.",
            "tags":[
               "provider/ovh"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id (ex. 6894bc64-37d5-49f9-b80e-548a72ed3673)",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewall by id.",
            "tags":[
               "provider/ovh"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security Group Id",
                  "in":"path",
                  "name":"firewall_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"add new rule / remove old rule",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region Name",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rules":{
                           "items":{
                              "properties":{
                                 "direction":{
                                    "default":"in",
                                    "description":"Rule Direction",
                                    "enum":[
                                       "in",
                                       "out"
                                    ],
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":"Rule From (ex. 4000)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "id":{
                                    "description":"(remove, required) Rule Id",
                                    "in":"query",
                                    "required":false,
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"(add, required) Rule Name",
                                    "in":"query",
                                    "required":false,
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "default":"tcp",
                                    "description":"Rule Protocol",
                                    "enum":[
                                       "tcp",
                                       "udp",
                                       "icmp"
                                    ],
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"Rule Range (ex. 0.0.0.0/0)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":"Rule To (ex. 4010)",
                                    "in":"query",
                                    "required":true,
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "from",
                                 "to",
                                 "direction",
                                 "protocol",
                                 "range"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "rules"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the firewall, add/remove one or more rules.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/flavors/price":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"subsidiary(ex. DE)",
                  "enum":[
                     "ASIA",
                     "AU",
                     "CA",
                     "CZ",
                     "DE",
                     "ES",
                     "EU",
                     "FR",
                     "FI",
                     "GB",
                     "IE",
                     "IT",
                     "LT",
                     "MA",
                     "NL",
                     "PL",
                     "PT",
                     "QC",
                     "SG",
                     "SN",
                     "TN",
                     "US",
                     "WE",
                     "WS"
                  ],
                  "in":"query",
                  "name":"subsidiary",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get flavor's price.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/flavors/{flavor_id}/price":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Flavor id",
                  "in":"path",
                  "name":"flavor_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"subsidiary(ex. DE)",
                  "enum":[
                     "ASIA",
                     "AU",
                     "CA",
                     "CZ",
                     "DE",
                     "ES",
                     "EU",
                     "FR",
                     "FI",
                     "GB",
                     "IE",
                     "IT",
                     "LT",
                     "MA",
                     "NL",
                     "PL",
                     "PT",
                     "QC",
                     "SG",
                     "SN",
                     "TN",
                     "US",
                     "WE",
                     "WS"
                  ],
                  "in":"query",
                  "name":"subsidiary",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get the flavor's price.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Get compatible images with flavor type",
                  "in":"query",
                  "name":"flavor_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Image OS",
                  "enum":[
                     "linux",
                     "windows",
                     "bsd"
                  ],
                  "in":"query",
                  "name":"os_type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/images/{image_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Image id",
                  "in":"path",
                  "name":"image_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get the image by id.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"To get tags description",
                  "in":"query",
                  "name":"with_tags",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"To get instnance price",
                  "in":"query",
                  "name":"with_price",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/instances/{instance_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id.",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region name (ex. DE1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action",
                  "enum":[
                     "stop",
                     "start",
                     "resume",
                     "suspend",
                     "pause",
                     "unpause",
                     "revert",
                     "delete",
                     "restart",
                     "resize",
                     "snapshot",
                     "console",
                     "bill_monthly",
                     "backup"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"[restart] reboots a server, [resize] resizes a server, [resume] resumes a suspended server and changes its status to ACTIVE, [suspend] suspends a server and changes its status to SUSPENDED, [pause] pauses a server. changes its status to PAUSED, [unpause] unpauses a paused server and changes its status to ACTIVE, [revert] cancels and reverts a pending resize action for a server, [bill-monthly] reduce the price by 50% when passing the instance to the monthly rate (paid in advance). A prorated invoice for the remaining days of the month will be immediately published. This choice is irreversible. [backup]  This API is not supported for volume-backed instances.",
                     "properties":{
                        "backup_name":{
                           "description":"(backup) The name of the image to be backed up.",
                           "type":"string"
                        },
                        "backup_type":{
                           "description":"(backup) The type of the backup, (ex. daily).",
                           "enum":[
                              "daily",
                              "monthly"
                           ],
                           "type":"string"
                        },
                        "flavor_id":{
                           "description":"(resize) You must stop the VM instance to edit its machine type. (ex. f92a622d-ba3b-4873-90fd-c0940c8533a1)",
                           "type":"string"
                        },
                        "force":{
                           "default":false,
                           "description":"(delete)",
                           "type":"boolean"
                        },
                        "metadata":{
                           "description":"(snapshot) Metadata",
                           "properties":{
                              "key1":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "reboot_type":{
                           "description":"(restart) Reboot type",
                           "enum":[
                              "HARD",
                              "SOFT"
                           ],
                           "type":"string"
                        },
                        "rotation":{
                           "description":"(backup)  The rotation of the back up image, the oldest image will be removed when image count exceed the rotation count.",
                           "type":"number"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [stop, start, resume, suspend, pause, unpause, revert, delete, restart, resize, snapshot, console, bill_monthly, backup].",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/instances/{instance_id}/interfaces":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Interface id",
                  "in":"query",
                  "name":"interface_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Remove instance network interfaces.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/instances/{instance_id}/monitoring":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Monitoring Period",
                  "enum":[
                     "lastday",
                     "lastmonth",
                     "lastweek",
                     "lastyear",
                     "today"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Monitoring Type",
                  "enum":[
                     "mem:used",
                     "mem:max",
                     "cpu:used",
                     "cpu:max",
                     "net:tx",
                     "net:rx"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves a instance monitoring.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"query",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create keypair.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/keypairs/{key_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name",
                  "in":"path",
                  "name":"key_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete keypair.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Public network = true, Private network = false",
                  "in":"query",
                  "name":"public",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get Private/Public networks.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"(see GET regions, ex. DE1) Region where to activate private network. No parameters means all regions.v",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "allregion":{
                           "default":true,
                           "description":"All regions",
                           "type":"boolean"
                        },
                        "name":{
                           "description":"Network name",
                           "type":"string"
                        },
                        "subnet":{
                           "description":"Subnet",
                           "properties":{
                              "cidr_block":{
                                 "description":"Subnet cidr (ex. 192.168.3.0/24)",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Subnet name",
                                 "type":"string"
                              },
                              "option":{
                                 "description":"Options",
                                 "properties":{
                                    "access":{
                                       "default":"private",
                                       "description":"Access",
                                       "enum":[
                                          "public",
                                          "private"
                                       ],
                                       "type":"string"
                                    },
                                    "dhcp":{
                                       "default":false,
                                       "description":"Dhcp",
                                       "type":"boolean"
                                    },
                                    "end_ip":{
                                       "description":"(ex. 192.168.3.254)",
                                       "type":"string"
                                    },
                                    "ipversion":{
                                       "description":"Ip version",
                                       "type":"string"
                                    },
                                    "nogateway":{
                                       "default":false,
                                       "description":"No gateway",
                                       "type":"boolean"
                                    },
                                    "start_ip":{
                                       "description":"(ex. 192.168.3.2)",
                                       "type":"string"
                                    }
                                 },
                                 "required":[
                                    "start_ip",
                                    "end_ip"
                                 ],
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "cidr_block"
                           ],
                           "type":"object"
                        },
                        "time_to_wait":{
                           "description":"Network name",
                           "type":"string"
                        },
                        "vlanid":{
                           "description":"Vlanid id, between 0 and 4000. 0 value means no vlan.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "subnet",
                        "vlanid",
                        "name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a network and subnets.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. pn-1062128_55)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the network and subnets.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id.",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. DE1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cidr_block":{
                           "description":"(ex. 192.168.4.0/24)",
                           "type":"string"
                        },
                        "dhcp":{
                           "default":false,
                           "description":"Dhcp",
                           "type":"boolean"
                        },
                        "end_ip":{
                           "description":"(ex. 192.168.4.254)",
                           "type":"string"
                        },
                        "ipversion":{
                           "description":"Ip version",
                           "type":"string"
                        },
                        "nogateway":{
                           "default":false,
                           "description":"No gateway",
                           "type":"boolean"
                        },
                        "start_ip":{
                           "description":"(ex. 192.168.4.2)",
                           "type":"string"
                        },
                        "subnet_name":{
                           "description":"Subnet name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "cidr_block"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a new subnet in the existing network.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/networks/{network_id}/interfaces":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instanceid",
                  "in":"query",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add instance network interfaces.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/networks/{network_id}/subnet/{subnet_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id. (ex. pn-1062128_55)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subnet id. (ex. 0bdf7f76-4282-4f47-9a70-67c495a46c89)",
                  "in":"path",
                  "name":"subnet_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. DE1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the subnet in the network.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/networks/{network_id}/subnets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id (ex. pn-1062128_55)",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Public network",
                  "in":"query",
                  "name":"public",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get the network subnets.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/privateimages":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of all private images, that the project can access.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/privateimages/{image_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Image id",
                  "in":"path",
                  "name":"image_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the private image.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of  quotas.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/regions":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of project regions.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Requests a page size of items.",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of accessible volumes.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "avzone":{
                           "description":"Availability zone",
                           "type":"string"
                        },
                        "description":{
                           "description":"Description",
                           "type":"string"
                        },
                        "format_dict":{
                           "default":true,
                           "description":"Format dict",
                           "type":"boolean"
                        },
                        "name":{
                           "description":"Name",
                           "type":"string"
                        },
                        "option":{
                           "description":"Options",
                           "properties":{
                              "image_id":{
                                 "description":"Id of image to create a bootable volume",
                                 "type":"string"
                              },
                              "snapshot_id":{
                                 "description":"Source snapshot id",
                                 "type":"string"
                              },
                              "tag":{
                                 "description":"Tags (Metadata) (max 10)",
                                 "properties":{
                                    "key1":{
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "type":"object"
                        },
                        "size":{
                           "description":"Size in (GB)",
                           "type":"string"
                        },
                        "type":{
                           "default":"classic",
                           "description":"Type",
                           "enum":[
                              "classic",
                              "high-speed"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "project_id",
                        "region",
                        "size",
                        "type"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a volume.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/volumes/backups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Detail.",
                  "in":"query",
                  "name":"detailed",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of all backups, with details, that the project can access.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/volumes/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Detail.",
                  "in":"query",
                  "name":"detailed",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Requests a page size of items",
                  "in":"query",
                  "name":"limit",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of all Block Storage snapshots, with details, that the project can access.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/volumes/snapshots/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot id (GET List snapshots, ex. 0262975a-f7e3-4478-a989-d6ce8b4f1b1e)",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the volume snapshot.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume uuid (ex. 6f9437e9-938c-4b62-9690-03e2bc4a8e6f)",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Force delete",
                  "in":"query",
                  "name":"force",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the volume.",
            "tags":[
               "provider/ovh"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action [attach, detach, resize]",
                  "enum":[
                     "attach",
                     "detach",
                     "resize"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (see GET regions, ex. UK1)",
                  "in":"query",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "device_name":{
                           "description":"(attach) Device name may differ due to hypervisor settings (ex. /dev/sdb)",
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"Instance id",
                           "type":"string"
                        },
                        "size":{
                           "description":"(resize) Size in (GB)",
                           "type":"string"
                        }
                     },
                     "required":[
                        "instance_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attach/Detach a volume to/from one instance (vm) and Resize the volume.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/ovh/{uuid}/projects/{project_id}/vracks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Endpoint (ex. ovh-eu)",
                  "enum":[
                     "ovh-eu",
                     "ovh-us",
                     "ovh-ca",
                     "soyoustart-eu",
                     "soyoustart-ca",
                     "kimsufi-eu",
                     "kimsufi-ca",
                     "runabove-ca"
                  ],
                  "in":"query",
                  "name":"endpoint",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get the linked vRack. A vRack allows to connect your OVH infrastructures accross products and datacenters.",
            "tags":[
               "provider/ovh"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/organizations":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of organizations.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/organizations/{organization_id}/":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"path",
                  "name":"organization_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Lock/Unlock Organization",
                  "enum":[
                     "lock",
                     "unlock"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Lock/Unlock organization",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/organizations/{organization_id}/billing/consumption":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"path",
                  "name":"organization_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"path",
                  "name":"organization_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"customer_id",
                  "in":"query",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"year",
                  "in":"query",
                  "name":"year",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"query",
                  "name":"month",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"page",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"page_size",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve consumptions.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/organizations/{organization_id}/billing/consumption/current":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"path",
                  "name":"organization_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a current consumption.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/organizations/{organization_id}/billing/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Organization_id",
                  "in":"path",
                  "name":"organization_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve invoices.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list buckets",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acl":{
                           "description":"The canned ACL to apply to the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "bucket":{
                           "description":"The name of the bucket to create.",
                           "required":true,
                           "type":"string"
                        },
                        "create_bucket_configuration":{
                           "properties":{
                              "LocationConstraint":{
                                 "description":"Specifies the Region where the bucket will be created",
                                 "required":false,
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "grant_full_control":{
                           "description":"Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to list the objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the bucket ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write":{
                           "description":"Allows grantee to create new objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_enabled_for_bucket":{
                           "description":"Specifies whether you want S3 Object Lock to be enabled for the new bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "object_ownership":{
                           "description":"The container element for object ownership for a bucket's ownership controls.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Creates a new S3 bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Deletes the S3 bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/acl":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retreive a ACL (Access Control List) of the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket to which to apply the ACL.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "access_control_policy":{
                           "description":"Contains the elements that set the ACL permissions for an object per grantee.",
                           "properties":{
                              "Grants":{
                                 "items":{
                                    "description":"A list of grants.",
                                    "properties":{
                                       "Grantee":{
                                          "description":"The person being granted permissions.",
                                          "properties":{
                                             "DisplayName":{
                                                "description":"Screen name of the grantee.",
                                                "type":"string"
                                             },
                                             "EmailAddress":{
                                                "description":"Email address of the grantee.",
                                                "type":"string"
                                             },
                                             "ID":{
                                                "description":"The canonical user ID of the grantee.",
                                                "type":"string"
                                             },
                                             "Type":{
                                                "description":"Type of grantee. 'CanonicalUser'|'AmazonCustomerByEmail'|'Group',",
                                                "required":true,
                                                "type":"string"
                                             },
                                             "URI":{
                                                "description":"URI of the grantee group.",
                                                "type":"string"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "Permission":{
                                          "description":"Specifies the permission given to the grantee. 'FULL_CONTROL'|'WRITE'|'WRITE_ACP'|'READ'|'READ_ACP'",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "Owner":{
                                 "description":"Container for the bucket owner's display name and ID.",
                                 "properties":{
                                    "DisplayName":{
                                       "description":"Container for the display name of the owner.",
                                       "type":"string"
                                    },
                                    "ID":{
                                       "description":"Container for the ID of the owner.",
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "acl":{
                           "description":"The canned ACL to apply to the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_full_control":{
                           "description":"Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to list the objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the bucket ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write":{
                           "description":"Allows grantee to create new objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable bucket.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the permissions on an existing bucket using access control lists (ACL)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/cors":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Deletes the cors configuration information set for the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the cors configuration information set for the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/head_bucket":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action is useful to determine if a bucket exists and you have permission to access it. The action returns a 200 OK if the bucket exists and you have permission to access it.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/lifecycle":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Deletes the lifecycle configuration from the specified bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the lifecycle configuration information set on the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket to which to apply the ACL.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "lifecycle_configuration":{
                           "description":"Contains the elements that set the ACL permissions for an object per grantee.",
                           "properties":{
                              "Rules":{
                                 "description":"Specifies lifecycle configuration rules for an Amazon S3 bucket.",
                                 "items":{
                                    "description":"A list of grants.",
                                    "properties":{
                                       "AbortIncompleteMultipartUpload":{
                                          "description":"Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.",
                                          "properties":{
                                             "DaysAfterInitiation":{
                                                "description":"Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.",
                                                "type":"number"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "Expiration":{
                                          "description":"Specifies the expiration for the lifecycle of the object.",
                                          "properties":{
                                             "Date":{
                                                "description":"2022/10/28, Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.2022/10/28",
                                                "type":"string"
                                             },
                                             "Days":{
                                                "default":1,
                                                "description":"Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.",
                                                "type":"number"
                                             },
                                             "ExpiredObjectDeleteMarker":{
                                                "description":"Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions.",
                                                "type":"boolean"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "ID":{
                                          "description":"Unique identifier for the rule. The value can't be longer than 255 characters.",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "NoncurrentVersionExpiration":{
                                          "description":"Specifies when noncurrent object versions expire.",
                                          "properties":{
                                             "NewerNoncurrentVersions":{
                                                "description":"Specifies how many noncurrent versions Amazon S3 will retain.",
                                                "type":"number"
                                             },
                                             "NoncurrentDays":{
                                                "description":"Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.",
                                                "type":"number"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "NoncurrentVersionTransition":{
                                          "description":"Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA , ONEZONE_IA , INTELLIGENT_TIERING , GLACIER_IR , GLACIER , or DEEP_ARCHIVE storage class.",
                                          "properties":{
                                             "NewerNoncurrentVersions":{
                                                "description":"Specifies how many noncurrent versions Amazon S3 will retain.",
                                                "type":"number"
                                             },
                                             "NoncurrentDays":{
                                                "description":"Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.",
                                                "type":"number"
                                             },
                                             "StorageClass":{
                                                "description":"The class of storage used to store the object.",
                                                "type":"string"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "Prefix":{
                                          "description":"Object key prefix that identifies one or more objects to which this rule applies.",
                                          "required":true,
                                          "type":"string"
                                       },
                                       "Status":{
                                          "description":"If Enabled , the rule is currently being applied. If Disabled , the rule is not currently being applied.",
                                          "required":true,
                                          "type":"string"
                                       },
                                       "Transition":{
                                          "description":"Specifies when an object transitions to a specified storage class.",
                                          "properties":{
                                             "Date":{
                                                "description":"2022/10/28, Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. 2022/10/28",
                                                "type":"string"
                                             },
                                             "Days":{
                                                "default":1,
                                                "description":"Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.",
                                                "type":"number"
                                             },
                                             "StorageClass":{
                                                "description":"The storage class to which you want the object to transition.",
                                                "type":"string"
                                             }
                                          },
                                          "type":"object"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/location":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the Region the bucket resides in.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/multipart_uploads":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Character you use to group keys.",
                  "in":"query",
                  "name":"delimiter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use.",
                  "in":"query",
                  "name":"encoding_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.",
                  "in":"query",
                  "name":"key_marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body.",
                  "in":"query",
                  "name":"max_uploads",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"Lists in-progress uploads only for those keys that begin with the specified prefix.",
                  "in":"query",
                  "name":"prefix",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Together with key-marker, specifies the multipart upload after which listing should begin.",
                  "in":"query",
                  "name":"upload_id_marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action lists in-progress multipart uploads.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key of the object to get.",
                  "in":"query",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                  "in":"query",
                  "name":"if_match",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"(2022/10/28) Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                  "in":"query",
                  "name":"if_modified_since",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                  "in":"query",
                  "name":"if_none_match",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"(2022/10/28)  Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                  "in":"query",
                  "name":"if_unmodified_since",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Downloads the specified range bytes of an object. For more information about the HTTP",
                  "in":"query",
                  "name":"range",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the Cache-Control header of the response.",
                  "in":"query",
                  "name":"response_cache_control",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the Content-Disposition header of the response",
                  "in":"query",
                  "name":"response_content_disposition",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the Content-Encoding header of the response.",
                  "in":"query",
                  "name":"response_content_encoding",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the Content-Language header of the response.",
                  "in":"query",
                  "name":"response_content_language",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the Content-Type header of the response.",
                  "in":"query",
                  "name":"response_content_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"(2022/10/28)  Sets the Expires header of the response.",
                  "in":"query",
                  "name":"response_expires",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"VersionId used to reference a specific version of the object.",
                  "in":"query",
                  "name":"version_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies the algorithm to use to when decrypting the object (for example, AES256).",
                  "in":"query",
                  "name":"sse_customer_algorithm",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data.",
                  "in":"query",
                  "name":"sse_customer_key",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Confirms that the requester knows that they will be charged for the request.",
                  "in":"query",
                  "name":"request_payer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Part number of the object being read. This is a positive integer between 1 and 10,000",
                  "in":"query",
                  "name":"part_number",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieves objects from Amazon S3. ",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name to which the PUT action was initiated.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acl":{
                           "description":"The canned ACL to apply to the object",
                           "required":false,
                           "type":"string"
                        },
                        "body":{
                           "description":"(bytes or seekable file-like object)  Object data.",
                           "required":false,
                           "type":"string"
                        },
                        "bucket_key_enabled":{
                           "description":"Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS).",
                           "required":false,
                           "type":"boolean"
                        },
                        "cache_control":{
                           "description":"Can be used to specify caching behavior along the request/reply chain",
                           "required":false,
                           "type":"string"
                        },
                        "content_disposition":{
                           "description":"Specifies presentational information for the object.",
                           "required":false,
                           "type":"string"
                        },
                        "content_encoding":{
                           "description":"Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field",
                           "required":false,
                           "type":"string"
                        },
                        "content_language":{
                           "description":"The language the content is in.",
                           "required":false,
                           "type":"string"
                        },
                        "content_length":{
                           "description":"Size of the body in bytes.",
                           "required":false,
                           "type":"number"
                        },
                        "content_md5":{
                           "description":"The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864.",
                           "required":false,
                           "type":"string"
                        },
                        "content_type":{
                           "description":"A standard MIME type describing the format of the contents.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "expires":{
                           "description":"(2022/10/28) The date and time at which the object is no longer cacheable.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_full_control":{
                           "description":"Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to read the object data and its metadata.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the object ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable object.",
                           "required":false,
                           "type":"string"
                        },
                        "key":{
                           "description":"Object key for which the PUT action was initiated.(ex. object2, repertoire2/object2)",
                           "required":true,
                           "type":"string"
                        },
                        "metadata":{
                           "description":"A map of metadata to store with the object in S3.",
                           "properties":{
                              "string":{
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "object_lock_legal_hold_status":{
                           "description":"Specifies whether a legal hold will be applied to this object.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_mode":{
                           "description":"The Object Lock mode that you want to apply to this object.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_retain_until_date":{
                           "description":"(2022/10/28) The date and time when you want this object's Object Lock to expire.",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "server_side_encryption":{
                           "description":"The server-side encryption algorithm used when storing this object in Amazon S3",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_algorithm":{
                           "description":"Specifies the algorithm to use to when encrypting the object (for example, AES256).",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_key":{
                           "description":"Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_encryption_context":{
                           "description":"Specifies the Amazon Web Services KMS Encryption Context to use for object encryption.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_key_id":{
                           "description":"If x-amz-server-side-encryption is present and has the value of aws:kms , this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetrical customer managed key that was used for the object.",
                           "required":false,
                           "type":"string"
                        },
                        "storage_class":{
                           "description":"By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects.",
                           "required":false,
                           "type":"string"
                        },
                        "tagging":{
                           "description":"The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, \"Key1=Value1\")",
                           "required":false,
                           "type":"string"
                        },
                        "website_redirect_location":{
                           "description":"If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Adds an object to a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object/{key}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key name of the object to delete.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication devic",
                  "in":"query",
                  "name":"mfa",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"VersionId used to reference a specific version of the object.",
                  "in":"query",
                  "name":"version_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Confirms that the requester knows that they will be charged for the request.",
                  "in":"query",
                  "name":"request_payer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation.",
                  "in":"query",
                  "name":"bypass_governance_retention",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object/{key}/tagging":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name containing the objects from which to remove the tags.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The key that identifies the object in the bucket from which to remove all tags.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VersionId used to reference a specific version of the object.",
                  "in":"query",
                  "name":"version_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Removes the entire tag set from the specified object.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object_acl":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key of the object to get.",
                  "in":"query",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VersionId used to reference a specific version of the object.",
                  "in":"query",
                  "name":"version_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Confirms that the requester knows that they will be charged for the request.",
                  "in":"query",
                  "name":"request_payer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the access control list (ACL) of an object.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name that contains the object to which you want to attach the ACL.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "access_control_policy":{
                           "description":"The canned ACL to apply to the object",
                           "properties":{
                              "Grants":{
                                 "items":{
                                    "description":"A list of grants.",
                                    "properties":{
                                       "Grantee":{
                                          "description":"The person being granted permissions.",
                                          "properties":{
                                             "DisplayName":{
                                                "description":"Screen name of the grantee.",
                                                "type":"string"
                                             },
                                             "EmailAddress":{
                                                "description":"Email address of the grantee.",
                                                "type":"string"
                                             },
                                             "ID":{
                                                "description":"The canonical user ID of the grantee.",
                                                "type":"string"
                                             },
                                             "Type":{
                                                "description":"Type of grantee. 'CanonicalUser'|'AmazonCustomerByEmail'|'Group',",
                                                "type":"string"
                                             },
                                             "URI":{
                                                "description":"URI of the grantee group.",
                                                "type":"string"
                                             }
                                          },
                                          "type":"object"
                                       },
                                       "Permission":{
                                          "description":"Specifies the permission given to the grantee. 'FULL_CONTROL'|'WRITE'|'WRITE_ACP'|'READ'|'READ_ACP'",
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "Owner":{
                                 "description":"Container for the bucket owner's display name and ID.",
                                 "properties":{
                                    "DisplayName":{
                                       "description":"Container for the display name of the owner.",
                                       "type":"string"
                                    },
                                    "ID":{
                                       "description":"Container for the ID of the owner.",
                                       "type":"string"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "acl":{
                           "description":"The canned ACL to apply to the object. 'private'|'public-read'|'public-read-write'|'authenticated-read'|'aws-exec-read'|'bucket-owner-read'|'bucket-owner-full-control',",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_full_control":{
                           "description":"Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to list the objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the bucket ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write":{
                           "description":"Allows grantee to create new objects in the bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable bucket.",
                           "required":false,
                           "type":"string"
                        },
                        "key":{
                           "description":"Key for which the PUT action was initiated.(ex. object2, repertoire2/object2)",
                           "required":true,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "version_id":{
                           "description":"VersionId used to reference a specific version of the object.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Uses the acl subresource to set the access control list (ACL) permissions for a new or existing object in an S3 bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object_lock_configuration":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Gets the Object Lock configuration for a bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket whose Object Lock configuration you want to create or replace.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "content_md5":{
                           "description":"The MD5 hash for the request body.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_configuration":{
                           "description":"The canned ACL to apply to the object",
                           "properties":{
                              "ObjectLockEnabled":{
                                 "description":"Indicates whether this bucket has an Object Lock configuration enabled. Enable ObjectLockEnabled when you apply ObjectLockConfiguration to a bucket.",
                                 "required":false,
                                 "type":"string"
                              },
                              "Rule":{
                                 "description":"Specifies the Object Lock rule for the specified object. Enable the this rule when you apply ObjectLockConfiguration to a bucket.",
                                 "properties":{
                                    "DefaultRetention":{
                                       "description":"The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. Enabled",
                                       "properties":{
                                          "Days":{
                                             "description":"The number of days that you want to specify for the default retention period. Must be used with Mode .",
                                             "type":"number"
                                          },
                                          "Mode":{
                                             "description":"The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Must be used with either Days or Years .'GOVERNANCE'|'COMPLIANCE'",
                                             "type":"string"
                                          },
                                          "Years":{
                                             "description":"The number of years that you want to specify for the default retention period. Must be used with Mode .",
                                             "type":"number"
                                          }
                                       },
                                       "type":"object"
                                    }
                                 },
                                 "type":"object"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "token":{
                           "description":"A token to allow Object Lock to be enabled for an existing bucket.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Places an Object Lock configuration on the specified bucket. ",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object_tagging":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Object key for which to get the tagging information.",
                  "in":"query",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The versionId of the object for which to get the tagging information.",
                  "in":"query",
                  "name":"version_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Confirms that the requester knows that they will be charged for the request.",
                  "in":"query",
                  "name":"request_payer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the tag-set of an object.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name containing the object.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "content_md5":{
                           "description":"The MD5 hash for the request body.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "key":{
                           "description":"Name of the object key.",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "tagging":{
                           "description":"Container for the TagSet and Tag elements",
                           "properties":{
                              "TagSet":{
                                 "description":"A collection for a set of tags",
                                 "items":{
                                    "properties":{
                                       "Key":{
                                          "description":"Name of the object key.",
                                          "required":true,
                                          "type":"string"
                                       },
                                       "Value":{
                                          "description":"Value of the tag.",
                                          "required":true,
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "required":true,
                                 "type":"array"
                              }
                           },
                           "required":true,
                           "type":"object"
                        },
                        "version_id":{
                           "description":"The versionId of the object that the tag-set will be added to.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the supplied tag-set to an object that already exists in a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/object_version":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A delimiter is a character you use to group keys.",
                  "in":"query",
                  "name":"delimiter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use",
                  "in":"query",
                  "name":"encoding_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Marker is where you want Amazon S3 to start listing from",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names",
                  "in":"query",
                  "name":"max_keys",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"Limits the response to keys that begin with the specified prefix.",
                  "in":"query",
                  "name":"prefix",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Specifies the object version you want to start listing from.",
                  "in":"query",
                  "name":"version_id_marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns metadata about all versions of the objects in a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A delimiter is a character you use to group keys.",
                  "in":"query",
                  "name":"delimiter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use",
                  "in":"query",
                  "name":"encoding_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Marker is where you want Amazon S3 to start listing from",
                  "in":"query",
                  "name":"marker",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names",
                  "in":"query",
                  "name":"max_keys",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"Limits the response to keys that begin with the specified prefix.",
                  "in":"query",
                  "name":"prefix",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Confirms that the requester knows that she or he will be charged for the list objects request.",
                  "in":"query",
                  "name":"request_payer",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account,",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of objects in the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects/{key}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the destination bucket.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The key of the destination object.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acl":{
                           "description":"The canned ACL to apply to the object. 'private'|'public-read'|'public-read-write'|'authenticated-read'|'aws-exec-read'|'bucket-owner-read'|'bucket-owner-full-control',",
                           "required":false,
                           "type":"string"
                        },
                        "bucket_key_enabled":{
                           "description":"True|False, Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.",
                           "required":false,
                           "type":"boolean"
                        },
                        "cache_control":{
                           "description":"Specifies caching behavior along the request/reply chain.",
                           "required":false,
                           "type":"string"
                        },
                        "content_disposition":{
                           "description":"Specifies presentational information for the object.",
                           "required":false,
                           "type":"string"
                        },
                        "content_encoding":{
                           "description":"Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                           "required":false,
                           "type":"string"
                        },
                        "content_language":{
                           "description":"The language the content is in.",
                           "required":false,
                           "type":"string"
                        },
                        "content_type":{
                           "description":"A standard MIME type describing the format of the object data.",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source":{
                           "description":"string or object. The name of the source bucket, key name of the source object, and optional version ID of the source object. 'string' or {'Bucket'; 'string', 'Key'; 'string', 'VersionId'; 'string'},The string form is {bucket}/{key} or {bucket}/{key}?versionId={versionId}",
                           "required":true,
                           "type":"string"
                        },
                        "copy_source_if_match":{
                           "description":"Copies the object if its entity tag (ETag) matches the specified tag.",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source_if_modified_since":{
                           "description":"2021/10/28, Copies the object if it has been modified since the specified time.",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source_if_none_match":{
                           "description":"Copies the object if its entity tag (ETag) is different than the specified ETag.",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source_if_unmodified_since":{
                           "description":"2021/10/28, Copies the object if it hasn't been modified since the specified time.",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source_sse_customer_algorithm":{
                           "description":"Specifies the algorithm to use when decrypting the source object (for example, AES256).",
                           "required":false,
                           "type":"string"
                        },
                        "copy_source_sse_customer_key":{
                           "description":"Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected destination bucket owner.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_source_bucket_owner":{
                           "description":"The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "expires":{
                           "description":"2021/10/28,The date and time at which the object is no longer cacheable",
                           "required":false,
                           "type":"string"
                        },
                        "grant_full_control":{
                           "description":"Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to read the object data and its metadata.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the object ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable object.",
                           "required":false,
                           "type":"string"
                        },
                        "metadata":{
                           "description":"A map of metadata to store with the object in S3.",
                           "properties":{
                              "string":{
                                 "required":false,
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "metadata_directive":{
                           "description":"Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.'COPY'|'REPLACE',",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_legal_hold_status":{
                           "description":"ON|OFF,Specifies whether you want to apply a Legal Hold to the copied object.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_mode":{
                           "description":"The Object Lock mode that you want to apply to the copied object.'GOVERNANCE'|'COMPLIANCE',",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_retain_until_date":{
                           "description":"2021/10/28,The date and time when you want the copied object's Object Lock to expire.",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "server_side_encryption":{
                           "description":"The server-side encryption algorithm used when storing this object in Amazon S3, 'AES256'|'aws:kms',",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_algorithm":{
                           "description":"Specifies the algorithm to use to when encrypting the object (for example, AES256).",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_key":{
                           "description":"Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_encryption_context":{
                           "description":"Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_key_id":{
                           "description":"Specifies the Amazon Web Services KMS key ID to use for object encryption.",
                           "required":false,
                           "type":"string"
                        },
                        "storage_class":{
                           "description":"By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects.'STANDARD'|'REDUCED_REDUNDANCY'|'STANDARD_IA'|'ONEZONE_IA'|'INTELLIGENT_TIERING'|'GLACIER'|'DEEP_ARCHIVE'|'OUTPOSTS'|'GLACIER_IR',",
                           "required":false,
                           "type":"string"
                        },
                        "tagging":{
                           "description":"The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective . The tag-set must be encoded as URL Query parameters.",
                           "required":false,
                           "type":"string"
                        },
                        "tagging_directive":{
                           "description":"Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.'COPY'|'REPLACE',",
                           "required":false,
                           "type":"string"
                        },
                        "website_redirect_location":{
                           "description":"If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Creates a copy of an object that is already stored in Amazon S3.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects/{key}/head_object":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The object key.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "if_match":{
                           "description":"Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).",
                           "required":false,
                           "type":"string"
                        },
                        "if_modified_since":{
                           "description":"(2021/10/28) Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).",
                           "required":false,
                           "type":"string"
                        },
                        "if_none_match":{
                           "description":"Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).",
                           "required":false,
                           "type":"string"
                        },
                        "if_unmodified_since":{
                           "description":"(2021/10/28) -- Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).",
                           "required":false,
                           "type":"string"
                        },
                        "part_number":{
                           "description":"Part number of the object being read. This is a positive integer between 1 and 10,000.",
                           "required":false,
                           "type":"number"
                        },
                        "range":{
                           "description":"Downloads the specified range bytes of an object.",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_algorithm":{
                           "description":"Specifies the algorithm to use to when encrypting the object (for example, AES256).",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_key":{
                           "description":"Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data.",
                           "required":false,
                           "type":"string"
                        },
                        "version_id":{
                           "description":"VersionId used to reference a specific version of the object.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action action retrieves metadata from an object without returning the object itself.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects/{key}/multipart_upload":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket to which to initiate the upload",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Object key for which the multipart upload is to be initiated.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acl":{
                           "description":"The canned ACL to apply to the object. 'private'|'public-read'|'public-read-write'|'authenticated-read'|'aws-exec-read'|'bucket-owner-read'|'bucket-owner-full-control',",
                           "required":false,
                           "type":"string"
                        },
                        "bucket_key_enabled":{
                           "description":"True|False, Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.",
                           "required":false,
                           "type":"boolean"
                        },
                        "cache_control":{
                           "description":"Specifies caching behavior along the request/reply chain.",
                           "required":false,
                           "type":"string"
                        },
                        "content_disposition":{
                           "description":"Specifies presentational information for the object.",
                           "required":false,
                           "type":"string"
                        },
                        "content_encoding":{
                           "description":"Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                           "required":false,
                           "type":"string"
                        },
                        "content_language":{
                           "description":"The language the content is in.",
                           "required":false,
                           "type":"string"
                        },
                        "content_type":{
                           "description":"A standard MIME type describing the format of the object data.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected destination bucket owner.",
                           "required":false,
                           "type":"string"
                        },
                        "expires":{
                           "description":"2021/10/28,The date and time at which the object is no longer cacheable",
                           "required":false,
                           "type":"string"
                        },
                        "grant_full_control":{
                           "description":"Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read":{
                           "description":"Allows grantee to read the object data and its metadata.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_read_acp":{
                           "description":"Allows grantee to read the object ACL.",
                           "required":false,
                           "type":"string"
                        },
                        "grant_write_acp":{
                           "description":"Allows grantee to write the ACL for the applicable object.",
                           "required":false,
                           "type":"string"
                        },
                        "metadata":{
                           "description":"A map of metadata to store with the object in S3.",
                           "properties":{
                              "string":{
                                 "required":false,
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "object_lock_legal_hold_status":{
                           "description":"ON|OFF,Specifies whether you want to apply a Legal Hold to the copied object.",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_mode":{
                           "description":"The Object Lock mode that you want to apply to the copied object.'GOVERNANCE'|'COMPLIANCE',",
                           "required":false,
                           "type":"string"
                        },
                        "object_lock_retain_until_date":{
                           "description":"2021/10/28,The date and time when you want the copied object's Object Lock to expire.",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        },
                        "server_side_encryption":{
                           "description":"The server-side encryption algorithm used when storing this object in Amazon S3, 'AES256'|'aws:kms',",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_algorithm":{
                           "description":"Specifies the algorithm to use to when encrypting the object (for example, AES256).",
                           "required":false,
                           "type":"string"
                        },
                        "sse_customer_key":{
                           "description":"Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_encryption_context":{
                           "description":"Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
                           "required":false,
                           "type":"string"
                        },
                        "ssekms_key_id":{
                           "description":"Specifies the Amazon Web Services KMS key ID to use for object encryption.",
                           "required":false,
                           "type":"string"
                        },
                        "storage_class":{
                           "description":"By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects.'STANDARD'|'REDUCED_REDUNDANCY'|'STANDARD_IA'|'ONEZONE_IA'|'INTELLIGENT_TIERING'|'GLACIER'|'DEEP_ARCHIVE'|'OUTPOSTS'|'GLACIER_IR',",
                           "required":false,
                           "type":"string"
                        },
                        "tagging":{
                           "description":"The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective . The tag-set must be encoded as URL Query parameters.",
                           "required":false,
                           "type":"string"
                        },
                        "website_redirect_location":{
                           "description":"If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action initiates a multipart upload and returns an upload ID",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects/{key}/uploads/{upload_id}/abort":{
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name to which the upload was taking place.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key of the object for which the multipart upload was initiated.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Upload ID that identifies the multipart upload.",
                  "in":"path",
                  "name":"upload_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) erro",
                           "required":false,
                           "type":"string"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action aborts a multipart upload.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/objects/{key}/uploads/{upload_id}/complete":{
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the bucket to which the multipart upload was initiated.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Object key for which the multipart upload was initiated.",
                  "in":"path",
                  "name":"key",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ID for the initiated multipart upload.",
                  "in":"path",
                  "name":"upload_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) erro",
                           "required":false,
                           "type":"string"
                        },
                        "multipart_upload":{
                           "description":"The container for the multipart upload request information.",
                           "properties":{
                              "Parts":{
                                 "description":"Array of CompletedPart data types.If you do not supply a valid Part with your request, the service sends back an HTTP 400 response.",
                                 "items":{
                                    "description":"Details of the parts that were uploaded.",
                                    "properties":{
                                       "ETag":{
                                          "description":"Entity tag returned when the part was uploaded.",
                                          "type":"string"
                                       },
                                       "PartNumber":{
                                          "description":"Part number that identifies the part. This is a positive integer between 1 and 10,000.",
                                          "type":"number"
                                       }
                                    },
                                    "required":null,
                                    "type":"object"
                                 },
                                 "required":false,
                                 "type":"array"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "request_payer":{
                           "description":"Confirms that the requester knows that they will be charged for the request.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Completes a multipart upload by assembling previously uploaded parts.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/paginate_the_function":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket to which the multipart upload was initiated.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The operation name. This is the same name as the method name on the client.",
                  "in":"query",
                  "name":"function_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "delimiter":{
                           "description":"Character you use to group keys.",
                           "required":false,
                           "type":"string"
                        },
                        "encoding_type":{
                           "description":"Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use.",
                           "required":false,
                           "type":"string"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "pagination_config":{
                           "description":"A dictionary that provides parameters to control pagination.",
                           "properties":{
                              "MaxItems":{
                                 "description":"The total number of items to return. If the total number of items available is more than the value specified in max-items then a NextToken will be provided in the output that you can use to resume pagination.",
                                 "required":false,
                                 "type":"number"
                              },
                              "PageSize":{
                                 "description":"The size of each page.",
                                 "required":false,
                                 "type":"number"
                              },
                              "StartingToken":{
                                 "description":"A token to specify where to start paginating. This is the NextToken from a previous response.",
                                 "required":false,
                                 "type":"number"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "prefix":{
                           "description":"Lists in-progress uploads only for those keys that begin with the specified prefix.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Creates an iterator that will paginate through responses of the function.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/policy":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This implementation of the DELETE action uses the policy subresource to delete the policy of a specified bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the policy of a specified bucket",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "confirm_remove_self_bucket_access":{
                           "description":"Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.",
                           "required":false,
                           "type":"boolean"
                        },
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "policy":{
                           "description":"The bucket policy as a JSON document.",
                           "required":"required",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Applies an Amazon S3 bucket policy to an Amazon S3 bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/tagging":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket that has the tag set to be removed.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Deletes the tags from the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the tag set associated with the bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "tagging":{
                           "description":"Container for the TagSet and Tag elements.",
                           "properties":{
                              "TagSet":{
                                 "description":"A collection for a set of tags",
                                 "items":{
                                    "properties":{
                                       "Key":{
                                          "description":"Name of the object key.",
                                          "required":true,
                                          "type":"string"
                                       },
                                       "Value":{
                                          "description":"Value of the tag.",
                                          "required":true,
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "required":true,
                                 "type":"array"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the tags for a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/versioning":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the versioning state of a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "mfa":{
                           "description":"The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
                           "required":false,
                           "type":"string"
                        },
                        "versioning_configuration":{
                           "description":"Container for setting the versioning state.",
                           "properties":{
                              "MFADelete":{
                                 "description":"Specifies whether MFA delete is enabled in the bucket versioning configuration. Enabled|Disabled",
                                 "required":true,
                                 "type":"string"
                              },
                              "Status":{
                                 "description":"The versioning state of the bucket. Enabled|Suspended",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the versioning state of an existing bucket",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/buckets/{bucket}/website":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name for which you want to remove the website configuration.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"This action removes the website configuration for a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of the bucket containing the objects.(ex. mybucket)",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account",
                  "in":"query",
                  "name":"expected_bucket_owner",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Returns the website configuration for a bucket.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The bucket name.",
                  "in":"path",
                  "name":"bucket",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expected_bucket_owner":{
                           "description":"The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.",
                           "required":false,
                           "type":"string"
                        },
                        "website_configuration":{
                           "description":"Container for the request.",
                           "properties":{
                              "ErrorDocument":{
                                 "description":"The name of the error document for the website.",
                                 "properties":{
                                    "Key":{
                                       "description":"The object key name to use when a 4XX class error occurs.",
                                       "required":true,
                                       "type":"string"
                                    }
                                 },
                                 "required":true,
                                 "type":"object"
                              },
                              "IndexDocument":{
                                 "description":"The name of the index document for the website.",
                                 "properties":{
                                    "Suffix":{
                                       "description":"A suffix that is appended to a request that is for a directory on the website endpoint (for example,if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.",
                                       "required":true,
                                       "type":"string"
                                    }
                                 },
                                 "required":true,
                                 "type":"object"
                              },
                              "RedirectAllRequestsTo":{
                                 "description":"The redirect behavior for every request to this bucket's website endpoint.",
                                 "properties":{
                                    "HostName":{
                                       "description":"Name of the host where requests are redirected.",
                                       "required":true,
                                       "type":"string"
                                    },
                                    "Protocol":{
                                       "description":"Protocol to use when redirecting requests. The default is the protocol that is used in the original request. http|https",
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":true,
                                 "type":"object"
                              },
                              "RoutingRules":{
                                 "description":"Rules that define when a redirect is applied and the redirect behavior.",
                                 "items":{
                                    "properties":{
                                       "Condition":{
                                          "description":"A container for describing a condition that must be met for the specified redirect to apply.",
                                          "properties":{
                                             "HttpErrorCodeReturnedEquals":{
                                                "description":"The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.",
                                                "required":false,
                                                "type":"string"
                                             },
                                             "KeyPrefixEquals":{
                                                "description":"The object key name prefix when the redirect is applied.",
                                                "required":false,
                                                "type":"string"
                                             }
                                          },
                                          "required":false,
                                          "type":"object"
                                       },
                                       "Redirect":{
                                          "description":"Container for redirect information.",
                                          "properties":{
                                             "HostName":{
                                                "description":"The host name to use in the redirect request.",
                                                "required":false,
                                                "type":"string"
                                             },
                                             "HttpRedirectCode":{
                                                "description":"The HTTP redirect code to use on the response.",
                                                "required":false,
                                                "type":"string"
                                             },
                                             "Protocol":{
                                                "description":"Protocol to use when redirecting requests.  http|https",
                                                "required":false,
                                                "type":"string"
                                             },
                                             "ReplaceKeyPrefixWith":{
                                                "description":"The object key prefix to use in the redirect request.",
                                                "required":false,
                                                "type":"string"
                                             },
                                             "ReplaceKeyWith":{
                                                "description":"The specific object key to use in the redirect request. For example, redirect request to error.html .",
                                                "required":false,
                                                "type":"string"
                                             }
                                          },
                                          "required":true,
                                          "type":"object"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "required":true,
                                 "type":"array"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Sets the configuration of the website that is specified in the website subresource.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/available_engines":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List available database engines",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/available_node_types":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Whether or not to include disabled types.",
                  "in":"query",
                  "name":"include_disabled_types",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List available node types",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/backups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Name of the database.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"query",
                  "name":"instance_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering database backups listing. Possible values are created_at_asc, created_at_desc, name_asc, name_desc, status_asc and status_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc",
                     "name_asc",
                     "name_desc",
                     "status_asc",
                     "status_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List database backups",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "database_name":{
                           "description":"Name of the database you want to make a backup of.",
                           "required":true,
                           "type":"string"
                        },
                        "expires_at":{
                           "description":"Expiration date (Format ISO 8601).",
                           "required":true,
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"UUID of the instance.",
                           "required":true,
                           "type":"string"
                        },
                        "name":{
                           "description":"Name of the backup.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a database backup",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/backups/{database_backup_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the database backup to delete.",
                  "in":"path",
                  "name":"database_backup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a database backup",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the database backup.",
                  "in":"path",
                  "name":"database_backup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get a database backup",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the database backup to update.",
                  "in":"path",
                  "name":"database_backup_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expires_at":{
                           "description":"Expiration date (Format ISO 8601).",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Name of the Database Backup.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a database backup",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/backups/{database_backup_id}/export":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the database backup you want to export.",
                  "in":"path",
                  "name":"database_backup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Export a database backup",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/backups/{database_backup_id}/restore":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backup of a logical database.",
                  "in":"path",
                  "name":"database_backup_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "database_name":{
                           "description":"Defines the destination database in order to restore into a specified database, the default destination is set to the origin database of the backup.",
                           "required":false,
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"Defines the rdb instance where the backup has to be restored.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Restore a database backup",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/endpoint/{endpoint_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the endpoint you want to get.",
                  "in":"path",
                  "name":"endpoint_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get an instance endpoint.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/endpoints/{endpoint_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the endpoint you want to delete.",
                  "in":"path",
                  "name":"endpoint_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an instance endpoint.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List instance that match a given name pattern.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List instance that have a given tags. ex. tag1, tag2",
                  "in":"query",
                  "name":"tags",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering instance listing. Possible values are created_at_asc, created_at_desc, name_asc, name_desc, region, status_asc and status_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc",
                     "name_asc",
                     "name_desc",
                     "status_asc",
                     "status_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List instances",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "backup_same_region":{
                           "description":null,
                           "required":false,
                           "type":"boolean"
                        },
                        "disable_backup":{
                           "description":null,
                           "required":false,
                           "type":"boolean"
                        },
                        "engine":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "init_endpoints":{
                           "description":null,
                           "items":{
                              "description":null,
                              "properties":{
                                 "load_balancer":{
                                    "description":null,
                                    "required":false,
                                    "type":"object"
                                 },
                                 "private_network":{
                                    "description":null,
                                    "properties":{
                                       "private_network_id":{
                                          "description":null,
                                          "required":false,
                                          "type":"string"
                                       },
                                       "service_ip":{
                                          "description":null,
                                          "required":false,
                                          "type":"string"
                                       }
                                    },
                                    "required":false,
                                    "type":"object"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "init_settings":{
                           "description":null,
                           "items":{
                              "description":null,
                              "properties":{
                                 "name":{
                                    "description":null,
                                    "required":false,
                                    "type":"string"
                                 },
                                 "value":{
                                    "description":null,
                                    "required":false,
                                    "type":"string"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "is_ha_cluster":{
                           "description":null,
                           "required":false,
                           "type":"boolean"
                        },
                        "name":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "node_type":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "password":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "project_id":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "tags":{
                           "description":null,
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "user_name":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        },
                        "volume_size":{
                           "description":null,
                           "required":false,
                           "type":"integer"
                        },
                        "volume_type":{
                           "description":null,
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance to delete.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an instance.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get an instance.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance to update.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "backup_same_region":{
                           "description":"Store logical backups in the same region as the database instance.",
                           "required":false,
                           "type":"boolean"
                        },
                        "backup_schedule_frequency":{
                           "description":"In hours.",
                           "required":false,
                           "type":"integer"
                        },
                        "backup_schedule_retention":{
                           "description":"In days.",
                           "required":false,
                           "type":"integer"
                        },
                        "is_backup_schedule_disabled":{
                           "description":"Whether or not the backup schedule is disabled.",
                           "required":false,
                           "type":"boolean"
                        },
                        "logs_policy":{
                           "description":"Logs policy of the instance.",
                           "properties":{
                              "max_age_retention":{
                                 "description":"Max age (in day) of remote logs to keep on the database instance.",
                                 "required":false,
                                 "type":"integer"
                              },
                              "total_disk_retention":{
                                 "description":"Max disk size of remote logs to keep on the database instance (in bytes).",
                                 "required":false,
                                 "type":"integer"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "name":{
                           "description":"Name of the instance.",
                           "required":false,
                           "type":"string"
                        },
                        "tags":{
                           "description":"Tags of a given instance.",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update an instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/acl_rules":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List ACL rules of a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/acls":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to delete an ACL rules from.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acl_rule_ips":{
                           "description":"ACLs rules to add to the instance.",
                           "items":{
                              "description":"ACL rules IP present on the instance.",
                              "required":false,
                              "type":"string"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete ACL rules of a given instance",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to add acl rules to.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "rules":{
                           "description":"ACLs rules to add to the instance.",
                           "items":{
                              "properties":{
                                 "description":{
                                    "description":"Description",
                                    "required":false,
                                    "type":"string"
                                 },
                                 "ip":{
                                    "description":"(IP network).",
                                    "required":false,
                                    "type":"string"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add an additional ACL rule to a database instance.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance where the ACL rules has to be set.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "rules":{
                           "description":"ACL rules to define for the instance.",
                           "items":{
                              "properties":{
                                 "description":{
                                    "description":null,
                                    "required":false,
                                    "type":"string"
                                 },
                                 "ip":{
                                    "description":"(IP network).",
                                    "required":false,
                                    "type":"string"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set ACL rules for a given instance. Replace all the ACL rules of a database instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/all_databases":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Name of the database.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"User that owns this database.",
                  "in":"query",
                  "name":"owner",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Whether or not the database is managed.",
                  "in":"query",
                  "name":"managed",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering database listing. Possible values are name_asc, name_desc, size_asc and size_desc. The default value is name_asc.",
                  "enum":[
                     "name_asc",
                     "name_desc",
                     "size_asc",
                     "size_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all database in a given instance",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/available_logs_of_instance":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want logs of.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering instance logs listing. Possible values are created_at_asc and created_at_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List available logs of a given instance",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/clone":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to clone.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "name":{
                           "description":"Name of the clone instance.",
                           "required":true,
                           "type":"string"
                        },
                        "node_type":{
                           "description":"Node type of the clone.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Clone an instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/database":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance where to create the database.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "database_name":{
                           "description":"Name of the database.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a database in a given instance",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/database/{database_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance where to delete the database.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the database to delete.",
                  "in":"path",
                  "name":"database_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a database in a given instance",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/endpoints":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to add endpoint to.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "endpoint_spec":{
                           "description":"Specification of the endpoint you want to create.",
                           "properties":{
                              "load_balancer":{
                                 "description":"Load balancer endpoint specifications. Only one of load_balancer and private_network may be set.",
                                 "required":false,
                                 "type":"object"
                              },
                              "private_network":{
                                 "description":"Private network endpoint specifications. Only one of load_balancer and private_network may be set.",
                                 "properties":{
                                    "private_network_id":{
                                       "description":"UUID of the private network to be connected to the database instance (UUID format).",
                                       "required":false,
                                       "type":"string"
                                    },
                                    "service_ip":{
                                       "description":"Endpoint IPv4 adress with a CIDR notation. Check documentation about IP and subnet limitation. (IP network). 1.2.3.4/32",
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a new instance endpoint.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/logs_details":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List remote instances logs details.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/metrics":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Start date to gather metrics from. 2021-12-23T12:06:02Z",
                  "in":"query",
                  "name":"start_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"End date to gather metrics from. 2021-12-23T12:06:02Z",
                  "in":"query",
                  "name":"end_date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Name of the metric to gather.",
                  "in":"query",
                  "name":"metric_name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get database instance metrics.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/prepare_logs":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want logs of.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "end_date":{
                           "description":"End datetime of your log. Format '{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z'.",
                           "required":true,
                           "type":"string"
                        },
                        "start_date":{
                           "description":"Start datetime of your log. Format '{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z'.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set privileges of a given user for a given database on a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/privileges":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Name of the database.",
                  "in":"query",
                  "name":"database_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Name of the user.",
                  "in":"query",
                  "name":"user_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering privileges listing. Possible values are user_name_asc, user_name_desc, database_name_asc and database_name_desc. The default value is user_name_asc.",
                  "enum":[
                     "user_name_asc",
                     "user_name_desc",
                     "database_name_asc",
                     "database_name_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List privileges of a given user for a given database on a given instance",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "database_name":{
                           "description":"Settings to define for the instance.",
                           "required":true,
                           "type":"string"
                        },
                        "permission":{
                           "description":"Permission to set (Read, Read/Write, All, Custom). Possible values are readonly, readwrite, all, custom and none. The default value is readonly.",
                           "required":false,
                           "type":"string"
                        },
                        "user_name":{
                           "description":"Name of the user.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set privileges of a given user for a given database on a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/purge_logs":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want logs of.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "log_name":{
                           "description":"Specific log name to purge.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Purge remote instances logs.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/renew-certificate":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want logs of.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Renew the TLS certificate of an instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/restart":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to restart.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Restart an instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/settings":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to delete an ACL rules from.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "setting_names":{
                           "description":"Settings names to delete.",
                           "items":{
                              "description":"Settings names to delete. ex. max_connections, effective_cache_size, work_mem",
                              "required":false,
                              "type":"string"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an instance setting.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to add settings to.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "settings":{
                           "description":"Settings to add on the instance.",
                           "items":{
                              "properties":{
                                 "name":{
                                    "description":"ex. max_connections (value 100), effective_cache_size (value 1300), work_mem (value 4)",
                                    "required":false,
                                    "type":"string"
                                 },
                                 "value":{
                                    "description":"ex. 100",
                                    "required":false,
                                    "type":"string"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add an instance setting.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance where the settings has to be set.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "settings":{
                           "description":"Settings to define for the instance.",
                           "items":{
                              "properties":{
                                 "name":{
                                    "description":"ex. max_connections (value 100), effective_cache_size (value 1300), work_mem (value 4)",
                                    "required":false,
                                    "type":"string"
                                 },
                                 "value":{
                                    "description":"ex. 100",
                                    "required":false,
                                    "type":"string"
                                 }
                              },
                              "required":false,
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set a given instance setting",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/snapshots":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expires_at":{
                           "description":"Expiration date (Format ISO 8601).",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Name of the snapshot.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create an instance snapshot.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/tls_certificate":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List ACL rules of a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/upgrade":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to upgrade.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Only one of node_type, enable_ha, volume_size and volume_type may be set.",
                     "properties":{
                        "enable_ha":{
                           "description":"Set to true to enable high availability on your instance. Only one of node_type, enable_ha, volume_size and volume_type may be set.",
                           "required":false,
                           "type":"boolean"
                        },
                        "node_type":{
                           "description":"Node type of the instance you want to upgrade to. Only one of node_type, enable_ha, volume_size and volume_type may be set.",
                           "required":false,
                           "type":"string"
                        },
                        "volume_size":{
                           "description":"Increase your block storage volume size. Only one of node_type, enable_ha, volume_size and volume_type may be set.",
                           "required":false,
                           "type":"integer"
                        },
                        "volume_type":{
                           "description":"Change your instance storage type. Possible values are lssd and bssd. The default value is lssd. Only one of node_type, enable_ha, volume_size and volume_type may be set.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Upgrade an instance to an higher instance type",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/users":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Name of the user.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering users listing. Possible values are name_asc, name_desc, is_admin_asc and is_admin_desc. The default value is name_asc.",
                  "enum":[
                     "name_asc",
                     "name_desc",
                     "is_admin_asc",
                     "is_admin_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List users of a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance you want to create a user in.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "is_admin":{
                           "description":"Whether the user you want to create will have administrative privileges.",
                           "required":false,
                           "type":"boolean"
                        },
                        "name":{
                           "description":"Name of the user you want to create.",
                           "required":false,
                           "type":"string"
                        },
                        "password":{
                           "description":"Password of the user you want to create.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a user on a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/instances/{instance_id}/users/{user_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance the user belongs to.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the database user.",
                  "in":"path",
                  "name":"user_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a user on a given instance",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance the user belongs to.",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the database user.",
                  "in":"path",
                  "name":"user_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "is_admin":{
                           "description":"Whether or not this user got administrative privileges.",
                           "required":false,
                           "type":"boolean"
                        },
                        "password":{
                           "description":"Password of the database user.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a user on a given instance",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/logs/{log_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance log you want.",
                  "in":"path",
                  "name":"log_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get specific logs of a given instance.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/service_info":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get Service Info",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page number. The default value is 1",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Name of the snapshot.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"UUID of the instance.",
                  "in":"query",
                  "name":"instance_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Criteria to use when ordering database backups listing. Possible values are created_at_asc, created_at_desc, name_asc, name_desc, status_asc and status_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc",
                     "name_asc",
                     "name_desc",
                     "expires_at_asc",
                     "expires_at_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List instance snapshots",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/regions/{region}/database/snapshots/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the snapshot to delete.",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete an instance snapshot.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the snapshot.",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get an instance snapshot.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"UUID of the snapshot to update.",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "expires_at":{
                           "description":"Expiration date (Format ISO 8601).",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Name of the snapshot.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update an instance snapshot.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Region (ex. fr-par)",
                  "in":"path",
                  "name":"region",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Block snapshot of the instance.",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "instance_name":{
                           "description":"Name of the instance created with the snapshot.",
                           "required":false,
                           "type":"string"
                        },
                        "is_ha_cluster":{
                           "description":"Whether or not High-Availability is enabled on the new instance.",
                           "required":false,
                           "type":"boolean"
                        },
                        "node_type":{
                           "description":"The node type used to restore the snapshot.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a new instance from a given snapshot",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/dashboard":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a dashboard.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Possible values are created_at_asc, created_at_desc, name_asc and name_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Use this to search by name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter LBs by organization ID.",
                  "in":"query",
                  "name":"organization_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter LBs by project ID.",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "description":{
                           "description":"Load balancer description.",
                           "required":false,
                           "type":"string"
                        },
                        "ip_id":{
                           "description":"Just like for compute instances, when you destroy a load balancer, you can keep its highly available IP address and reuse it for another load balancer later.",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":true,
                           "type":"string"
                        },
                        "ssl_compatibility_level":{
                           "description":"Enforces minimal SSL version (in SSL/TLS offloading context). - `intermediate` General-purpose servers with a variety of clients, recommended for almost all systems (Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9). - `modern` Services with clients that support TLS 1.3 and don't need backward compatibility (Firefox 63, Android 10.0, Chrome 70, Edge 75, Java 11, OpenSSL 1.1.1, Opera 57, and Safari 12.1). - `old` Compatible with a number of very old clients, and should be used only as a last resort (Firefox 1, Android 2.3, Chrome 1, Edge 12, IE8 on Windows XP, Java 6, OpenSSL 0.9.8, Opera 5, and Safari 1). . Possible values are ssl_compatibility_level_unknown, ssl_compatibility_level_intermediate, ssl_compatibility_level_modern and ssl_compatibility_level_old. The default value is ssl_compatibility_level_unknown.",
                           "required":false,
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "tag":{
                                 "description":"List of keyword.",
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "type":{
                           "description":"Load balancer offer type.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a load balancer.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/backends/redirections":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Possible values are created_at_asc and created_at_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Filter per frontend_id.",
                  "in":"query",
                  "name":"frontend_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of all backend redirections (Routes)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/backends/redirections/{route_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Route id to delete.",
                  "in":"path",
                  "name":"route_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a backend redirection",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Route id",
                  "in":"path",
                  "name":"route_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a backend redirection (Route)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/backends/{backend_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend ID.",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a backend in a given load balancer",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend id",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load balancers backend",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend ID.",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action [add_servers, remove_servers, define_all_servers, add_healthcheck]",
                  "enum":[
                     "add_servers",
                     "remove_servers",
                     "define_all_servers",
                     "add_healthcheck"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "healthcheck":{
                           "description":"Healthcheck object. Only for the action <add_healthcheck>",
                           "properties":{
                              "check_delay":{
                                 "description":"(in milliseconds).",
                                 "required":false,
                                 "type":"number"
                              },
                              "check_max_retries":{
                                 "description":null,
                                 "required":false,
                                 "type":"number"
                              },
                              "check_send_proxy":{
                                 "description":"It defines whether the healthcheck should be done considering the proxy protocol.",
                                 "required":false,
                                 "type":"boolean"
                              },
                              "check_timeout":{
                                 "description":"(in milliseconds).",
                                 "required":false,
                                 "type":"number"
                              },
                              "http_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "code":{
                                       "description":null,
                                       "required":false,
                                       "type":"number"
                                    },
                                    "method":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    },
                                    "uri":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "https_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "code":{
                                       "description":null,
                                       "required":false,
                                       "type":"number"
                                    },
                                    "method":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    },
                                    "uri":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "ldap_config":{
                                 "description":"The response is analyzed to find an LDAPv3 response message. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              },
                              "mysql_config":{
                                 "description":"The check requires MySQL >=3.22, for older versions, use TCP check. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "user":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "pgsql_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "user":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "port":{
                                 "description":null,
                                 "required":false,
                                 "type":"number"
                              },
                              "redis_config":{
                                 "description":"The response is analyzed to find the +PONG response message. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              },
                              "tcp_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "server_ip":{
                           "description":"<add_servers> Set all IPs to add on your backend. <remove_servers> Set all IPs to remove of your backend. <efine_all_servers> Set all IPs to add on your backend and remove all other.",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add/Remove a set of servers in a given backend. Define all servers in a given backend. Add an healthcheck for a given backend.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend ID.",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "forward_port":{
                           "description":"User sessions will be forwarded to this port of backend servers.",
                           "required":false,
                           "type":"number"
                        },
                        "forward_port_algorithm":{
                           "description":"Load balancing algorithm. Possible values are roundrobin, leastconn and first. The default value is roundrobin.",
                           "required":false,
                           "type":"string"
                        },
                        "forward_protocol":{
                           "description":"Backend protocol. TCP or HTTP. Possible values are tcp and http. The default value is tcp.",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":false,
                           "type":"string"
                        },
                        "on_marked_down_action":{
                           "description":"Modify what occurs when a backend server is marked down. Possible values are on_marked_down_action_none and shutdown_sessions. The default value is on_marked_down_action_none.",
                           "required":false,
                           "type":"string"
                        },
                        "proxy_protocol":{
                           "description":"The PROXY protocol informs the other end about the incoming connection, so that it can know the client's address or the public address it accessed to, whatever the upper layer protocol. * `proxy_protocol_none` Disable proxy protocol. * `proxy_protocol_v1` Version one (text format). * `proxy_protocol_v2` Version two (binary format). * `proxy_protocol_v2_ssl` Version two with SSL connection. * `proxy_protocol_v2_ssl_cn` Version two with SSL connection and common name information. . Possible values are proxy_protocol_unknown, proxy_protocol_none, proxy_protocol_v1, proxy_protocol_v2, proxy_protocol_v2_ssl and proxy_protocol_v2_ssl_cn. The default value is proxy_protocol_unknown.",
                           "required":false,
                           "type":"string"
                        },
                        "sticky_sessions":{
                           "description":"Enables cookie-based session persistence. Possible values are none, cookie and table. The default value is none.",
                           "required":false,
                           "type":"string"
                        },
                        "sticky_sessions_cookie_name":{
                           "description":"Cookie name for for sticky sessions.",
                           "required":false,
                           "type":"string"
                        },
                        "timeout_connect":{
                           "description":"Maximum initical server connection establishment time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        },
                        "timeout_server":{
                           "description":"Maximum server connection inactivity time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        },
                        "timeout_tunnel":{
                           "description":"Maximum tunnel inactivity time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a backend in a given load balancer",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/backends/{backend_id}/redirections":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Destination of destination.",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "frontend_id":{
                           "description":"Origin of redirection.",
                           "required":true,
                           "type":"string"
                        },
                        "match":{
                           "description":"Value to match a redirection.",
                           "properties":{
                              "sni":{
                                 "description":"Server Name Indication TLS extension (SNI) field from an incoming connection made via an SSL/TLS transport layer.",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a backend redirection",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/backends/{backend_id}/redirections/{route_id}":{
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Backend id of redirection.",
                  "in":"path",
                  "name":"backend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Route id to update.",
                  "in":"path",
                  "name":"route_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "match":{
                           "description":"Value to match a redirection.",
                           "properties":{
                              "sni":{
                                 "description":"Server Name Indication TLS extension (SNI) field from an incoming connection made via an SSL/TLS transport layer.",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a backend redirection",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/certificates/{certificate_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Certificate ID.",
                  "in":"path",
                  "name":"certificate_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a TLS certificate.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer certificate id",
                  "in":"path",
                  "name":"certificate_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load balancers certificates (TLS)",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Certificate ID.",
                  "in":"path",
                  "name":"certificate_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Object",
                     "properties":{
                        "name":{
                           "description":"Certificate name.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a TLS certificate.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/frontends/acls/{acl_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ID of your ACL ressource.",
                  "in":"path",
                  "name":"acl_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Load Balancer Frontend ACL",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend ACL id",
                  "in":"path",
                  "name":"acl_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load Balancers Frontend ACL",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ACL ID.",
                  "in":"path",
                  "name":"acl_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acls":{
                           "description":"ACL object",
                           "properties":{
                              "action":{
                                 "description":"Action to undertake when an ACL filter matches.",
                                 "properties":{
                                    "type":{
                                       "description":"The action type. Possible values are allow and deny. The default value is allow.",
                                       "required":true,
                                       "type":"string"
                                    }
                                 },
                                 "required":true,
                                 "type":"object"
                              },
                              "index":{
                                 "description":"Order between your Acls (ascending order, 0 is first acl executed).",
                                 "required":true,
                                 "type":"number"
                              },
                              "match":{
                                 "description":"The ACL match rule. You can have one of those three cases , `ip_subnet` is defined , `http_filter` and `http_filter_value` are defined , `ip_subnet`, `http_filter` and `http_filter_value` are defined .",
                                 "properties":{
                                    "http_filter":{
                                       "description":"The HTTP filter to match. This filter is supported only if your backend supports HTTP forwarding. It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part). . Possible values are acl_http_filter_none, path_begin, path_end, regex and http_header_match. The default value is acl_http_filter_none.",
                                       "required":false,
                                       "type":"string"
                                    },
                                    "http_filter_option":{
                                       "description":"A exra parameter. You can use this field with http_header_match acl type to set the header name to filter.",
                                       "required":false,
                                       "type":"string"
                                    },
                                    "http_filter_value":{
                                       "description":"A list of possible values to match for the given HTTP filter.",
                                       "items":{
                                          "type":"string"
                                       },
                                       "required":false,
                                       "type":"array"
                                    },
                                    "invert":{
                                       "description":"If set to `true`, the ACL matching condition will be of type \"UNLESS\".",
                                       "required":false,
                                       "type":"boolean"
                                    },
                                    "ip_subnet":{
                                       "description":"A list of IPs or CIDR v4/v6 addresses of the client of the session to match.",
                                       "items":{
                                          "type":"string"
                                       },
                                       "required":false,
                                       "type":"array"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "name":{
                                 "description":"Name of your ACL ressource.",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a ACL in a given Load Balancer Frontend",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/frontends/{frontend_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend ID.",
                  "in":"path",
                  "name":"frontend_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a load balancer frontend.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend id",
                  "in":"path",
                  "name":"frontend_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load balancers frontend",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend ID.",
                  "in":"path",
                  "name":"frontend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "backend_id":{
                           "description":"Backend ID.",
                           "required":true,
                           "type":"string"
                        },
                        "certificate_ids":{
                           "description":"List of certificate IDs to bind on the frontend.",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "inbound_port":{
                           "description":"TCP port to listen on the front side.",
                           "required":true,
                           "type":"number"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":true,
                           "type":"string"
                        },
                        "timeout_client":{
                           "description":"Set the maximum inactivity time on the client side (in milliseconds).",
                           "required":false,
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a load balancer frontend.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/frontends/{frontend_id}/acls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend id",
                  "in":"path",
                  "name":"frontend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"You can order the response by created_at asc/desc or name asc/desc. Possible values are created_at_asc, created_at_desc, name_asc and name_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Filter acl per name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers Frontend ACLS",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Frontend ID.",
                  "in":"path",
                  "name":"frontend_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "acls":{
                           "description":"ACL object",
                           "properties":{
                              "action":{
                                 "description":"Action to undertake when an ACL filter matches.",
                                 "properties":{
                                    "type":{
                                       "description":"The action type. Possible values are allow and deny. The default value is allow.",
                                       "required":true,
                                       "type":"string"
                                    }
                                 },
                                 "required":true,
                                 "type":"object"
                              },
                              "index":{
                                 "description":"Order between your Acls (ascending order, 0 is first acl executed).",
                                 "required":true,
                                 "type":"number"
                              },
                              "match":{
                                 "description":"The ACL match rule. You can have one of those three cases , `ip_subnet` is defined , `http_filter` and `http_filter_value` are defined , `ip_subnet`, `http_filter` and `http_filter_value` are defined .",
                                 "properties":{
                                    "http_filter":{
                                       "description":"The HTTP filter to match. This filter is supported only if your backend supports HTTP forwarding. It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part). . Possible values are acl_http_filter_none, path_begin, path_end, regex and http_header_match. The default value is acl_http_filter_none.",
                                       "required":false,
                                       "type":"string"
                                    },
                                    "http_filter_option":{
                                       "description":"A exra parameter. You can use this field with http_header_match acl type to set the header name to filter.",
                                       "required":false,
                                       "type":"string"
                                    },
                                    "http_filter_value":{
                                       "description":"A list of possible values to match for the given HTTP filter.",
                                       "items":{
                                          "type":"string"
                                       },
                                       "required":false,
                                       "type":"array"
                                    },
                                    "invert":{
                                       "description":"If set to `true`, the ACL matching condition will be of type \"UNLESS\".",
                                       "required":false,
                                       "type":"boolean"
                                    },
                                    "ip_subnet":{
                                       "description":"A list of IPs or CIDR v4/v6 addresses of the client of the session to match.",
                                       "items":{
                                          "type":"string"
                                       },
                                       "required":false,
                                       "type":"array"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "name":{
                                 "description":"Name of your ACL ressource.",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":true,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a ACL in a given Load Balancer Frontend",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/ips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Use this to search by IP address.",
                  "in":"query",
                  "name":"ip_address",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter IPs by organization id.",
                  "in":"query",
                  "name":"organization_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter IPs by project ID.",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers IPs",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "reverse":{
                           "description":"Reverse domain name.",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Load Balancer IP",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/ips/{ip_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"IP address ID.",
                  "in":"path",
                  "name":"ip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a Load Balancer IP",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"IP id",
                  "in":"path",
                  "name":"ip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load balancers IP",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Set true if you don't want to keep this IP address.",
                  "in":"query",
                  "name":"release_ip",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a load balancer.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load balancer",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "description":{
                           "description":"Load balancer description.",
                           "required":false,
                           "type":"string"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":true,
                           "type":"string"
                        },
                        "ssl_compatibility_level":{
                           "description":"Enforces minimal SSL version (in SSL/TLS offloading context). - `intermediate` General-purpose servers with a variety of clients, recommended for almost all systems (Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9). - `modern` Services with clients that support TLS 1.3 and don't need backward compatibility (Firefox 63, Android 10.0, Chrome 70, Edge 75, Java 11, OpenSSL 1.1.1, Opera 57, and Safari 12.1). - `old` Compatible with a number of very old clients, and should be used only as a last resort (Firefox 1, Android 2.3, Chrome 1, Edge 12, IE8 on Windows XP, Java 6, OpenSSL 0.9.8, Opera 5, and Safari 1). . Possible values are ssl_compatibility_level_unknown, ssl_compatibility_level_intermediate, ssl_compatibility_level_modern and ssl_compatibility_level_old. The default value is ssl_compatibility_level_unknown.",
                           "required":false,
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "tag":{
                                 "description":"List of keyword.",
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a load balancer.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/backends":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Response order. Possible values are created_at_asc, created_at_desc, name_asc and name_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Use this to search by name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers backends",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "forward_port":{
                           "description":"User sessions will be forwarded to this port of backend servers.",
                           "required":true,
                           "type":"number"
                        },
                        "forward_port_algorithm":{
                           "description":"Load balancing algorithm. Possible values are roundrobin, leastconn and first. The default value is roundrobin.",
                           "required":true,
                           "type":"string"
                        },
                        "forward_protocol":{
                           "description":"Backend protocol. TCP or HTTP. Possible values are tcp and http. The default value is tcp.",
                           "required":true,
                           "type":"string"
                        },
                        "health_check":{
                           "description":"Healthcheck object",
                           "properties":{
                              "check_delay":{
                                 "description":"(in milliseconds).",
                                 "required":false,
                                 "type":"number"
                              },
                              "check_max_retries":{
                                 "description":null,
                                 "required":false,
                                 "type":"number"
                              },
                              "check_send_proxy":{
                                 "description":"It defines whether the healthcheck should be done considering the proxy protocol.",
                                 "required":false,
                                 "type":"boolean"
                              },
                              "check_timeout":{
                                 "description":"(in milliseconds).",
                                 "required":false,
                                 "type":"number"
                              },
                              "http_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "code":{
                                       "description":null,
                                       "required":false,
                                       "type":"number"
                                    },
                                    "method":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    },
                                    "uri":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "https_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "code":{
                                       "description":null,
                                       "required":false,
                                       "type":"number"
                                    },
                                    "method":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    },
                                    "uri":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "ldap_config":{
                                 "description":"The response is analyzed to find an LDAPv3 response message. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              },
                              "mysql_config":{
                                 "description":"The check requires MySQL >=3.22, for older versions, use TCP check. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "user":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "pgsql_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "properties":{
                                    "user":{
                                       "description":null,
                                       "required":false,
                                       "type":"string"
                                    }
                                 },
                                 "required":false,
                                 "type":"object"
                              },
                              "port":{
                                 "description":null,
                                 "required":false,
                                 "type":"number"
                              },
                              "redis_config":{
                                 "description":"The response is analyzed to find the +PONG response message. Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              },
                              "tcp_config":{
                                 "description":"Only one of mysql_config, ldap_config, redis_config, tcp_config, pgsql_config, http_config and https_config may be set.",
                                 "required":false,
                                 "type":"object"
                              }
                           },
                           "required":true,
                           "type":"object"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":true,
                           "type":"string"
                        },
                        "on_marked_down_action":{
                           "description":"Modify what occurs when a backend server is marked down. Possible values are on_marked_down_action_none and shutdown_sessions. The default value is on_marked_down_action_none.",
                           "required":false,
                           "type":"string"
                        },
                        "proxy_protocol":{
                           "description":"The PROXY protocol informs the other end about the incoming connection, so that it can know the client's address or the public address it accessed to, whatever the upper layer protocol. * `proxy_protocol_none` Disable proxy protocol. * `proxy_protocol_v1` Version one (text format). * `proxy_protocol_v2` Version two (binary format). * `proxy_protocol_v2_ssl` Version two with SSL connection. * `proxy_protocol_v2_ssl_cn` Version two with SSL connection and common name information. . Possible values are proxy_protocol_unknown, proxy_protocol_none, proxy_protocol_v1, proxy_protocol_v2, proxy_protocol_v2_ssl and proxy_protocol_v2_ssl_cn. The default value is proxy_protocol_unknown.",
                           "required":false,
                           "type":"string"
                        },
                        "server_ip":{
                           "description":"Backend server IP addresses list (IPv4 or IPv6).",
                           "items":{
                              "type":"string"
                           },
                           "required":true,
                           "type":"array"
                        },
                        "sticky_sessions":{
                           "description":"Enables cookie-based session persistence. Possible values are none, cookie and table. The default value is none.",
                           "required":true,
                           "type":"string"
                        },
                        "sticky_sessions_cookie_name":{
                           "description":"Cookie name for for sticky sessions.",
                           "required":false,
                           "type":"string"
                        },
                        "timeout_connect":{
                           "description":"Maximum initical server connection establishment time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        },
                        "timeout_server":{
                           "description":"Maximum server connection inactivity time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        },
                        "timeout_tunnel":{
                           "description":"Maximum tunnel inactivity time (in milliseconds).",
                           "required":false,
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a backend in a given load balancer",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/backends/stats":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers backend stats",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/certificates":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"You can order the response by created_at asc/desc or name asc/desc. Possible values are created_at_asc, created_at_desc, name_asc and name_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Use this to search by name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers certificates (TLS)",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Only one of letsencrypt and custom_certificate may be set",
                     "properties":{
                        "custom_certificate":{
                           "description":"Custom import certificate. Only one of letsencrypt and custom_certificate may be set.",
                           "properties":{
                              "certificate_chain":{
                                 "description":"The full PEM-formatted include an entire certificate chain including public key, private key, and optionally certificate authorities.",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "letsencrypt":{
                           "description":"Let's Encrypt type. Only one of letsencrypt and custom_certificate may be set.",
                           "properties":{
                              "common_name":{
                                 "description":"Main domain name of certificate (make sure this domain exists and resolves to your load balancer HA IP)",
                                 "required":true,
                                 "type":"string"
                              },
                              "subject_alternative_name":{
                                 "description":"Alternative domain names (make sure all domain names exists and resolves to your load balancer HA IP).",
                                 "items":{
                                    "type":"string"
                                 },
                                 "required":false,
                                 "type":"array"
                              }
                           },
                           "required":false,
                           "type":"object"
                        },
                        "name":{
                           "description":"Certificate name.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a TLS certificate. Generate a new TLS certificate using Let's Encrypt or import your certificate.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/frontends":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Response order. Possible values are created_at_asc, created_at_desc, name_asc and name_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Use this to search by name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of Load balancers frontends",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer ID.",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "backend_id":{
                           "description":"Backend ID.",
                           "required":true,
                           "type":"string"
                        },
                        "certificate_ids":{
                           "description":"List of certificate IDs to bind on the frontend.",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "inbound_port":{
                           "description":"TCP port to listen on the front side.",
                           "required":true,
                           "type":"number"
                        },
                        "name":{
                           "description":"Load balancer name",
                           "required":true,
                           "type":"string"
                        },
                        "timeout_client":{
                           "description":"Set the maximum inactivity time on the client side (in milliseconds).",
                           "required":false,
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a load balancer frontend.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/private_networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Page size. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of attached Load balancers private networks",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/elbs/{elb_id}/private_networks/{private_network_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Load balancer id",
                  "in":"path",
                  "name":"elb_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Set your instance private network id.",
                  "in":"path",
                  "name":"private_network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"actions attach/detach",
                  "enum":[
                     "attach",
                     "detach"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Only for <attach>",
                     "properties":{
                        "dhcp_config":{
                           "description":"<attach> Set to true if you want to let DHCP assign IP addresses. Only one of static_config and dhcp_config may be set.",
                           "required":false,
                           "type":"object"
                        },
                        "static_config":{
                           "description":"<attach> Define two local ip address of your choice for each load balancer instance. Only one of static_config and dhcp_config may be set.",
                           "properties":{
                              "ip_address":{
                                 "description":null,
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              }
                           },
                           "required":false,
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add/Remove load balancer on/of private network.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/flavors":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of flavors.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on the images",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter servers by name (for eg. \"server1\" will return \"server100\" and \"server1\" but not \"foo\").",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List servers by private_ip (IP address).",
                  "in":"query",
                  "name":"private_ip",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List servers that are not attached to a public IP.",
                  "in":"query",
                  "name":"without_ip",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"List servers of this commercial type.",
                  "in":"query",
                  "name":"commercial_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List servers in this state. Possible values are [running, stopped, stopped in place, starting, stopping, locked]. The default value is running.",
                  "in":"query",
                  "name":"state",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List servers with these exact tags.",
                  "in":"query",
                  "name":"tags",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List servers in this Private Network.",
                  "in":"query",
                  "name":"private_network",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Define the order of the returned servers. Possible values are [creation_date_desc, creation_date_asc, modification_date_desc, modification_date_asc]. The default value is creation_date_desc.",
                  "in":"query",
                  "name":"order",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/instances/{instance_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action on instance",
                  "enum":[
                     "stop",
                     "start",
                     "restart",
                     "delete",
                     "backup",
                     "stop_in_place",
                     "snapshot",
                     "enable_protection",
                     "disable_protection"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on the instance [stop, start, restart, delete, backup, stop_in_place, snapshot, enable_protection, disable_protection]",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/instances/{instance_id}/private_nics":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private_nics.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/instances/{instance_id}/private_nics/{private_nic_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Instance id",
                  "in":"path",
                  "name":"instance_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Private nic id",
                  "in":"path",
                  "name":"private_nic_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a private nic.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/keypairs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Possible values are [created_at_asc, created_at_desc, updated_at_asc, updated_at_desc, name_asc, name_desc]",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Name of the security group.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of keypairs.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "keypair_name":{
                           "description":"Name of the key pair.",
                           "type":"string"
                        },
                        "private_key":{
                           "description":"private_key",
                           "type":"string"
                        },
                        "public_key":{
                           "description":"public_key",
                           "type":"string"
                        }
                     },
                     "required":[
                        "keypair_name",
                        "public_key"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a key pair",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/keypairs/{keypair_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Key pair id",
                  "in":"path",
                  "name":"keypair_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a key pair",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/private_images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on the images",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private_images.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/private_networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The sort order of the returned private networks. Possible values are [created_at_asc, created_at_desc, name_asc, name_desc]. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of private networks per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"The page number for the returned private networks. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter private networks with names containing this string.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter private networks with one or more matching tags.",
                  "in":"query",
                  "name":"tags",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of private_networks.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":{
                        "required":[
                           "name"
                        ]
                     },
                     "properties":{
                        "name":{
                           "description":"The name of the private network.",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "description":"The private networks tags.",
                              "tag":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a private network",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/private_networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network id",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a private network",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/public_ips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on the IP address (Works as a LIKE operation on the IP address).",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of public_ips.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":null,
                     "properties":{
                        "instance_id":{
                           "description":"UUID of the server you want to attach the IP to.",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "tag":{
                                 "description":"An array of keywords you want to tag this IP with.",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a public ip",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/public_ips/{public_ip_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public ip id",
                  "in":"path",
                  "name":"public_ip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a public ip",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public ip id",
                  "in":"path",
                  "name":"public_ip_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":null,
                     "properties":{
                        "instance_id":{
                           "description":"UUID of the server you want to attach the IP to.",
                           "type":"string"
                        },
                        "reverse":{
                           "description":"Reverse domain name",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "tag":{
                                 "description":"An array of keywords you want to tag this IP with.",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a public ip",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/security_groups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Name of the security group.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of security groups.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Name of the security group.",
                  "in":"query",
                  "name":"name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":null,
                     "properties":{
                        "description":{
                           "description":"Description of the security group.",
                           "type":"string"
                        },
                        "inbound_default_policy":{
                           "description":"Default policy for inbound rules. Possible values are accept and drop. The default value is accept.",
                           "type":"string"
                        },
                        "outbound_default_policy":{
                           "description":"Default policy for outbound rules. Possible values are accept and drop. The default value is accept.",
                           "type":"string"
                        },
                        "rules":{
                           "items":{
                              "properties":{
                                 "action":{
                                    "description":"Possible values are accept and drop. The default value is accept.",
                                    "enum":[
                                       "accept",
                                       "drop"
                                    ],
                                    "type":"string"
                                 },
                                 "direction":{
                                    "description":"Possible values are inbound and outbound. The default value is inbound.",
                                    "enum":[
                                       "inbound",
                                       "outbound"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":null,
                                    "type":"string"
                                 },
                                 "priority":{
                                    "description":null,
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "description":"Possible values are TCP, UDP, ICMP and ANY. The default value is TCP.",
                                    "enum":[
                                       "TCP",
                                       "UDP",
                                       "ICMP",
                                       "ANY"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"(IP network).",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":null,
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "direction",
                                 "action",
                                 "ip_range"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a security group",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/security_groups/{security_group_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security group id",
                  "in":"path",
                  "name":"security_group_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a security group",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/security_groups/{security_group_id}/rules":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security group id",
                  "in":"path",
                  "name":"security_group_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Security group action [add, remove]",
                  "enum":[
                     "add",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":null,
                     "properties":{
                        "rules":{
                           "items":{
                              "properties":{
                                 "action":{
                                    "description":"Possible values are accept and drop. The default value is accept.",
                                    "enum":[
                                       "accept",
                                       "drop"
                                    ],
                                    "type":"string"
                                 },
                                 "direction":{
                                    "description":"Possible values are inbound and outbound. The default value is inbound.",
                                    "enum":[
                                       "inbound",
                                       "outbound"
                                    ],
                                    "type":"string"
                                 },
                                 "from":{
                                    "description":null,
                                    "type":"string"
                                 },
                                 "priority":{
                                    "description":null,
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "description":"Possible values are TCP, UDP, ICMP and ANY. The default value is TCP.",
                                    "enum":[
                                       "TCP",
                                       "UDP",
                                       "ICMP",
                                       "ANY"
                                    ],
                                    "type":"string"
                                 },
                                 "range":{
                                    "description":"(IP network).",
                                    "type":"string"
                                 },
                                 "to":{
                                    "description":null,
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "protocol",
                                 "direction",
                                 "action",
                                 "ip_range"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a security group rules [add, remove]",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/snapshots":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on the snapshot",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of snapshots.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":null,
                     "properties":{
                        "name":{
                           "description":"Name of the snapshot.",
                           "type":"string"
                        },
                        "volume_id":{
                           "description":"UUID of the volume.",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name",
                        "volume_id"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a snapshot",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/snapshots/{snapshot_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Snapshot id",
                  "in":"path",
                  "name":"snapshot_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a snapshot",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/volume":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":null,
                     "properties":{
                        "base_snapshot":{
                           "description":"The ID of the volume on which this volume will be based. Only one of size, base_volume and base_snapshot may be set.",
                           "type":"string"
                        },
                        "base_volume":{
                           "description":"The ID of the volume on which this volume will be based. Only one of size, base_volume and base_snapshot may be set.",
                           "type":"string"
                        },
                        "name":{
                           "description":"Volume name",
                           "type":"string"
                        },
                        "size":{
                           "description":"Size in bytes (ex. 40000000000 fo 40 Go). Only one of size, base_volume and base_snapshot may be set.",
                           "type":"string"
                        },
                        "volume_type":{
                           "description":"Volume type [l_ssd, b_ssd]",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a volume",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/volume_types":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volume types.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A positive integer lower or equal to 100 to select the number of items to return. The default value is 50",
                  "in":"query",
                  "name":"per_page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"A positive integer to choose the page to return. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"List only servers of this organization ID.",
                  "in":"query",
                  "name":"organization",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"List only servers of this project ID.",
                  "in":"query",
                  "name":"project",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter volume by name (for eg. \"vol\" will return \"myvolume\" but not \"data\").",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter by volume type. Possible values are [l_ssd, b_ssd]. The default value is l_ssd.",
                  "in":"query",
                  "name":"volume_type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/volumes/{volume_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a volume",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action on instance",
                  "enum":[
                     "attach",
                     "detach",
                     "resize",
                     "modify"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "instance_id":{
                           "description":"(attach) Instance Id",
                           "type":"string"
                        },
                        "size":{
                           "description":"(resize) The volume disk size (in bytes).",
                           "type":"string"
                        },
                        "type":{
                           "description":"(modify) The volumes type. Possible values are l_ssd and b_ssd. The default value is l_ssd.",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on the instances [attach, detach, resize, modify].",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, name_asc, name_desc, type_asc, type_desc, status_asc and status_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Include only gateways in this organization (UUID format).",
                  "in":"query",
                  "name":"organization_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Include only gateways in this project (UUID format).",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways including this name.",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways with these tags.",
                  "in":"query",
                  "name":"tags",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways of this type.",
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways in this status (unknown for any). Possible values are unknown, stopped, allocating, configuring, running, stopping, failed, deleting and deleted. The default value is unknown.",
                  "in":"query",
                  "name":"status",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways attached to this private network (UUID format).",
                  "in":"query",
                  "name":"private_network_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateways.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "ip_id":{
                           "description":"Attach an existing IP to the gateway (UUID format).",
                           "type":"string"
                        },
                        "name":{
                           "description":"Name of the gateway.",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "description":"Tags for the gateway.",
                              "tag":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "description":"Gateway type.",
                           "enum":[
                              "VPC-GW-S",
                              "VPC-GW-M"
                           ],
                           "type":"string"
                        },
                        "upstream_dns_servers":{
                           "description":"Override the gateway's default recursive DNS servers, if DNS features are enabled.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPC Public Gateway",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/dhcp_entries":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"created_at_asc",
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, ip_address_asc, ip_address_desc, hostname_asc and hostname_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc",
                     "ip_address_asc",
                     "ip_address_desc",
                     "hostname_asc",
                     "hostname_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Filter entries based on the gateway network they are on (UUID format).",
                  "in":"query",
                  "name":"gateway_network_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter entries on their MAC address.",
                  "in":"query",
                  "name":"mac_address",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter entries on their IP address (IP address).",
                  "in":"query",
                  "name":"ip_address",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter by DHCP configuration (UUID format).",
                  "in":"query",
                  "name":"hostname",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter entries on their hostname substring.",
                  "in":"query",
                  "name":"hostname",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter entries on their type. Possible values are unknown, reservation and lease. The default value is unknown.",
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway DHCP entries",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "gateway_network_id":{
                           "description":"GatewayNetwork on which to create a DHCP reservation (UUID format).",
                           "required":true,
                           "type":"string"
                        },
                        "ip_address":{
                           "description":"IP address to give to the machine (IP address).",
                           "required":true,
                           "type":"string"
                        },
                        "mac_address":{
                           "description":"MAC address to give a static entry to.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPC Public Gateway static DHCP reservation",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/dhcp_entries/{dhcp_entry_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"DHCP entry ID to update (UUID format).",
                  "in":"path",
                  "name":"dhcp_entry_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a VPC Public Gateway static DHCP entry",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"DHCP entry ID to update (UUID format).",
                  "in":"path",
                  "name":"dhcp_entry_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "ip_address":{
                           "description":"IP address to give to the machine (IP address).",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway static DHCP entry",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/dhcps":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, subnet_asc and subnet_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Include only DHCPs in this organization (UUID format).",
                  "in":"query",
                  "name":"organization_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Include only DHCPs in this project (UUID format).",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on gateway address (IP address).",
                  "in":"query",
                  "name":"address",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter on subnets containing address (IP address).",
                  "in":"query",
                  "name":"has_address",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway DHCP configurations.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "address":{
                           "description":"Address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address of the subnet (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "cidr":{
                           "description":"Subnet for the DHCP server (IP network) (1.2.3.4/32)",
                           "type":"string"
                        },
                        "dns_local_name":{
                           "description":"TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`. .",
                           "type":"string"
                        },
                        "dns_search":{
                           "description":"Additional DNS search paths.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "dns_servers_override":{
                           "description":"Override the DNS server list pushed to DHCP clients, instead of the gateway itself.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "enable_dynamic":{
                           "description":"Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to true. .",
                           "type":"boolean"
                        },
                        "pool_high":{
                           "description":"High IP (included) of the dynamic address pool. Defaults to the last address of the subnet. (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "pool_low":{
                           "description":"Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet. (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "push_default_route":{
                           "description":"Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.",
                           "type":"boolean"
                        },
                        "push_dns_server":{
                           "description":"Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -> IP resolution. Defaults to true. .",
                           "type":"boolean"
                        },
                        "rebind_timer":{
                           "description":"After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `valid_lifetime`. Defaults to 51m (3060s). (in seconds).",
                           "type":"string"
                        },
                        "renew_timer":{
                           "description":"After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s). (in seconds).",
                           "type":"string"
                        },
                        "valid_lifetime":{
                           "description":"For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s). (in seconds).",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPC Public Gateway DHCP configuration.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/dhcps/{dhcp_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"DHCP config to delete (UUID format).",
                  "in":"path",
                  "name":"dhcp_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a VPC Public Gateway DHCP configuration.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"DHCP id",
                  "in":"path",
                  "name":"dhcp_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a VPC Public Gateway DHCP configuration.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"DHCP config to update (UUID format).",
                  "in":"path",
                  "name":"dhcp_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "address":{
                           "description":"Address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address of the subnet (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "cidr":{
                           "description":"Subnet for the DHCP server (IP network) (1.2.3.4/32)",
                           "type":"string"
                        },
                        "dns_local_name":{
                           "description":"TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`. .",
                           "type":"string"
                        },
                        "dns_search":{
                           "description":"Additional DNS search paths.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "dns_servers_override":{
                           "description":"Override the DNS server list pushed to DHCP clients, instead of the gateway itself.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "enable_dynamic":{
                           "description":"Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to true. .",
                           "type":"boolean"
                        },
                        "pool_high":{
                           "description":"High IP (included) of the dynamic address pool. Defaults to the last address of the subnet. (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "pool_low":{
                           "description":"Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet. (IP address 1.2.3.4).",
                           "type":"string"
                        },
                        "push_default_route":{
                           "description":"Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.",
                           "type":"boolean"
                        },
                        "push_dns_server":{
                           "description":"Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -> IP resolution. Defaults to true. .",
                           "type":"boolean"
                        },
                        "rebind_timer":{
                           "description":"After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `valid_lifetime`. Defaults to 51m (3060s). (in seconds).",
                           "type":"string"
                        },
                        "renew_timer":{
                           "description":"After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s). (in seconds).",
                           "type":"string"
                        },
                        "valid_lifetime":{
                           "description":"For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s). (in seconds).",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway DHCP configuration.",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/gateway_networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, status_asc and status_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Filter by gateway (UUID format).",
                  "in":"query",
                  "name":"vpcgw_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter by private network (UUID format).",
                  "in":"query",
                  "name":"private_network_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter by masquerade enablement.",
                  "in":"query",
                  "name":"enable_masquerade",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Filter by DHCP configuration (UUID format).",
                  "in":"query",
                  "name":"dhcp_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter GatewayNetworks by this status (unknown for any). Possible values are unknown, created, attaching, configuring, ready, detaching and deleted. The default value is unknown.",
                  "in":"query",
                  "name":"status",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway connections to Private Networks",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/gateway_networks/{network_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Network to delete (UUID format).",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Whether to cleanup the attached DHCP configuration (if any, and if not attached to another gateway_network). .",
                  "in":"query",
                  "name":"cleanup_dhcp",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Detach a VPC Public Gateway from a Private Network",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Private Network to connect (UUID format).",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "address":{
                           "description":"Static IP address in CIDR format to to use without DHCP (IP network). Only one of dhcp_id, dhcp and address may be set.",
                           "type":"string"
                        },
                        "dhcp_id":{
                           "description":"Existing configuration (UUID format). Only one of dhcp_id, dhcp and address may be set.",
                           "type":"string"
                        },
                        "enable_dhcp":{
                           "description":"Whether to enable DHCP on this Private Network. Defaults to true if either dhcp_id or dhcp. If set to true, requires that either dhcp_id or dhcp to be present.",
                           "type":"boolean"
                        },
                        "enable_masquerade":{
                           "description":"Whether to enable masquerade on this network.",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway connection to a Private Network",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Network to set (UUID format).",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "dhcp_entries":{
                           "description":"New list of DHCP reservations.",
                           "items":{
                              "properties":{
                                 "ip_address":{
                                    "description":"IP address to give to the machine (IP address).",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "mac_address":{
                                    "description":"MAC address to give a static entry to.",
                                    "required":true,
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set all DHCP reservations on a Gateway Network",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/ips":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, ip_asc, ip_desc, reverse_asc and reverse_desc. The default value is created_at_asc.",
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Include only gateways in this organization (UUID format).",
                  "in":"query",
                  "name":"organization_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Include only gateways in this project (UUID format).",
                  "in":"query",
                  "name":"project_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter by reverse containing this string.",
                  "in":"query",
                  "name":"reverse",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter gateways with these tags.",
                  "in":"query",
                  "name":"tags",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Filter whether the IP is attached to a gateway or not.",
                  "in":"query",
                  "name":"is_free",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway IPs.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "tags":{
                           "properties":{
                              "description":"Tags to give to the IP.",
                              "tag":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Reserve a VPC Public Gateway IP",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/ips/{ip_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ID of the IP to delete (UUID format).",
                  "in":"path",
                  "name":"ip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a VPC Public Gateway IP",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"IP",
                  "in":"path",
                  "name":"ip_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a VPC Public Gateway IP.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"ID of the IP to delete (UUID format).",
                  "in":"path",
                  "name":"ip_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "reverse":{
                           "description":"Reverse to set on the IP. Empty string to unset.",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "description":"Tags to give to the IP.",
                              "tag":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "vpcgw_id":{
                           "description":"Gateway to attach the IP to. Empty string to detach (UUID format).",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway IP",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/pat_rules":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"created_at_asc",
                  "description":"Order in which to return results. Possible values are created_at_asc, created_at_desc, public_port_asc and public_port_desc. The default value is created_at_asc.",
                  "enum":[
                     "created_at_asc",
                     "created_at_desc",
                     "public_port_asc",
                     "public_port_desc"
                  ],
                  "in":"query",
                  "name":"order_by",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Gateways per page. The default value is 20.",
                  "in":"query",
                  "name":"page_size",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Page number. The default value is 1.",
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "type":"integer"
               },
               {
                  "description":"Fetch rules for this gateway (UUID format).",
                  "in":"query",
                  "name":"vpcgw_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Fetch rules targeting this private ip (IP address).",
                  "in":"query",
                  "name":"private_ip",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Fetch rules for this protocol. Possible values are both, tcp and udp",
                  "in":"query",
                  "name":"protocol",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway PAT rules (Port Address Translation)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/pat_rules/{pat_rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"PAT rule to update (UUID format).",
                  "in":"path",
                  "name":"pat_rule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a VPC Public Gateway PAT rule (Port Address Translation)",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"PAT rule to update (UUID format).",
                  "in":"path",
                  "name":"pat_rule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "private_ip":{
                           "description":"Private IP to forward data to (IP address).",
                           "required":true,
                           "type":"string"
                        },
                        "private_port":{
                           "description":"Private port to translate to.",
                           "required":true,
                           "type":"string"
                        },
                        "protocol":{
                           "default":"both",
                           "description":"Protocol the rule should apply to. Possible values are both, tcp and udp. The default value is both.",
                           "enum":[
                              "both",
                              "tcp",
                              "udp"
                           ],
                           "required":true,
                           "type":"string"
                        },
                        "public_port":{
                           "description":"Public port to listen on.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway PAT rule (Port Address Translation)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/types":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VPC Public Gateway types",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/{vpcgw_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway id",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Whether to cleanup attached DHCP configurations (if any, and if not attached to another Gateway Network). .",
                  "in":"query",
                  "name":"cleanup_dhcp",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a VPC Public Gateway",
            "tags":[
               "provider/scaleway"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Public gateway id",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a VPC Public Gateway.",
            "tags":[
               "provider/scaleway"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway id",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "name":{
                           "description":"Name of the gateway.",
                           "type":"string"
                        },
                        "tags":{
                           "properties":{
                              "description":"Tags for the gateway.",
                              "tag":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "upstream_dns_servers":{
                           "description":"Override the gateway's default recursive DNS servers, if DNS features are enabled.",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a VPC Public Gateway",
            "tags":[
               "provider/scaleway"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway on which to attach the rule to (UUID format).",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "pat_rules":{
                           "description":null,
                           "items":{
                              "properties":{
                                 "private_ip":{
                                    "description":"Private IP to forward data to (IP address).",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "private_port":{
                                    "description":"Private port to translate to.",
                                    "required":true,
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "default":"both",
                                    "description":"Protocol the rule should apply to. Possible values are both, tcp and udp. The default value is both.",
                                    "enum":[
                                       "both",
                                       "tcp",
                                       "udp"
                                    ],
                                    "required":true,
                                    "type":"string"
                                 },
                                 "public_port":{
                                    "description":"Public port to listen on.",
                                    "required":true,
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "required":true,
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Set all VPC Public Gateway PAT rules (Port Address Translation)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/{vpcgw_id}/gateway_networks/{network_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway to connect (UUID format).",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Private Network to connect (UUID format).",
                  "in":"path",
                  "name":"network_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "address":{
                           "description":"Static IP address in CIDR format to to use without DHCP (IP network). Only one of dhcp_id, dhcp and address may be set.",
                           "type":"string"
                        },
                        "dhcp":{
                           "description":"New DHCP configuration. Only one of dhcp_id, dhcp and address may be set.",
                           "properties":{
                              "address":{
                                 "description":"Address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address of the subnet (IP address 1.2.3.4).",
                                 "type":"string"
                              },
                              "dns_local_name":{
                                 "description":"TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`. .",
                                 "type":"string"
                              },
                              "dns_search":{
                                 "description":"Additional DNS search paths.",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "dns_servers_override":{
                                 "description":"Override the DNS server list pushed to DHCP clients, instead of the gateway itself.",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "enable_dynamic":{
                                 "description":"Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to true. .",
                                 "type":"boolean"
                              },
                              "pool_high":{
                                 "description":"High IP (included) of the dynamic address pool. Defaults to the last address of the subnet. (IP address 1.2.3.4).",
                                 "type":"string"
                              },
                              "pool_low":{
                                 "description":"Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet. (IP address 1.2.3.4).",
                                 "type":"string"
                              },
                              "push_default_route":{
                                 "description":"Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.",
                                 "type":"boolean"
                              },
                              "push_dns_server":{
                                 "description":"Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -> IP resolution. Defaults to true. .",
                                 "type":"boolean"
                              },
                              "rebind_timer":{
                                 "description":"After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `valid_lifetime`. Defaults to 51m (3060s). (in seconds).",
                                 "type":"string"
                              },
                              "renew_timer":{
                                 "description":"After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s). (in seconds).",
                                 "type":"string"
                              },
                              "subnet":{
                                 "description":"Subnet for the DHCP server (IP network) (1.2.3.4/32)",
                                 "type":"string"
                              },
                              "valid_lifetime":{
                                 "description":"For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s). (in seconds).",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "dhcp_id":{
                           "description":"Existing configuration (UUID format). Only one of dhcp_id, dhcp and address may be set.",
                           "type":"string"
                        },
                        "enable_dhcp":{
                           "description":"Whether to enable DHCP on this Private Network. Defaults to true if either dhcp_id or dhcp. If set to true, requires that either dhcp_id or dhcp to be present.",
                           "type":"boolean"
                        },
                        "enable_masquerade":{
                           "description":"Whether to enable masquerade on this network.",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Attache a VPC Public Gateway to a Private Network",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/scaleway/{uuid}}/projects/{project_id}/zones/{zone}/vpcgw/{vpcgw_id}/pat_rules":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Project id",
                  "in":"path",
                  "name":"project_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Zone (ex. fr-par-1)",
                  "in":"path",
                  "name":"zone",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway on which to attach the rule to (UUID format).",
                  "in":"path",
                  "name":"vpcgw_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "description":"Body",
                     "properties":{
                        "private_ip":{
                           "description":"Private IP to forward data to (IP address).",
                           "required":true,
                           "type":"string"
                        },
                        "private_port":{
                           "description":"Private port to translate to.",
                           "required":true,
                           "type":"string"
                        },
                        "protocol":{
                           "default":"both",
                           "description":"Protocol the rule should apply to. Possible values are both, tcp and udp. The default value is both.",
                           "enum":[
                              "both",
                              "tcp",
                              "udp"
                           ],
                           "required":true,
                           "type":"string"
                        },
                        "public_port":{
                           "description":"Public port to listen on.",
                           "required":true,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a VPC Public Gateway PAT rule (Port Address Translation)",
            "tags":[
               "provider/scaleway"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/catalogs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of catalogs.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/images/{catalog_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Catalog (ex. Linux, Windows)",
                  "in":"path",
                  "name":"catalog_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images by catalog name (ex. Linux, Windows).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/organization/id":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of organization id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/organization/rights":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of organization rights.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/applicationgroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve all application groups defined in the organization VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/applicationgroups/{applicationgroup_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Group Id (ex. applicationgroup-123)",
                  "in":"path",
                  "name":"applicationgroup_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve all application groups defined in the organization VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/applications":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve all applications defined in the organization VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/applications/{application_id}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Id (ex. application-123)",
                  "in":"path",
                  "name":"application_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve NSX application defined in the organization VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of global distributed firewall.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enable distributed firewall service for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer2":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve distributed firewall configuration at layer 2 (Ethernet) for organization VDC (Virtual DataCenters).",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer2/rules":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "etag":{
                           "description":"etag (ex. 1559563828487)",
                           "type":"string"
                        },
                        "rule":{
                           "properties":{
                              "action":{
                                 "description":"Rule Action",
                                 "enum":[
                                    "Allow",
                                    "Deny"
                                 ],
                                 "type":"string"
                              },
                              "applied_to":{
                                 "description":"Choose one Rule-ipaddress, vm_id, network_id, vdc_id, secgroup_id",
                                 "items":{
                                    "properties":{
                                       "key":"type string",
                                       "value":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "destination":{
                                 "description":"destination",
                                 "properties":null,
                                 "type":"object"
                              },
                              "direction":{
                                 "description":"Rule Direction",
                                 "enum":[
                                    "in",
                                    "out",
                                    "inout"
                                 ],
                                 "type":"string"
                              },
                              "disabled":{
                                 "default":false,
                                 "description":"Rule Disabled",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Rule Name",
                                 "type":"string"
                              },
                              "packet_type":{
                                 "description":"Rule Packet Type",
                                 "enum":[
                                    "any",
                                    "ipv4",
                                    "ipv6"
                                 ],
                                 "type":"string"
                              },
                              "services":{
                                 "description":"services",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "source":{
                                 "description":"source",
                                 "properties":null,
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "disabled",
                              "action",
                              "direction",
                              "applied_to",
                              "packet_type"
                           ],
                           "type":"object"
                        },
                        "vdc_id":{
                           "description":"Vdc id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vdc_id",
                        "etag",
                        "rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Append a new rule to distributed firewall rules at layer 2 (Ethernet) for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer2/rules/{rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule Id (ex. 148540)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"etag (ex. 1559563828487)",
                  "in":"query",
                  "name":"etag",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete distributed firewall rule with identifier rule at layer 2 (Ethernet) for organization VDC with identifier.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule id (ex. 8228)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "etag":{
                           "description":"etag (ex. 1559563828487)",
                           "type":"string"
                        },
                        "rule":{
                           "properties":{
                              "action":{
                                 "description":"Rule Action",
                                 "enum":[
                                    "Allow",
                                    "Deny"
                                 ],
                                 "type":"string"
                              },
                              "applied_to":{
                                 "description":"Choose one Rule-ipaddress, vm_id  value, network_id, vdc_id, secgroup_id",
                                 "items":{
                                    "properties":{
                                       "key":"type string",
                                       "value":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "destination":{
                                 "description":"destination",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "direction":{
                                 "description":"Rule Direction",
                                 "enum":[
                                    "in",
                                    "out",
                                    "inout"
                                 ],
                                 "type":"string"
                              },
                              "disabled":{
                                 "default":false,
                                 "description":"Rule Disabled",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Rule Name",
                                 "type":"string"
                              },
                              "packet_type":{
                                 "description":"Rule Packet Type",
                                 "enum":[
                                    "any",
                                    "ipv4",
                                    "ipv6"
                                 ],
                                 "type":"string"
                              },
                              "services":{
                                 "description":"services",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "source":{
                                 "description":"source",
                                 "properties":null,
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "disabled",
                              "action",
                              "direction",
                              "applied_to",
                              "packet_type"
                           ],
                           "type":"object"
                        },
                        "vdc_id":{
                           "description":"Vdc id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "etag",
                        "rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update distributed firewall rule with identifier rule-# at layer 2 (Ethernet) for organization VDC with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer2sections":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete distributed firewall section (all rules) at layer 2 (Ethernet) for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer3":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve distributed firewall configuration at layer 3 (General) for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer3/rules":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "etag":{
                           "description":"etag (ex. 1559563828487)",
                           "type":"string"
                        },
                        "rule":{
                           "properties":{
                              "action":{
                                 "description":"Rule Action",
                                 "enum":[
                                    "Allow",
                                    "Deny"
                                 ],
                                 "type":"string"
                              },
                              "applied_to":{
                                 "description":"Choose one Rule-ipaddress, vm_id, network_id, vdc_id, secgroup_id",
                                 "items":{
                                    "properties":{
                                       "key":"type string",
                                       "value":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "destination":{
                                 "description":"destination",
                                 "properties":null,
                                 "type":"object"
                              },
                              "direction":{
                                 "description":"Rule Direction",
                                 "enum":[
                                    "in",
                                    "out",
                                    "inout"
                                 ],
                                 "type":"string"
                              },
                              "disabled":{
                                 "default":false,
                                 "description":"Rule Disabled",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Rule Name",
                                 "type":"string"
                              },
                              "packet_type":{
                                 "description":"Rule Packet Type",
                                 "enum":[
                                    "any",
                                    "ipv4",
                                    "ipv6"
                                 ],
                                 "type":"string"
                              },
                              "services":{
                                 "description":"services",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "source":{
                                 "description":"source",
                                 "properties":null,
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "disabled",
                              "action",
                              "direction",
                              "applied_to",
                              "packet_type"
                           ],
                           "type":"object"
                        },
                        "vdc_id":{
                           "description":"Vdc id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vdc_id",
                        "etag",
                        "rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Append a new rule to distributed firewall rules at layer 3 (General) for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer3/rules/{rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule Id (ex. 8228)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"etag (ex. 1559563828487)",
                  "in":"query",
                  "name":"etag",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete distributed firewall rule with identifier rule at layer 3 (General) for organization VDC with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule id (ex. 8228)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "etag":{
                           "description":"etag (ex. 1559563828487)",
                           "type":"string"
                        },
                        "rule":{
                           "properties":{
                              "action":{
                                 "description":"Rule Action",
                                 "enum":[
                                    "Allow",
                                    "Deny"
                                 ],
                                 "type":"string"
                              },
                              "applied_to":{
                                 "description":"Choose one Rule-ipaddress, vm_id, network_id, vdc_id, secgroup_id",
                                 "items":{
                                    "properties":{
                                       "key":"type string",
                                       "value":{
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "destination":{
                                 "description":"destination",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "direction":{
                                 "description":"Rule Direction",
                                 "enum":[
                                    "in",
                                    "out",
                                    "inout"
                                 ],
                                 "type":"string"
                              },
                              "disabled":{
                                 "default":false,
                                 "description":"Rule Disabled",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Rule Name",
                                 "type":"string"
                              },
                              "packet_type":{
                                 "description":"Rule Packet Type",
                                 "enum":[
                                    "any",
                                    "ipv4",
                                    "ipv6"
                                 ],
                                 "type":"string"
                              },
                              "services":{
                                 "description":"services",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "source":{
                                 "description":"source",
                                 "properties":null,
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name",
                              "disabled",
                              "action",
                              "direction",
                              "applied_to",
                              "packet_type"
                           ],
                           "type":"object"
                        },
                        "vdc_id":{
                           "description":"Vdc id",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vdc_id",
                        "etag",
                        "rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update distributed firewall rule with identifier rule-# at layer 3 (General) for organization VDC with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/distributedfirewall/layer3sections":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete distributed firewall section (all rules) at layer 3 (General) for organization VDC.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a Load Balancer configuration.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "acceleration":{
                           "default":false,
                           "description":"Acceleration",
                           "type":"boolean"
                        },
                        "enable":{
                           "default":true,
                           "description":"Enable Load Balancer",
                           "type":"boolean"
                        },
                        "logging_enable":{
                           "default":false,
                           "description":"Enable Logging",
                           "type":"boolean"
                        },
                        "logging_level":{
                           "default":"Info",
                           "description":"Logging Level",
                           "enum":[
                              "Alert",
                              "Critical",
                              "Debug",
                              "Emergency",
                              "Error",
                              "Info",
                              "Notice",
                              "Warning"
                           ],
                           "type":"string"
                        },
                        "service_insertion":{
                           "default":false,
                           "description":"Service Insertion",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "name",
                        "enable",
                        "logging_enable",
                        "logging_level",
                        "acceleration",
                        "service_insertion"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates load balancer configuration.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/applicationprofiles":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer application profile configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer application profile configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "application_profile":{
                           "properties":{
                              "cookie_mode":{
                                 "default":"insert",
                                 "description":"If Persistence = COOKIE, Select the mode by which the cookie should be inserted.",
                                 "enum":[
                                    "insert",
                                    "prefix",
                                    "appsession"
                                 ],
                                 "type":"string"
                              },
                              "cookie_name":{
                                 "description":"If Persistence = COOKIE",
                                 "type":"string"
                              },
                              "expire":{
                                 "description":"Enter a length of time in seconds that persistence stays in effect. Must be a positive integer in the range 1-86400.",
                                 "type":"string"
                              },
                              "http_redirect":{
                                 "description":"(HTTP and HTTPS) Type the URL to which traffic that arrives at the destination address should be redirected.",
                                 "type":"string"
                              },
                              "insert_xforwarded_for":{
                                 "default":false,
                                 "description":"(HTTP and HTTPS) Select Insert X-Forwarded-For HTTP header for identifying the originating IP address of a client connecting to a Web server through the load balancer.",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Application Profile Name",
                                 "type":"string"
                              },
                              "persistence":{
                                 "default":"None",
                                 "description":"Specify a persistence mechanism for the profile. Persistence tracks and stores session data, such as the specific pool member that serviced a client request. This ensures that client requests are directed to the same pool member throughout the life of a session or during subsequent sessions.",
                                 "enum":[
                                    null,
                                    "SOURCEIP",
                                    "COOKIE",
                                    "SSL-SESSIONID"
                                 ],
                                 "type":"string"
                              },
                              "server_ssl_enabled":{
                                 "default":false,
                                 "description":null,
                                 "type":"boolean"
                              },
                              "ssl_passthrough":{
                                 "default":false,
                                 "description":"Click to enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address.",
                                 "type":"boolean"
                              },
                              "type":{
                                 "default":"HTTP",
                                 "description":"Select the protocol type used to send requests to the server. The list of required parameters depends on the protocol you select.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "type",
                              "persistence",
                              "expire"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "application_profile"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the load balancer application profile configuration for the edge to append the application profile.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/applicationprofiles/{app_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Profile Id (ex. applicationProfile-37)",
                  "in":"path",
                  "name":"app_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer application profile with id applicationProfile-# for the edge with identifier id",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Profiles Id (ex. applicationProfile-45)",
                  "in":"path",
                  "name":"app_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the NSX load balancer application profile configuration for the edge with identifier id",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application profile ID (ex. applicationProfile-48)",
                  "in":"path",
                  "name":"app_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "application_profile":{
                           "properties":{
                              "cookie_mode":{
                                 "default":"insert",
                                 "description":"If Persistence = COOKIE, Select the mode by which the cookie should be inserted.",
                                 "enum":[
                                    "insert",
                                    "prefix",
                                    "appsession"
                                 ],
                                 "type":"string"
                              },
                              "cookie_name":{
                                 "description":"If Persistence = COOKIE",
                                 "type":"string"
                              },
                              "expire":{
                                 "description":"Enter a length of time in seconds that persistence stays in effect. Must be a positive integer in the range 1-86400.",
                                 "type":"string"
                              },
                              "http_redirect":{
                                 "description":"(HTTP and HTTPS) Type the URL to which traffic that arrives at the destination address should be redirected.",
                                 "type":"string"
                              },
                              "insert_xforwarded_for":{
                                 "default":false,
                                 "description":"(HTTP and HTTPS) Select Insert X-Forwarded-For HTTP header for identifying the originating IP address of a client connecting to a Web server through the load balancer.",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Application Profile Name",
                                 "type":"string"
                              },
                              "persistence":{
                                 "default":"None",
                                 "description":"Specify a persistence mechanism for the profile. Persistence tracks and stores session data, such as the specific pool member that serviced a client request. This ensures that client requests are directed to the same pool member throughout the life of a session or during subsequent sessions.",
                                 "enum":[
                                    null,
                                    "SOURCEIP",
                                    "COOKIE",
                                    "SSL-SESSIONID"
                                 ],
                                 "type":"string"
                              },
                              "server_ssl_enabled":{
                                 "default":false,
                                 "description":null,
                                 "type":"boolean"
                              },
                              "ssl_passthrough":{
                                 "default":false,
                                 "description":"Click to enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address.",
                                 "type":"boolean"
                              },
                              "type":{
                                 "default":"HTTP",
                                 "description":"Select the protocol type used to send requests to the server. The list of required parameters depends on the protocol you select.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "type",
                              "persistence",
                              "expire"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "application_profile"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the load balancer application profile with id for the edge with identifier applicationProfile-# id",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/applicationrules":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer application rule configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer application rule configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "application_rule":{
                           "properties":{
                              "name":{
                                 "description":"Application Rule Name",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "script":{
                                 "description":"Script for the application rule (base64)",
                                 "in":"body",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "script"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "application_rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the load balancer application rule configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/applicationrules/{applicationrule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Rule Id (ex. applicationRule-42)",
                  "in":"path",
                  "name":"applicationrule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer application rule with id applicationRule-# for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Rule Id (ex. applicationRule-42)",
                  "in":"path",
                  "name":"applicationrule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer application rule configuration for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Application Rule Id (ex. applicationRule-43)",
                  "in":"path",
                  "name":"applicationrule_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "application_rule":{
                           "properties":{
                              "name":{
                                 "description":"Application Rule Name",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "script":{
                                 "description":"Script for the application rule (base64)",
                                 "in":"body",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "script"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "application_rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the load balancer application rule with id applicationRule-# for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/monitors":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer monitors.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer monitor configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "monitor":{
                           "properties":{
                              "expected":{
                                 "description":"(HTTP and HTTPS) Type the string that the monitor expects to match in the status line of the HTTP or HTTPS response (for example, HTTP/1.1).",
                                 "type":"string"
                              },
                              "extension":{
                                 "description":"(ALL) base64. Type advanced monitor parameters as key=value pairs. (ex, delay=2, critical=3, warning=10)",
                                 "type":"string"
                              },
                              "interval":{
                                 "description":"Type the interval at which a server is to be monitored using the specified Method.",
                                 "type":"string"
                              },
                              "max_retries":{
                                 "description":"Type the number of times the specified monitoring Method must fail sequentially before the server is declared down.",
                                 "type":"string"
                              },
                              "method":{
                                 "default":"HTTP",
                                 "description":"(HTTP and HTTPS) Select the method to be used to detect server status.",
                                 "enum":[
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "DELETE",
                                    "HEAD",
                                    "OPTIONS",
                                    "TRACE",
                                    "CONNECT"
                                 ],
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Monitor Name",
                                 "type":"string"
                              },
                              "receive":{
                                 "description":"(HTTP, HTTPS, and UDP) Type the string to be matched in the response content.",
                                 "type":"string"
                              },
                              "send":{
                                 "description":"(HTTP, HTTPS, UDP) Type the data to be sent.",
                                 "type":"string"
                              },
                              "timeout":{
                                 "description":"Type the maximum time in seconds within which a response from the server must be received.",
                                 "type":"string"
                              },
                              "type":{
                                 "default":"HTTP",
                                 "description":"Select the way in which you want to send the health check request to the server \u2014 HTTP, HTTPS, TCP, ICMP, or UDP.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "ICMP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              },
                              "url":{
                                 "description":"(HTTP and HTTPS) Type the URL to be used in the server status request. When you select the POST method, you must specify a value for Send.",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "interval",
                              "timeout",
                              "type"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "monitor"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the load balancer monitor configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/monitors/{monitor_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Monitor Id (ex. monitor-35)",
                  "in":"path",
                  "name":"monitor_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer monitor with id monitor-# for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Monitor Id (ex. monitor-30)",
                  "in":"path",
                  "name":"monitor_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer monitor configuration for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Monitor Id (ex. monitor-39)",
                  "in":"path",
                  "name":"monitor_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "monitor":{
                           "properties":{
                              "expected":{
                                 "description":"(HTTP and HTTPS) Type the string that the monitor expects to match in the status line of the HTTP or HTTPS response (for example, HTTP/1.1).",
                                 "type":"string"
                              },
                              "extension":{
                                 "description":"(ALL) base64. Type advanced monitor parameters as key=value pairs. (ex, delay=2, critical=3, warning=10)",
                                 "type":"string"
                              },
                              "interval":{
                                 "description":"Type the interval at which a server is to be monitored using the specified Method.",
                                 "type":"string"
                              },
                              "max_retries":{
                                 "description":"Type the number of times the specified monitoring Method must fail sequentially before the server is declared down.",
                                 "type":"string"
                              },
                              "method":{
                                 "default":"HTTP",
                                 "description":"(HTTP and HTTPS) Select the method to be used to detect server status.",
                                 "enum":[
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "DELETE",
                                    "HEAD",
                                    "OPTIONS",
                                    "TRACE",
                                    "CONNECT"
                                 ],
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Monitor Name",
                                 "type":"string"
                              },
                              "receive":{
                                 "description":"(HTTP, HTTPS, and UDP) Type the string to be matched in the response content.",
                                 "type":"string"
                              },
                              "send":{
                                 "description":"(HTTP, HTTPS, UDP) Type the data to be sent.",
                                 "type":"string"
                              },
                              "timeout":{
                                 "description":"Type the maximum time in seconds within which a response from the server must be received.",
                                 "type":"string"
                              },
                              "type":{
                                 "default":"HTTP",
                                 "description":"Select the way in which you want to send the health check request to the server \u2014 HTTP, HTTPS, TCP, ICMP, or UDP.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "ICMP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              },
                              "url":{
                                 "description":"(HTTP and HTTPS) Type the URL to be used in the server status request. When you select the POST method, you must specify a value for Send.",
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "interval",
                              "timeout",
                              "type"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "monitor"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the load balancer monitor with id monitor-# for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/pools":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer pool configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "pool":{
                           "properties":{
                              "algorithm":{
                                 "default":"ROUND_ROBIN",
                                 "description":"Algorithm",
                                 "enum":[
                                    "ROUND_ROBIN",
                                    "IP_HASH",
                                    "LEASTCONN",
                                    "URI",
                                    "HTTPHEADER",
                                    "URL"
                                 ],
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "algorithmParameters":{
                                 "description":"Algorithm Parameters",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "description":{
                                 "description":"Description",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "members":{
                                 "items":{
                                    "properties":{
                                       "condition":{
                                          "default":"enabled",
                                          "description":"Member Enabled",
                                          "enum":[
                                             "enabled",
                                             "disabled"
                                          ],
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "ip_address":{
                                          "description":"Member IpAdress",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "max_connection":{
                                          "description":"Member MaxConnection",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "min_connection":{
                                          "description":"Member Min Connection",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "monitor_port":{
                                          "description":"Member Monitor Port",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "name":{
                                          "description":"Member Name",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "port":{
                                          "description":"Member Port",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "weight":{
                                          "description":"Member Weight",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "monitor_id":{
                                 "description":"monitor_id (ex. monitor-1)",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Pool Name",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "transparent":{
                                 "default":false,
                                 "description":"Transparent false/true",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "algorithm",
                              "transparent"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "pool"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the load balancer pool configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/pools/{pool_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool Id (ex. pool-54)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer pool configuration for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool Id (ex. pool-92)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer pool configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool Id (ex. pool-51)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "pool":{
                           "properties":{
                              "algorithm":{
                                 "default":"ROUND_ROBIN",
                                 "description":"Algorithm",
                                 "enum":[
                                    "ROUND_ROBIN",
                                    "IP_HASH",
                                    "LEASTCONN",
                                    "URI",
                                    "HTTPHEADER",
                                    "URL"
                                 ],
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "algorithmParameters":{
                                 "description":"Algorithm Parameters",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "description":{
                                 "description":"Description",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "members":{
                                 "items":{
                                    "properties":{
                                       "condition":{
                                          "default":"enabled",
                                          "description":"Member Enabled",
                                          "enum":[
                                             "enabled",
                                             "disabled"
                                          ],
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "ip_address":{
                                          "description":"Member IpAdress",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "max_connection":{
                                          "description":"Member MaxConnection",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "min_connection":{
                                          "description":"Member Min Connection",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "monitor_port":{
                                          "description":"Member Monitor Port",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "name":{
                                          "description":"Member Name",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "port":{
                                          "description":"Member Port",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       },
                                       "weight":{
                                          "description":"Member Weight",
                                          "in":"query",
                                          "required":false,
                                          "type":"string"
                                       }
                                    },
                                    "type":"object"
                                 },
                                 "type":"array"
                              },
                              "monitor_id":{
                                 "description":"monitor_id (ex. monitor-1)",
                                 "in":"query",
                                 "required":false,
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Pool Name",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              },
                              "transparent":{
                                 "default":false,
                                 "description":"Transparent false/true",
                                 "in":"query",
                                 "required":true,
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "algorithm",
                              "transparent"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "pool"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the load balancer pool configuration for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/pools/{pool_id}/member/{member_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Pool Id (ex. pool-51)",
                  "in":"path",
                  "name":"pool_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Member Id (ex. member-58)",
                  "in":"path",
                  "name":"member_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer pool member to for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/virtualservers":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the load balancer virtual server configuration.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer virtual server configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "virtual_server":{
                           "properties":{
                              "acceleration":{
                                 "default":false,
                                 "description":"Enable acceleration",
                                 "type":"boolean"
                              },
                              "application_profile_id":{
                                 "description":"Application Profile Id",
                                 "type":"string"
                              },
                              "application_rules":{
                                 "description":"Application Rules",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "connection_limit":{
                                 "description":"Maximum concurrent connections that the virtual server can process.",
                                 "type":"string"
                              },
                              "connection_rate_limit":{
                                 "description":"Maximum incoming new connection requests per second.",
                                 "type":"string"
                              },
                              "description":{
                                 "description":"Description",
                                 "type":"string"
                              },
                              "enable_service_insertion":{
                                 "default":false,
                                 "description":"Enable service insertion",
                                 "type":"boolean"
                              },
                              "enabled":{
                                 "default":true,
                                 "description":"Enable virtual server",
                                 "type":"boolean"
                              },
                              "ip_address":{
                                 "description":"Ip Adress that the load balancer listens on",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Virtual Server Name",
                                 "type":"string"
                              },
                              "pool_id":{
                                 "description":"Choose the server pool that the load balancer will use.",
                                 "type":"string"
                              },
                              "port":{
                                 "description":"Port number that the load balancer listens on.",
                                 "type":"string"
                              },
                              "protocol":{
                                 "default":"HTTP",
                                 "description":"Select the protocol that the virtual server accepts. You must select the same protocol used by the selected Application Profile.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "enabled",
                              "acceleration",
                              "ip_address",
                              "protocol",
                              "port"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "virtual_server"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the load balancer virtual server configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/elbs/virtualservers/{virtualserver_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Server Id (ex. virtualServer-70)",
                  "in":"path",
                  "name":"virtualserver_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the configuration of the load balancer virtual server with identifier virtualServer for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Server Id (ex. virtualServer-70)",
                  "in":"path",
                  "name":"virtualserver_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the load balancer virtual server configuration for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Virtual Server Id (ex. virtualServer-70)",
                  "in":"path",
                  "name":"virtualserver_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "virtual_server":{
                           "properties":{
                              "acceleration":{
                                 "default":false,
                                 "description":"Enable acceleration",
                                 "type":"boolean"
                              },
                              "application_profile_id":{
                                 "description":"Application Profile Id",
                                 "type":"string"
                              },
                              "application_rules":{
                                 "description":"Application Rules",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "connection_limit":{
                                 "description":"Maximum concurrent connections that the virtual server can process.",
                                 "type":"string"
                              },
                              "connection_rate_limit":{
                                 "description":"Maximum incoming new connection requests per second.",
                                 "type":"string"
                              },
                              "description":{
                                 "description":"Description",
                                 "type":"string"
                              },
                              "enable_service_insertion":{
                                 "default":false,
                                 "description":"Enable service insertion",
                                 "type":"boolean"
                              },
                              "enabled":{
                                 "default":true,
                                 "description":"Enable virtual server",
                                 "type":"boolean"
                              },
                              "ip_address":{
                                 "description":"Ip Adress that the load balancer listens on",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Virtual Server Name",
                                 "type":"string"
                              },
                              "pool_id":{
                                 "description":"Choose the server pool that the load balancer will use.",
                                 "type":"string"
                              },
                              "port":{
                                 "description":"Port number that the load balancer listens on.",
                                 "type":"string"
                              },
                              "protocol":{
                                 "default":"HTTP",
                                 "description":"Select the protocol that the virtual server accepts. You must select the same protocol used by the selected Application Profile.",
                                 "enum":[
                                    "HTTP",
                                    "HTTPS",
                                    "TCP",
                                    "UDP"
                                 ],
                                 "type":"string"
                              }
                           },
                           "required":[
                              "name",
                              "enabled",
                              "acceleration",
                              "ip_address",
                              "protocol",
                              "port"
                           ],
                           "type":"object"
                        }
                     },
                     "required":[
                        "virtual_server"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update the configuration of the load balancer virtual server with identifier virtualServer-# for the edge with identifier id.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/firewalls":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of firewalls.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Enable (true) /Disable (false) Edge Firewall",
                  "in":"query",
                  "name":"enable",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enable/Disable firewall for the edge by gateway name.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/firewalls/rule":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "rule":{
                           "properties":{
                              "action":{
                                 "description":"Rule Action",
                                 "enum":[
                                    "allow",
                                    "deny"
                                 ],
                                 "type":"string"
                              },
                              "destination_ip":{
                                 "description":"Rule Destination Ip. (IP, CIDR, IP range, any, internal,external)",
                                 "type":"string"
                              },
                              "destination_port":{
                                 "description":"Rule Destination Port.",
                                 "type":"string"
                              },
                              "enable":{
                                 "default":true,
                                 "description":"Confine the network trafic for the firewall rule",
                                 "type":"boolean"
                              },
                              "enable_logging":{
                                 "default":false,
                                 "description":"Rule Enable Logging",
                                 "type":"boolean"
                              },
                              "name":{
                                 "description":"Rule Name",
                                 "type":"string"
                              },
                              "protocol":{
                                 "description":"Rule Protocol",
                                 "enum":[
                                    "TCP",
                                    "UDP",
                                    "ICMP",
                                    "ALL"
                                 ],
                                 "type":"string"
                              },
                              "source_ip":{
                                 "description":"Rule Source Ip. (IP, CIDR, IP range, any, internal,external)",
                                 "type":"string"
                              },
                              "source_port":{
                                 "description":"Rule Source Port.",
                                 "type":"string"
                              },
                              "translate":{
                                 "default":false,
                                 "description":"Rule Translate",
                                 "type":"boolean"
                              }
                           },
                           "required":[
                              "enable",
                              "name",
                              "action",
                              "source_ip",
                              "source_port",
                              "destination_ip",
                              "destination_port",
                              "protocol"
                           ],
                           "type":"object"
                        },
                        "timeout":{
                           "default":2,
                           "description":"Timeout",
                           "type":"string"
                        }
                     },
                     "required":[
                        "rule"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add an edge firewall rule for the edge with identifier name above the rule identified by rule-#",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/firewalls/rule/{rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule Id (ex. 8228)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the edge firewall rule identified by name. Cannot delete internal rules or the default policy rule.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/nat":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve edge NAT (Network Address Translation) configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/nat/rule":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "destination_ip":{
                           "description":"Translated Ip",
                           "type":"string"
                        },
                        "enable_logging":{
                           "default":false,
                           "description":"Enable Logging",
                           "type":"boolean"
                        },
                        "enabled":{
                           "default":true,
                           "description":"Enable this rule",
                           "type":"boolean"
                        },
                        "from_port":{
                           "default":"any",
                           "description":"Original Port",
                           "type":"string"
                        },
                        "protocol":{
                           "default":"TCP",
                           "description":"Protocol",
                           "enum":[
                              "TCP",
                              "UDP",
                              "ICMP",
                              "All"
                           ],
                           "type":"string"
                        },
                        "source_ip":{
                           "description":"Source Ip",
                           "type":"string"
                        },
                        "to_port":{
                           "default":"any",
                           "description":"Translated Port",
                           "type":"string"
                        },
                        "type":{
                           "default":"SNAT",
                           "description":"SNAT (source NAT), DNAT (destination NAT)",
                           "enum":[
                              "SNAT",
                              "DNAT"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "type",
                        "source_ip",
                        "protocol",
                        "destination_ip",
                        "enabled",
                        "enable_logging"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Append NAT (Network Address Translation) rule to NAT rules on the edge with identifier name.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/nat/rule/{rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Rule Id (ex. 209593)",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete edge NAT (Network Address Translation) rule with the identifier# from the edge with identifier name.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/vpnipsec":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the IPSec VPN configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"Show Sensitive Data",
                  "in":"query",
                  "name":"show_sensitive_data",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the IPSec VPN configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "enable":{
                           "default":true,
                           "description":"Enable ipsec Vpn",
                           "type":"boolean"
                        },
                        "logging_enable":{
                           "default":false,
                           "description":"Enable Logging",
                           "type":"boolean"
                        },
                        "logging_level":{
                           "default":"Info",
                           "description":"Logging Level",
                           "enum":[
                              "Alert",
                              "Critical",
                              "Debug",
                              "Emergency",
                              "Error",
                              "Info",
                              "Notice",
                              "Warning"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "enable",
                        "logging_enable",
                        "logging_level"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Enable/Disable the IPSec VPN configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/vpnipsec/tunnel":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "tunnel":{
                           "items":{
                              "properties":{
                                 "authentication_mode":{
                                    "default":"PSK",
                                    "description":"Select an authentication type (PSK Pre Shared Key)",
                                    "enum":[
                                       "PSK",
                                       "Certificate"
                                    ],
                                    "type":"string"
                                 },
                                 "dh_group":{
                                    "default":"DH2",
                                    "description":"Select the cryptography scheme that allows the peer site and this edge gateway to establish a shared secret over an insecure communications channel.",
                                    "enum":[
                                       "DH2",
                                       "DH5",
                                       "DH14"
                                    ],
                                    "type":"string"
                                 },
                                 "enable_pfs":{
                                    "default":true,
                                    "description":"Enable PFS (Perfect Forward Secrecy). Enable this option to have the system generate unique public keys for all IPsec VPN sessions your users initiate.",
                                    "type":"boolean"
                                 },
                                 "enabled":{
                                    "default":true,
                                    "description":"Enable this connection between the two VPN endpoints.",
                                    "type":"boolean"
                                 },
                                 "encryption_algorithm":{
                                    "default":"AES",
                                    "description":"Select the encryption algorithm type from the drop-down list.",
                                    "enum":[
                                       "AES",
                                       "AES256",
                                       "Triple DES",
                                       "AES-GCM"
                                    ],
                                    "type":"string"
                                 },
                                 "extension":{
                                    "description":"Type one of the following options - \"securelocaltrafficbyip=IPAddress\" to redirect the edge gateway local traffic over the IPsec VPN tunnel.This is the default value. \"passthroughSubnets=PeerSubnetIPAddress\" to support overlapping subnets.",
                                    "type":"string"
                                 },
                                 "local_subnets":{
                                    "description":"Enter the networks to share between the sites and use a comma as a separator to enter multiple subnets. (ex. 192.168.99.0/24)",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "localid":{
                                    "description":"Enter the external IP address of the edge gateway instance, which is the public IP address of the edge gateway. (ex. 100.64.102.5)",
                                    "type":"string"
                                 },
                                 "localip":{
                                    "description":"Local Endpoint for this connection. (ex. 100.64.102.5)",
                                    "type":"string"
                                 },
                                 "name":{
                                    "description":"Connection Name",
                                    "type":"string"
                                 },
                                 "peer_subnets":{
                                    "description":"Enter the remote network to which the VPN connects and use a comma as a separator to type multiple subnets. (ex. 192.168.99.0/24)",
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "peerid":{
                                    "description":"Enter a peer ID to uniquely identify the peer site.",
                                    "type":"string"
                                 },
                                 "peerip":{
                                    "description":"Enter the IP address or FQDN of the peer site, which is the public-facing address of the remote device to which you are connecting.",
                                    "type":"string"
                                 },
                                 "shared_key":{
                                    "description":"If you selected PSK as the authentication type, type an alphanumeric secret string which can be a string with a maximum length of 128 bytes.",
                                    "type":"string"
                                 }
                              },
                              "required":[
                                 "enabled",
                                 "enable_pfs",
                                 "localid",
                                 "localip",
                                 "local_subnets",
                                 "peerid",
                                 "peerip",
                                 "peer_subnets",
                                 "encryption_algorithm",
                                 "dh_group",
                                 "authentication_mode"
                              ],
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "tunnel"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Add the IPSec VPN tunnel configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/edgegateways/{gateway_name}/vpnipsec/{site_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Gateway Name",
                  "in":"path",
                  "name":"gateway_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Site id",
                  "in":"path",
                  "name":"site_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Connection Name",
                  "in":"query",
                  "name":"name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Enter the external IP address of the edge gateway instance, which is the public IP address of the edge gateway. (ex. 100.64.102.5)",
                  "in":"query",
                  "name":"localid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Local Endpoint for this connection. (ex. 100.64.102.5)",
                  "in":"query",
                  "name":"localip",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Enter the networks to share between the sites and use a comma as a separator to enter multiple subnets. (ex. 192.168.99.0/24)",
                  "in":"query",
                  "name":"local_subnets",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Enter a peer ID to uniquely identify the peer site.",
                  "in":"query",
                  "name":"peerid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Enter the IP address or FQDN of the peer site, which is the public-facing address of the remote device to which you are connecting.",
                  "in":"query",
                  "name":"peerip",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Enter the remote network to which the VPN connects and use a comma as a separator to type multiple subnets. (ex. 192.168.99.0/24)",
                  "in":"query",
                  "name":"peer_subnets",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"AES",
                  "description":"Select the encryption algorithm type from the drop-down list.",
                  "enum":[
                     "AES",
                     "AES256",
                     "Triple DES",
                     "AES-GCM"
                  ],
                  "in":"query",
                  "name":"encryption_algorithm",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"DH2",
                  "description":"Select the cryptography scheme that allows the peer site and this edge gateway to establish a shared secret over an insecure communications channel.",
                  "enum":[
                     "DH2",
                     "DH5",
                     "DH14"
                  ],
                  "in":"query",
                  "name":"dh_group",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"PSK",
                  "description":"Select an authentication type (PSK Pre Shared Key)",
                  "enum":[
                     "PSK",
                     "Certificate"
                  ],
                  "in":"query",
                  "name":"authentication_mode",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete the IPSec VPN tunnel configuration for the edge.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/gateways":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"gateway details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"gateway type",
                  "in":"query",
                  "name":"nsx",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of gateways.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "dns":{
                           "description":"DNS (ex. 8.8.8.8)",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subnet":{
                           "properties":{
                              "name":{
                                 "description":"Subnet Name",
                                 "properties":{
                                    "cidr_block":{
                                       "description":"Subnet CIDR block (ex. 10.10.1.1/24)",
                                       "type":"string"
                                    },
                                    "gateway":{
                                       "description":"Subnet Gateway",
                                       "type":"string"
                                    },
                                    "name":{
                                       "description":"Subnet Name",
                                       "type":"string"
                                    },
                                    "option":{
                                       "properties":{
                                          "dnssuffix":{
                                             "description":"Option DNS suffix (ex. expo.com)",
                                             "items":{
                                                "type":"string"
                                             },
                                             "type":"string"
                                          },
                                          "end_ip":{
                                             "description":"Option End Ip (ex. 10.10.1.254)",
                                             "type":"string"
                                          },
                                          "fence_mode":{
                                             "default":"natRouted",
                                             "description":"Option Fence Mode",
                                             "enum":[
                                                "isolated",
                                                "bridged",
                                                "natRouted"
                                             ],
                                             "type":"string"
                                          },
                                          "gateway_ip":{
                                             "description":"Option Gateway Ip (ex. 10.10.1.1)",
                                             "type":"string"
                                          },
                                          "inherited":{
                                             "default":false,
                                             "description":"Option Inherited",
                                             "type":"boolean"
                                          },
                                          "mode":{
                                             "description":"Option Mode",
                                             "type":"string"
                                          },
                                          "netmask":{
                                             "description":"Option Netmask (ex. 255.255.255.0)",
                                             "type":"string"
                                          },
                                          "shared":{
                                             "default":false,
                                             "description":"Option Shared",
                                             "type":"boolean"
                                          },
                                          "start_ip":{
                                             "description":"Option Start Ip (ex. 10.10.1.2)",
                                             "type":"string"
                                          }
                                       },
                                       "type":"object"
                                    },
                                    "placement":{
                                       "properties":{
                                          "vdc":{
                                             "type":"string"
                                          }
                                       },
                                       "required":[
                                          "vdc"
                                       ],
                                       "type":"object"
                                    },
                                    "timeout":{
                                       "description":"timeout",
                                       "type":"string"
                                    }
                                 },
                                 "required":[
                                    "name",
                                    "gateway"
                                 ],
                                 "type":"object"
                              }
                           },
                           "required":[
                              "name"
                           ],
                           "type":"object"
                        },
                        "vnet_name":{
                           "description":"Vnet Name",
                           "type":"string"
                        }
                     },
                     "required":[
                        "vnet_name",
                        "subnet"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a Network.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/networks/{network_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Network Name",
                  "in":"path",
                  "name":"network_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Routing mode",
                  "enum":[
                     "routed",
                     "direct",
                     "isolated"
                  ],
                  "in":"query",
                  "name":"routing_mode",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete Network.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/quotas":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of quotas.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/storageprofiles":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the storage profiles.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vapps":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"query",
                  "name":"deployed_from_uic",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of VDC vApps.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vapps/{vapp_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"vApp name",
                  "in":"path",
                  "name":"vapp_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a vApp by name.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vapp name",
                  "in":"path",
                  "name":"vapp_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "console",
                     "delete",
                     "delete_snapshot",
                     "poweroff",
                     "poweron",
                     "rebuild",
                     "restart",
                     "resume",
                     "shutdown",
                     "snapshot",
                     "stop",
                     "suspend",
                     "metrics"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [console, delete, delete_snapshot, poweroff, poweron, rebuild, restart, resume, shutdown, snapshot, stop, suspend, metrics].",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vapps/{vapp_name}/vm/{vm_name}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vapp name",
                  "in":"path",
                  "name":"vapp_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VM name",
                  "in":"path",
                  "name":"vm_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "console",
                     "delete",
                     "delete_snapshot",
                     "poweroff",
                     "poweron",
                     "rebuild",
                     "resize",
                     "restart",
                     "resume",
                     "shutdown",
                     "snapshot",
                     "stop",
                     "suspend",
                     "metrics"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "cpu":{
                           "description":"(Nb) If Action resize, Required CPU and/or RAM and/or Disk",
                           "type":"integer"
                        },
                        "disk":{
                           "description":"(Go) If Action resize, Required Disk and/or RAM and/or CPU",
                           "type":"string"
                        },
                        "ram":{
                           "description":"(Mo) If Action resize, Required RAM and/or CPU and/or Disk",
                           "type":"integer"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [console, delete, delete_snapshot, poweroff, poweron, rebuild, resize, restart, resume, shutdown, snapshot, stop, suspend, metrics].",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vmaffinityrules":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of affinity rules.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "isenabled":{
                           "default":true,
                           "description":"True if the affinity rule is enabled.",
                           "type":"boolean"
                        },
                        "name":{
                           "description":"The name of this affinity rule.",
                           "type":"string"
                        },
                        "polarity":{
                           "default":"Affinity",
                           "description":"A rule with a Polarity value of Affinity specifies two or more virtual machines that the system should deploy on the same host. A rule with a Polarity value of Anti-Affinity specifies two or more virtual machines that the system should deploy on separate hosts.",
                           "enum":[
                              "Affinity",
                              "Anti-Affinity"
                           ],
                           "type":"string"
                        },
                        "vapp_name":{
                           "description":"Insert two or more virtual machines",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "name",
                        "polarity",
                        "isenabled",
                        "vapp_name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a new VM affinity rule. A VM-VM affinity rule applies to two or more virtual machines and specifies whether they should be deployed on the same host or on separate hosts",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vmaffinityrules/{affinity_name}":{
         "put":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The name of this affinity rule.",
                  "in":"path",
                  "name":"affinity_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "action":{
                           "default":"add",
                           "description":"Action",
                           "enum":[
                              "add",
                              "remove"
                           ],
                           "items":{
                              "type":"string"
                           },
                           "type":"string"
                        },
                        "isenabled":{
                           "default":false,
                           "description":"True if the affinity rule is enabled.",
                           "type":"boolean"
                        },
                        "rule_href":{
                           "description":"At least RuleHref or rule_id argument is required for this action",
                           "items":{
                              "type":"string"
                           },
                           "type":"string"
                        },
                        "rule_id":{
                           "default":null,
                           "description":"At least RuleHref or rule_id argument is required for this action",
                           "type":"string"
                        },
                        "vapp_href":{
                           "description":"At least VappHref or VappName or VappId argument is required for this action",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "vapp_id":{
                           "description":"At least VappHref or VappName or VappId argument is required for this action",
                           "in":"query",
                           "items":{
                              "type":"string"
                           },
                           "required":false,
                           "type":"array"
                        },
                        "vapp_name":{
                           "description":"At least VappHref or VappName or VappId argument is required for this action",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "vm_href":{
                           "description":"At least VmName or VmHref argument is required for this action",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "vm_name":{
                           "description":"At least VmName or VmHref argument is required for this action",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "required":[
                        "isenabled",
                        "action"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Updates the specified VM affinity/anti-affinity rule.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/vmaffinityrules/{rule_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":null,
                  "description":"Rule id",
                  "in":"path",
                  "name":"rule_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete  the specified VM affinity/anti-affinity rule.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/volumes":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of volumes.",
            "tags":[
               "provider/vcloud"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "name":{
                           "description":"Volume Name",
                           "type":"string"
                        },
                        "size":{
                           "description":"Volume size (Gb)",
                           "type":"string"
                        },
                        "storage_profile":{
                           "default":"SILVER",
                           "description":"Volume Storage Profile",
                           "enum":[
                              "SILVER",
                              "GOLD",
                              "PLATINIUM 3K"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "size",
                        "name",
                        "storage_profile"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a volume.",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vcloud/{uuid}/vdc/{vdc_name}/volumes/{volume_id}":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc name",
                  "in":"path",
                  "name":"vdc_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Volume id",
                  "in":"path",
                  "name":"volume_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "attach",
                     "detach",
                     "delete"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "disk_name":{
                           "description":"(delete)",
                           "in":"query",
                           "required":false,
                           "type":"string"
                        },
                        "vapp_name":{
                           "description":"vapp name",
                           "in":"query",
                           "required":false,
                           "type":"string"
                        },
                        "vmname":{
                           "description":"(vm name",
                           "in":"query",
                           "required":false,
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on volume [attach, detach, delete].",
            "tags":[
               "provider/vcloud"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/clusters":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"All resource pools",
                  "in":"query",
                  "name":"allrp",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"All virtual machines",
                  "in":"query",
                  "name":"allvm",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"With monitoring",
                  "in":"query",
                  "name":"with_monitoring",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Interval (ex. 15)",
                  "in":"query",
                  "name":"interval",
                  "required":false,
                  "type":"number"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of clusters.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/clusters/{cluster_moid}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cluster moid (ex. domain-c57)",
                  "in":"path",
                  "name":"cluster_moid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a cluster informations.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/clusters/{cluster_moid}/resourcepools":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cluster moid (ex. domain-c57)",
                  "in":"path",
                  "name":"cluster_moid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of cluster resourcepools and vms.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/datacenters":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"All resource pools",
                  "in":"query",
                  "name":"allrp",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"All virtual machines",
                  "in":"query",
                  "name":"allvm",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"With monitoring",
                  "in":"query",
                  "name":"with_monitoring",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Interval (ex. 15)",
                  "in":"query",
                  "name":"interval",
                  "required":false,
                  "type":"number"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of datacenters.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/datastores":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of datastores.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/datastores/clusters":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid filter (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Cluster moid filter",
                  "in":"query",
                  "name":"cluster_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Parent moid filter (ex. group-v314)",
                  "in":"query",
                  "name":"parent_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of datastore clusters.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/folders":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid filter (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Folder moid filter (ex. group-v694)",
                  "in":"query",
                  "name":"folder_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Parent moid filter (ex. group-v314)",
                  "in":"query",
                  "name":"parent_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of folders.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/hostname/{host_name}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Host name (ex. myhostname)",
                  "in":"path",
                  "name":"host_name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Verifies if myhostname is valid hostname.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/hostservers":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cluster moid filter",
                  "in":"query",
                  "name":"cluster_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Host moid filter",
                  "in":"query",
                  "name":"host_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of hostservers.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/images":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid filter (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Template moid filter (ex. vm-694)",
                  "in":"query",
                  "name":"template_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Parent moid filter (ex. group-v3)",
                  "in":"query",
                  "name":"parent_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of images.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/instances":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Uic origine",
                  "in":"query",
                  "name":"uic",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Monitoring",
                  "in":"query",
                  "name":"with_monitoring",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "description":"Interval (ex. 15)",
                  "in":"query",
                  "name":"interval",
                  "required":false,
                  "type":"number"
               },
               {
                  "description":"Vdc moid filter (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Vm moid filter (ex. vm-225)",
                  "in":"query",
                  "name":"vm_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Resourcepool moid filter (ex. resgroup-59)",
                  "in":"query",
                  "name":"resourcepool_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Parent moid filter (ex. group-v314)",
                  "in":"query",
                  "name":"parent_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of instances.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/networks":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid filter (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Network name filter (ex. network-16)",
                  "in":"query",
                  "name":"network_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Host moid filter",
                  "in":"query",
                  "name":"host_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of networks.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/portgroups":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"vdc moid",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"portgroup moid",
                  "in":"query",
                  "name":"portgroup_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of portgroups.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/resourcepools":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"All virtual machines",
                  "in":"query",
                  "name":"allvm",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"With monitoring",
                  "in":"query",
                  "name":"with_monitoring",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "default":false,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Interval (ex. 15)",
                  "in":"query",
                  "name":"interval",
                  "required":false,
                  "type":"number"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of resourcepools.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/resourcespools/{resourcepool_moid}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Resource pool moid",
                  "in":"path",
                  "name":"resourcepool_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"All vm",
                  "in":"query",
                  "name":"allvm",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a resourcepool informations.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/switches":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Vswitch moid",
                  "in":"query",
                  "name":"vswitchmoid_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of switches.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/templates":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Parent moid (ex. group-v3)",
                  "in":"query",
                  "name":"parent_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Template moid (ex. vm-96)",
                  "in":"query",
                  "name":"template_moid",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Vdc moid (ex. datacenter-2)",
                  "in":"query",
                  "name":"vdc_moid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of templates.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vcenter":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a vcenter informations.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/clusters":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Cluster name",
                  "in":"query",
                  "name":"cluster_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Datacenter",
                  "in":"query",
                  "name":"datacenter",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a vdc cluster.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/folders":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a vdc folders tree.",
            "tags":[
               "provider/vsphere"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "folder_name":{
                           "description":"Folder name",
                           "type":"string"
                        },
                        "target":{
                           "default":"vm",
                           "description":"Target (ex. vm)",
                           "enum":[
                              "vm",
                              "datastore"
                           ],
                           "type":"string"
                        }
                     },
                     "required":[
                        "folder_name",
                        "target"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a folder.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/folders/{folder_name}":{
         "delete":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Folder name",
                  "in":"path",
                  "name":"folder_name",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "parent_folder":{
                           "description":"Parent folder",
                           "type":"string"
                        },
                        "timeout":{
                           "description":"Timeout (ex. 600)",
                           "type":"number"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete one folder.",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/instances/{vm_moid}":{
         "get":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vdc moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Vm moid (ex. vm-362)",
                  "in":"path",
                  "name":"vm_moid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a instance informations by vm moid.",
            "tags":[
               "provider/vsphere"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VM moid (ex. vm-753)",
                  "in":"path",
                  "name":"vm_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "delete",
                     "stop",
                     "resume",
                     "restart",
                     "resize",
                     "console",
                     "rebuild",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "console_port":{
                           "description":"(console) Console port (ex. 8080)",
                           "type":"string"
                        },
                        "console_type":{
                           "description":"(console) Console type (ex. html)",
                           "type":"string"
                        },
                        "cpu":{
                           "description":"(resize) CPU (ex. 2)",
                           "type":"string"
                        },
                        "description":{
                           "description":"(snapshot) Description",
                           "type":"string"
                        },
                        "disk_number":{
                           "description":"(resize) Disk number (ex. 1)",
                           "type":"string"
                        },
                        "disk_size":{
                           "description":"(resize) Disk size (Go) (ex. 20)",
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"Instance id",
                           "type":"string"
                        },
                        "memory":{
                           "description":"(resize) Memory (ex. 256)",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(snapshot) Snapshot name",
                           "type":"string"
                        },
                        "wait_for_ip_address":{
                           "default":true,
                           "description":"(rebuild) Waits for IP address",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance [delete, stop, resume, restart, resize, console, rebuild, snapshot].",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/instances/{vm_moid}/disks":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VM moid (ex. vm-753)",
                  "in":"path",
                  "name":"vm_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "add",
                     "remove",
                     "list"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "disk_mode":{
                           "description":"(add) Disk mode (ex. persistent)",
                           "enum":[
                              "persistent",
                              "nonpersistent",
                              "independent_persistent",
                              "independent_nonpersistent",
                              "append",
                              "undoable"
                           ],
                           "type":"string"
                        },
                        "disk_number":{
                           "description":"(remove) Disk number (ex. 2)",
                           "type":"string"
                        },
                        "disk_size":{
                           "description":"(add) Disk size (Go)",
                           "type":"string"
                        },
                        "disk_type":{
                           "description":"(add) Disk type (ex. thin)",
                           "type":"string"
                        },
                        "instance_id":{
                           "description":"Instance id",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance disks [add, remove, list].",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/instances/{vm_moid}/nics":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VM moid (ex. vm-753)",
                  "in":"path",
                  "name":"vm_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "add",
                     "delete",
                     "list"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "nic_config":{
                           "description":"NIC configuration",
                           "items":{
                              "properties":{
                                 "adapter_type":{
                                    "description":"Adapter type [vmxnet, vmxnet2, vmxnet3, e1000, e1000e]",
                                    "enum":[
                                       "vmxnet",
                                       "vmxnet2",
                                       "vmxnet3",
                                       "e1000",
                                       "e1000e"
                                    ],
                                    "type":"string"
                                 },
                                 "controller_key":{
                                    "description":"Controller key",
                                    "type":"string"
                                 },
                                 "dhcp":{
                                    "default":false,
                                    "description":"DHCP",
                                    "type":"boolean"
                                 },
                                 "dns":{
                                    "description":"DNS",
                                    "type":"string"
                                 },
                                 "domain":{
                                    "description":"Domain",
                                    "type":"string"
                                 },
                                 "gateway_ip":{
                                    "description":"Gateway ip",
                                    "type":"string"
                                 },
                                 "macaddress":{
                                    "description":"Mac address",
                                    "type":"string"
                                 },
                                 "netmask":{
                                    "description":"Net mask",
                                    "type":"string"
                                 },
                                 "network":{
                                    "description":"Network",
                                    "type":"string"
                                 },
                                 "nic_label":{
                                    "description":"(delete) Nic label",
                                    "type":"string"
                                 },
                                 "staticip":{
                                    "description":"Static ip",
                                    "type":"string"
                                 },
                                 "unit_number":{
                                    "description":"(delete) Unit number",
                                    "type":"number"
                                 }
                              },
                              "required":null,
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance nics [add, delete, list].",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/vsphere/{uuid}/vdc/{vdc_moid}/instances/{vm_moid}/snapshots":{
         "post":{
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VDC moid (ex. datacenter-2)",
                  "in":"path",
                  "name":"vdc_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"VM moid (ex. vm-753)",
                  "in":"path",
                  "name":"vm_moid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions",
                  "enum":[
                     "list",
                     "delete",
                     "delete_all"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "instance_id":{
                           "description":"Required instance_id or vm_moid",
                           "type":"string"
                        },
                        "snapshot_name":{
                           "description":"(delete) Snapshot name",
                           "type":"string"
                        },
                        "with_child":{
                           "default":false,
                           "description":"(delete) With child",
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform on instance snapshots, [list, delete, delete_all].",
            "tags":[
               "provider/vsphere"
            ]
         }
      },
      "/v2.0/provider/{provider}":{
         "get":{
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "default_region":{
                                    "type":"string"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "enabled":{
                                    "type":"boolean"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "provider":{
                                    "type":"string"
                                 },
                                 "provider_account_id":{
                                    "type":"string"
                                 },
                                 "region":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all provider subscriptions.",
            "tags":[
               "provider/subscription"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "enum":[
                     "describeSubscriptions"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "filters":{
                           "items":{
                              "properties":{
                                 "name":{
                                    "type":"string"
                                 },
                                 "values":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "max_results":{
                           "type":"integer"
                        },
                        "next_token":{
                           "type":"integer"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "next_token":{
                           "type":"string"
                        },
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "default_region":{
                                    "type":"string"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "enabled":{
                                    "type":"boolean"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "provider":{
                                    "type":"string"
                                 },
                                 "provider_account_id":{
                                    "type":"string"
                                 },
                                 "region":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List provider subscriptions with filters.",
            "tags":[
               "provider/subscription"
            ]
         }
      },
      "/v2.0/provider/{provider}/subscription":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "account":{
                           "type":"string"
                        },
                        "company":{
                           "type":"string"
                        },
                        "credentials":{
                           "required":true,
                           "type":"object"
                        },
                        "default_region":{
                           "type":"string"
                        },
                        "description":{
                           "type":"string"
                        },
                        "enabled":{
                           "type":"boolean"
                        },
                        "label":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "provider_account_id":{
                           "type":"string"
                        },
                        "region":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a provider subscription.",
            "tags":[
               "provider/subscription"
            ]
         }
      },
      "/v2.0/provider/{provider}/{uuid}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "with_trust":{
                           "type":"boolean"
                        },
                        "with_vm":{
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a provider subscription.",
            "tags":[
               "provider/subscription"
            ]
         },
         "get":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "account":{
                           "type":"string"
                        },
                        "created":{
                           "type":"string"
                        },
                        "credentials":{
                           "type":"object"
                        },
                        "default_region":{
                           "type":"string"
                        },
                        "description":{
                           "type":"string"
                        },
                        "enabled":{
                           "type":"boolean"
                        },
                        "label":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "provider":{
                           "type":"string"
                        },
                        "provider_account_id":{
                           "type":"string"
                        },
                        "region":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "updated":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get a provider subscription.",
            "tags":[
               "provider/subscription"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "enum":[
                     "status",
                     "disable",
                     "enable",
                     "getEvents"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "begin":{
                           "type":"integer"
                        },
                        "max_result":{
                           "type":"integer"
                        },
                        "time_zone":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform action on provider subscription.",
            "tags":[
               "provider/subscription"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway",
                     "clevercloud"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "company":{
                           "type":"string"
                        },
                        "credentials":{
                           "type":"object"
                        },
                        "default_region":{
                           "type":"string"
                        },
                        "description":{
                           "type":"string"
                        },
                        "enabled":{
                           "type":"boolean"
                        },
                        "label":{
                           "type":"string"
                        },
                        "provider_account_id":{
                           "type":"string"
                        },
                        "region":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a provider subscription.",
            "tags":[
               "provider/subscription"
            ]
         }
      },
      "/v2.0/provider/{provider}/{uuid}/inventory/scheduler":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"scheduled inventory id",
                  "in":"query",
                  "name":"id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get provider scheduled inventories",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/{provider}/{uuid}/inventory/scheduler/{service}/{resource}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"cloud provider service",
                  "enum":[
                     "---aws---",
                     "ec2",
                     "vpc",
                     "autoscaling",
                     "rds",
                     "billing",
                     "iam",
                     "lambda",
                     "cloudfront",
                     "elasticache",
                     "ecr",
                     "ecs",
                     "s3",
                     "apigateway",
                     "dynamodb",
                     "efs",
                     "sqs",
                     "sns",
                     "acm",
                     "eks",
                     "quota",
                     "---microsoftazure---",
                     "resources",
                     "compute",
                     "network",
                     "storage",
                     "keyvault",
                     "appservice",
                     "cdn",
                     "sql",
                     "recoveryservices",
                     "quota",
                     "automation",
                     "logicapps",
                     "applicationinsights",
                     "loganalytics",
                     "rediscache",
                     "streamanalytics",
                     "dns",
                     "servicebus",
                     "machinelearningstudio",
                     "databaseforpostgresql",
                     "databaseformariadb",
                     "databaseformysql",
                     "classiccompute",
                     "---googlecloud---",
                     "compute",
                     "network",
                     "billing",
                     "sql",
                     "filestore",
                     "gke",
                     "elb",
                     "redis",
                     "---vsphere---",
                     "resources",
                     "compute",
                     "network",
                     "---vcloud---",
                     "resource",
                     "compute",
                     "network",
                     "storage",
                     "---openstack---",
                     "compute",
                     "network",
                     "---ovh---",
                     "compute",
                     "storage",
                     "network",
                     "billing",
                     "project",
                     "---flexibleengine---",
                     "compute",
                     "network",
                     "billing",
                     "---outscale---",
                     "compute",
                     "image",
                     "volume",
                     "network",
                     "usage",
                     "---oraclecloud---",
                     "billing",
                     "---aliyuncloud---",
                     "ecs",
                     "network",
                     "clb",
                     "alb",
                     "oss",
                     "nas",
                     "apsaradbrds",
                     "apsaradbredis",
                     "ack",
                     "---scaleway---",
                     "dashboard",
                     "compute",
                     "storage",
                     "database",
                     "vpc",
                     "network"
                  ],
                  "in":"path",
                  "name":"service",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"cloud provider resource",
                  "enum":[
                     "---aws/ec2---",
                     "instances",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "ip_addresses",
                     "placement_groups",
                     "network_interfaces",
                     "load_balancers",
                     "auto_scaling_groups",
                     "images",
                     "---aws/vpc---",
                     "vpcs",
                     "subnets",
                     "route_tables",
                     "internet_gateways",
                     "egress_only_internet_gateways",
                     "nat_gateways",
                     "customer_gateways",
                     "vpn_gateways",
                     "network_acls",
                     "---aws/autoscaling---",
                     "auto_scaling_groups",
                     "auto_scaling_instances",
                     "launch_configurations",
                     "---aws/rds---",
                     "db_clusters",
                     "---aws/billing---",
                     "budgets",
                     "cost_explorer",
                     "---aws/iam---",
                     "users",
                     "roles",
                     "---aws/lambda---",
                     "functions",
                     "---aws/cloudfront---",
                     "distributions",
                     "---aws/elasticache---",
                     "elastic_clusters",
                     "events",
                     "---aws/ecr---",
                     "repositories",
                     "images",
                     "---aws/ecs---",
                     "ecs_clusters",
                     "services",
                     "container_instances",
                     "---aws/s3---",
                     "buckets",
                     "---aws/apigateway---",
                     "apis",
                     "---aws/dynamodb---",
                     "tables",
                     "global_tables",
                     "---aws/efs---'",
                     "filesystems",
                     "---aws/sqs---",
                     "queues",
                     "---aws/sns---",
                     "subscriptions",
                     "topics",
                     "---aws/acm---",
                     "certificates",
                     "---aws/eks---",
                     "eks_clusters",
                     "nodegroups",
                     "fargate_profiles",
                     "---aws/quota---",
                     "supported_services",
                     "limits",
                     "---microsoftazure/resources---",
                     "resources",
                     "resource_groups",
                     "tags",
                     "---microsoftazure/compute---",
                     "virtual_machines",
                     "volumes",
                     "snapshots",
                     "images",
                     "virtual_machine_scale_sets",
                     "---microsoftazure/network---",
                     "virtual_networks",
                     "ip_addresses",
                     "network_security_groups",
                     "application_security_groups",
                     "network_interfaces",
                     "load_balancers",
                     "application_gateways",
                     "network_watchers",
                     "---microsoftazure/storage---",
                     "storage_accounts",
                     "containers",
                     "blobs",
                     "files",
                     "queues",
                     "tables",
                     "---microsoftazure/keyvault---",
                     "keyvaults",
                     "certificates",
                     "secrets",
                     "keys",
                     "---microsoftazure/recoveryservices---",
                     "vaults",
                     "backup_items",
                     "backup_jobs",
                     "recovery_points",
                     "---microsoftazure/appservice---",
                     "web_apps",
                     "app_service_plans",
                     "---microsoftazure/cdn---",
                     "profiles",
                     "---microsoftazure/sql---",
                     "servers",
                     "databases",
                     "elasticpools",
                     "---microsoftazure/quota---",
                     "compute",
                     "storage",
                     "network",
                     "---microsoftazure/automation---",
                     "accounts",
                     "runbooks",
                     "---microsoftazure/logicapps---",
                     "workflows",
                     "---microsoftazure/applicationinsights---",
                     "components",
                     "---microsoftazure/loganalytics---",
                     "workspaces",
                     "---microsoftazure/rediscache---",
                     "redis",
                     "---microsoftazure/streamanalytics",
                     "streamjobs",
                     "---microsoftazure/dns--",
                     "zones",
                     "---microsoftazure/servicebus---",
                     "namespaces",
                     "---microsoftazure/machinelearningstudio---",
                     "webservices",
                     "---microsoftazure/databaseformariadb---",
                     "mariadbservers",
                     "mariadbdatabases",
                     "---microsoftazure/databaseforpostgresql---",
                     "postgresqlservers",
                     "postgresqldatabases",
                     "---microsoftazure/databaseformysql---",
                     "mysqlservers",
                     "mysqldatabases",
                     "mysqlbackups",
                     "---microsoftazure/classiccompute---",
                     "domaine_names",
                     "---googlecloud/compute---",
                     "instances",
                     "volumes",
                     "snapshots",
                     "instance_groups",
                     "images",
                     "---googlecloud/network---",
                     "vpcs",
                     "subnets",
                     "firewalls",
                     "ip_addresses",
                     "routes",
                     "---googlecloud/billing---",
                     "invoices",
                     "monthly_costs_by_service",
                     "last_day_costs",
                     "---googlecloud/sql---",
                     "sqlinstances",
                     "sqldatabases",
                     "---googlecloud/filestore---",
                     "instances",
                     "backups",
                     "---googlecloud/gke---",
                     "clusters",
                     "nodepools",
                     "operations",
                     "---googlecloud/elb---",
                     "global_backend_services",
                     "regional_backend_services",
                     "backend_buckets",
                     "global_url_maps",
                     "regional_url_maps",
                     "global_health_checks",
                     "regional_health_checks",
                     "---googlecloud/redis---",
                     "instances",
                     "---vsphere/resources---",
                     "datacenters",
                     "hosts",
                     "clusters",
                     "datastores",
                     "---vsphere/compute---",
                     "virtual_machines",
                     "disks",
                     "resource_pools",
                     "folders",
                     "templates",
                     "---vsphere/network---",
                     "networks",
                     "vswitchs",
                     "portgroups",
                     "---vcloud/resource---",
                     "resources",
                     "vdcs",
                     "catalogs",
                     "---vcloud/compute---",
                     "vapps",
                     "vms",
                     "volumes",
                     "templates",
                     "---vcloud/network---",
                     "networks",
                     "gateways",
                     "firewalls",
                     "nat_rules",
                     "affinity_rules",
                     "distributed_firewalls",
                     "---vcloud/storage---",
                     "storage_profiles",
                     "---openstack/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "floating_ips",
                     "---openstack/network---",
                     "networks",
                     "subnets",
                     "---ovh/compute---",
                     "instances",
                     "images",
                     "keypairs",
                     "---ovh/storage---",
                     "volumes",
                     "snapshots",
                     "backups",
                     "---ovh/network---",
                     "public_networks",
                     "private_networks",
                     "public_subnets",
                     "private_subnets",
                     "security_groups",
                     "vracks",
                     "---ovh/billing---",
                     "global_invoices",
                     "project_invoices",
                     "---ovh/project---",
                     "projects",
                     "---flexibleengine/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "floating_ips",
                     "load_balancers_classic",
                     "load_balancers_enhanced",
                     "---flexibleengine/network---",
                     "networks",
                     "subnets",
                     "---flexibleengine/billing---",
                     "invoices",
                     "---outscale/compute---",
                     "instances",
                     "catalogs",
                     "---outscale/image---",
                     "public_images",
                     "private_images",
                     "image_snapshots",
                     "---outscale/volume---",
                     "volumes",
                     "volume_snapshots",
                     "---outscale/network---",
                     "vpcs",
                     "subnets",
                     "internet_gateways",
                     "nat_gateways",
                     "security_groups",
                     "keypairs",
                     "public_ips",
                     "load_balancers",
                     "---outscale/usage---",
                     "consumption",
                     "quotas",
                     "tags",
                     "---oraclecloud/billing---",
                     "reports",
                     "usages",
                     "---aliyuncloud/ecs---",
                     "instances",
                     "---aliyuncloud/clb---",
                     "load_balancers",
                     "vserver_groups",
                     "available_resources",
                     "health_status",
                     "---aliyuncloud/alb---",
                     "load_balancers",
                     "server_groups",
                     "acls",
                     "health_check_templates",
                     "---aliyuncloud/oss---",
                     "buckets",
                     "---aliyuncloud/nas---",
                     "filesystems",
                     "---aliyuncloud/apsaradbrds---",
                     "instances",
                     "---aliyuncloud/apsaradbredis---",
                     "instances",
                     "---aliyuncloud/network---",
                     "vpcs",
                     "subnets",
                     "---aliyuncloud/ack---",
                     "clusters",
                     "nodes",
                     "node_pools",
                     "resources",
                     "---scaleway/dashboard---",
                     "dashboards",
                     "---scaleway/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "flexible_ips",
                     "---scaleway/storage---",
                     "buckets",
                     "---scaleway/database---",
                     "db_instances",
                     "db_snapshots",
                     "db_backups",
                     "---scaleway/vpc---",
                     "private_networks",
                     "public_gateways",
                     "gw_private_networks",
                     "gw_flexible_ips",
                     "---scaleway/network---",
                     "lbs",
                     "lb_reserved_ips",
                     "lb_frontends",
                     "lb_backends",
                     "lb_certificats_ssl"
                  ],
                  "in":"path",
                  "name":"resource",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "description":"inventory description",
                           "type":"string"
                        },
                        "filter":{
                           "description":"parameter to filter inventory",
                           "type":"object"
                        },
                        "name":{
                           "description":"inventory scheduler name",
                           "type":"string"
                        },
                        "scheduler":{
                           "description":"scheduler inventory",
                           "properties":{
                              "begin":{
                                 "description":"scheduler begin",
                                 "type":"string"
                              },
                              "day":{
                                 "description":"day cron syntax",
                                 "type":"string"
                              },
                              "end":{
                                 "description":"scheduler end",
                                 "type":"string"
                              },
                              "hour":{
                                 "description":"hour cron syntax",
                                 "type":"string"
                              },
                              "idle":{
                                 "description":"delay betwenn repetitions",
                                 "type":"string"
                              },
                              "minute":{
                                 "description":"minute cron syntax",
                                 "type":"string"
                              },
                              "month":{
                                 "description":"month cron syntax",
                                 "type":"string"
                              },
                              "repaet":{
                                 "description":"repetition number",
                                 "type":"string"
                              },
                              "time":{
                                 "description":"list of absolute or relative time YYYY-mm-dd HH:MM  rel+Nbr",
                                 "items":{
                                    "type":"string"
                                 },
                                 "type":"array"
                              },
                              "time_zone":{
                                 "description":"time zone",
                                 "type":"string"
                              },
                              "week":{
                                 "description":"week cron syntax",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "type":{
                           "description":"inventory scheduler type",
                           "type":"string"
                        }
                     },
                     "required":[
                        "name"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "202":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "uuid":{
                           "description":"inventory uuid",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Schedule a resource inventory",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/{provider}/{uuid}/inventory/supported_services":{
         "get":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "serviceName":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get provider's supported services for inventoring",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/provider/{provider}/{uuid}/inventory/{service}/{resource}":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"provider name",
                  "enum":[
                     "aws",
                     "microsoftazure",
                     "vsphere",
                     "vcloud",
                     "openstack",
                     "ovh",
                     "flexibleengine",
                     "googlecloud",
                     "outscale",
                     "oraclecloud",
                     "aliyuncloud",
                     "scaleway"
                  ],
                  "in":"path",
                  "name":"provider",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"cloud provider service",
                  "enum":[
                     "---aws---",
                     "ec2",
                     "vpc",
                     "autoscaling",
                     "rds",
                     "billing",
                     "iam",
                     "lambda",
                     "cloudfront",
                     "elasticache",
                     "ecr",
                     "ecs",
                     "s3",
                     "apigateway",
                     "dynamodb",
                     "efs",
                     "sqs",
                     "sns",
                     "acm",
                     "eks",
                     "quota",
                     "---microsoftazure---",
                     "resources",
                     "compute",
                     "network",
                     "storage",
                     "keyvault",
                     "appservice",
                     "cdn",
                     "sql",
                     "recoveryservices",
                     "quota",
                     "automation",
                     "logicapps",
                     "applicationinsights",
                     "loganalytics",
                     "rediscache",
                     "streamanalytics",
                     "dns",
                     "servicebus",
                     "machinelearningstudio",
                     "databaseformariadb",
                     "databaseforpostgresql",
                     "databaseformysql",
                     "classiccompute",
                     "---googlecloud---",
                     "compute",
                     "network",
                     "billing",
                     "sql",
                     "filestore",
                     "gke",
                     "elb",
                     "redis",
                     "---vsphere---",
                     "resources",
                     "compute",
                     "network",
                     "---vcloud---",
                     "resource",
                     "compute",
                     "network",
                     "storage",
                     "---openstack---",
                     "compute",
                     "network",
                     "---ovh---",
                     "compute",
                     "storage",
                     "network",
                     "billing",
                     "project",
                     "---flexibleengine---",
                     "compute",
                     "network",
                     "billing",
                     "---outscale---",
                     "compute",
                     "image",
                     "volume",
                     "network",
                     "usage",
                     "---oraclecloud---",
                     "billing",
                     "---aliyuncloud---",
                     "ecs",
                     "network",
                     "clb",
                     "alb",
                     "oss",
                     "nas",
                     "apsaradbrds",
                     "apsaradbredis",
                     "ack",
                     "---scaleway---",
                     "dashboard",
                     "compute",
                     "storage",
                     "database",
                     "vpc",
                     "network"
                  ],
                  "in":"path",
                  "name":"service",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"cloud provider resource",
                  "enum":[
                     "---aws/ec2---",
                     "instances",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "ip_addresses",
                     "placement_groups",
                     "network_interfaces",
                     "load_balancers",
                     "classic_load_balancers",
                     "ng_load_balancers",
                     "auto_scaling_groups",
                     "images",
                     "---aws/vpc---",
                     "vpcs",
                     "subnets",
                     "route_tables",
                     "internet_gateways",
                     "egress_only_internet_gateways",
                     "nat_gateways",
                     "customer_gateways",
                     "vpn_gateways",
                     "network_acls",
                     "---aws/autoscaling---",
                     "auto_scaling_groups",
                     "auto_scaling_instances",
                     "launch_configurations",
                     "---aws/rds---",
                     "db_clusters",
                     "db_instances",
                     "db_snapshots",
                     "---aws/billing---",
                     "budgets",
                     "cost_explorer",
                     "---aws/iam---",
                     "users",
                     "roles",
                     "---aws/lambda---",
                     "functions",
                     "---aws/cloudfront---",
                     "distributions",
                     "---aws/elasticache---",
                     "elastic_clusters",
                     "events",
                     "---aws/ecr---",
                     "repositories",
                     "images",
                     "---aws/ecs---",
                     "ecs_clusters",
                     "services",
                     "container_instances",
                     "---aws/s3---",
                     "buckets",
                     "---aws/apigateway---",
                     "apis",
                     "---aws/dynamodb---",
                     "tables",
                     "global_tables",
                     "---aws/efs---'",
                     "filesystems",
                     "---aws/sqs---",
                     "queues",
                     "---aws/sns---",
                     "subscriptions",
                     "topics",
                     "---aws/acm---",
                     "certificates",
                     "---aws/eks---",
                     "eks_clusters",
                     "nodegroups",
                     "fargate_profiles",
                     "---aws/quota---",
                     "supported_services",
                     "limits",
                     "---microsoftazure/resources---",
                     "resources",
                     "resource_groups",
                     "tags",
                     "---microsoftazure/compute---",
                     "virtual_machines",
                     "volumes",
                     "snapshots",
                     "images",
                     "virtual_machine_scale_sets",
                     "---microsoftazure/network---",
                     "virtual_networks",
                     "ip_addresses",
                     "network_security_groups",
                     "application_security_groups",
                     "network_interfaces",
                     "load_balancers",
                     "application_gateways",
                     "network_watchers",
                     "---microsoftazure/storage---",
                     "storage_accounts",
                     "containers",
                     "blobs",
                     "files",
                     "queues",
                     "tables",
                     "---microsoftazure/keyvault---",
                     "keyvaults",
                     "certificates",
                     "secrets",
                     "keys",
                     "---microsoftazure/recoveryservices---",
                     "vaults",
                     "backup_items",
                     "backup_jobs",
                     "recovery_points",
                     "---microsoftazure/appservice---",
                     "web_apps",
                     "app_service_plans",
                     "---microsoftazure/cdn---",
                     "profiles",
                     "---microsoftazure/sql---",
                     "servers",
                     "databases",
                     "elasticpools",
                     "---microsoftazure/quota---",
                     "compute",
                     "storage",
                     "network",
                     "---microsoftazure/automation---",
                     "accounts",
                     "runbooks",
                     "---microsoftazure/logicapps---",
                     "workflows",
                     "---microsoftazure/applicationinsights---",
                     "components",
                     "---microsoftazure/loganalytics---",
                     "workspaces",
                     "---microsoftazure/rediscache---",
                     "redis",
                     "---microsoftazure/streamanalytics",
                     "streamjobs",
                     "---microsoftazure/dns--",
                     "zones",
                     "---microsoftazure/servicebus---",
                     "namespaces",
                     "---microsoftazure/machinelearningstudio---",
                     "webservices",
                     "---microsoftazure/databaseformariadb---",
                     "mariadbservers",
                     "mariadbdatabases",
                     "---microsoftazure/databaseforpostgresql---",
                     "postgresqlservers",
                     "postgresqldatabases",
                     "---microsoftazure/databaseformysql---",
                     "mysqlservers",
                     "mysqldatabases",
                     "mysqlbackups",
                     "---microsoftazure/classiccompute---",
                     "domaine_names",
                     "---googlecloud/compute---",
                     "instances",
                     "volumes",
                     "snapshots",
                     "instance_groups",
                     "images",
                     "---googlecloud/network---",
                     "vpcs",
                     "subnets",
                     "firewalls",
                     "ip_addresses",
                     "routes",
                     "---googlecloud/billing---",
                     "invoices",
                     "monthly_costs_by_service",
                     "last_day_costs",
                     "---googlecloud/sql---",
                     "sqlinstances",
                     "sqldatabases",
                     "---googlecloud/filestore---",
                     "instances",
                     "backups",
                     "---googlecloud/gke---",
                     "clusters",
                     "nodepools",
                     "operations",
                     "---googlecloud/elb---",
                     "global_backend_services",
                     "regional_backend_services",
                     "backend_buckets",
                     "global_url_maps",
                     "regional_url_maps",
                     "global_health_checks",
                     "regional_health_checks",
                     "---googlecloud/redis---",
                     "instances",
                     "---vsphere/resources---",
                     "datacenters",
                     "hosts",
                     "clusters",
                     "datastores",
                     "---vsphere/compute---",
                     "virtual_machines",
                     "disks",
                     "resource_pools",
                     "folders",
                     "templates",
                     "---vsphere/network---",
                     "networks",
                     "vswitchs",
                     "portgroups",
                     "---vcloud/resource---",
                     "resources",
                     "vdcs",
                     "catalogs",
                     "---vcloud/compute---",
                     "vapps",
                     "vms",
                     "volumes",
                     "templates",
                     "---vcloud/network---",
                     "networks",
                     "gateways",
                     "firewalls",
                     "nat_rules",
                     "affinity_rules",
                     "distributed_firewalls",
                     "---vcloud/storage---",
                     "storage_profiles",
                     "---openstack/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "floating_ips",
                     "---openstack/network---",
                     "networks",
                     "subnets",
                     "---ovh/compute---",
                     "instances",
                     "images",
                     "keypairs",
                     "---ovh/storage---",
                     "volumes",
                     "snapshots",
                     "backups",
                     "---ovh/network---",
                     "public_networks",
                     "private_networks",
                     "public_subnets",
                     "private_subnets",
                     "security_groups",
                     "vracks",
                     "---ovh/billing---",
                     "global_invoices",
                     "project_invoices",
                     "---ovh/project---",
                     "projects",
                     "---flexibleengine/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "floating_ips",
                     "load_balancers_classic",
                     "load_balancers_enhanced",
                     "---flexibleengine/network---",
                     "networks",
                     "subnets",
                     "---flexibleengine/billing---",
                     "invoices",
                     "---outscale/compute---",
                     "instances",
                     "catalogs",
                     "---outscale/image---",
                     "public_images",
                     "private_images",
                     "image_snapshots",
                     "---outscale/volume---",
                     "volumes",
                     "volume_snapshots",
                     "---outscale/network---",
                     "vpcs",
                     "subnets",
                     "internet_gateways",
                     "nat_gateways",
                     "security_groups",
                     "keypairs",
                     "public_ips",
                     "load_balancers",
                     "---outscale/usage---",
                     "consumption",
                     "quotas",
                     "tags",
                     "---oraclecloud/billing---",
                     "reports",
                     "usages",
                     "---aliyuncloud/ecs---",
                     "instances",
                     "---aliyuncloud/clb---",
                     "load_balancers",
                     "vserver_groups",
                     "available_resources",
                     "health_status",
                     "---aliyuncloud/alb---",
                     "load_balancers",
                     "server_groups",
                     "acls",
                     "health_check_templates",
                     "---aliyuncloud/oss---",
                     "buckets",
                     "---aliyuncloud/nas---",
                     "filesystems",
                     "---aliyuncloud/apsaradbrds---",
                     "instances",
                     "---aliyuncloud/apsaradbredis---",
                     "instances",
                     "---aliyuncloud/network---",
                     "vpcs",
                     "subnets",
                     "---aliyuncloud/ack---",
                     "clusters",
                     "nodes",
                     "node_pools",
                     "resources",
                     "---scaleway/dashboard---",
                     "dashboards",
                     "---scaleway/compute---",
                     "instances",
                     "images",
                     "volumes",
                     "snapshots",
                     "keypairs",
                     "security_groups",
                     "flexible_ips",
                     "---scaleway/storage---",
                     "buckets",
                     "---scaleway/database---",
                     "db_instances",
                     "db_snapshots",
                     "db_backups",
                     "---scaleway/vpc---",
                     "private_networks",
                     "public_gateways",
                     "gw_private_networks",
                     "gw_flexible_ips",
                     "---scaleway/network---",
                     "lbs",
                     "lb_reserved_ips",
                     "lb_frontends",
                     "lb_backends",
                     "lb_certificats_ssl"
                  ],
                  "in":"path",
                  "name":"resource",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "resourceName":{
                           "items":{
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get provider's resource inventory",
            "tags":[
               "provider/inventory"
            ]
         }
      },
      "/v2.0/saas":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "saas":{
                                    "type":"string"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all saas's subscriptions.",
            "tags":[
               "saas/subscription"
            ]
         },
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "enum":[
                     "describeSubscriptions"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "filters":{
                           "items":{
                              "properties":{
                                 "name":{
                                    "type":"string"
                                 },
                                 "values":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "products":{
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "default_region":{
                                    "type":"string"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "enabled":{
                                    "type":"boolean"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "product_account_id":{
                                    "type":"string"
                                 },
                                 "region":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 },
                                 "saas":{
                                    "type":"string"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List saas's subscriptions with filters.",
            "tags":[
               "saas/subscription"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/account/licenses":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"include product name",
                  "in":"query",
                  "name":"friendly_name",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get account licenses.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/account/organizations":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get account organization.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/account/subscribedProducts":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"include product name",
                  "in":"query",
                  "name":"friendly_name",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"select",
                  "in":"query",
                  "name":"select",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get account subscribed products.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/account/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get account subscriptions.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/domains":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"filters",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"search",
                  "in":"query",
                  "name":"search",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"expand",
                  "in":"query",
                  "name":"expand",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"select",
                  "in":"query",
                  "name":"select",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List domains.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "id":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create domain.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/domains/{domain_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"domain id",
                  "in":"path",
                  "name":"domain_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete domain.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"domain id",
                  "in":"path",
                  "name":"domain_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "isDefault":{
                           "type":"boolean"
                        },
                        "supportedServices":{
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update domain.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/groups":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"filters",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"search",
                  "in":"query",
                  "name":"search",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"expand",
                  "in":"query",
                  "name":"expand",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"select",
                  "in":"query",
                  "name":"select",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List groups.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "description":{
                           "type":"string"
                        },
                        "displayName":{
                           "type":"string"
                        },
                        "groupTypes":{
                           "type":"array"
                        },
                        "mailEnabled":{
                           "type":"boolean"
                        },
                        "mailNickname":{
                           "type":"string"
                        },
                        "securityEnabled":{
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create group.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/groups/counts":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Count groups.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/groups/deleted":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List deleted groups.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/groups/{group_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"group id",
                  "in":"path",
                  "name":"group_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete group.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"group_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "$ref":"https://docs.microsoft.com/en-us/graph/api/group-update?view=graph-rest-1.0&tabs=http",
                     "properties":{
                        "allowExternalSenders":{
                           "type":"boolean"
                        },
                        "autoSubscribeNewMembers":{
                           "type":"boolean"
                        },
                        "description":{
                           "type":"string"
                        },
                        "displayName":{
                           "type":"string"
                        },
                        "mailEnabled":{
                           "type":"boolean"
                        },
                        "mailNickname":{
                           "type":"string"
                        },
                        "preferredDataLocation":{
                           "type":"string"
                        },
                        "securityEnabled":{
                           "type":"boolean"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update group.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"group id",
                  "in":"path",
                  "name":"group_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "enum":[
                     "assign_license",
                     "remove_license",
                     "add_member",
                     "remove_member"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "schema":{
                     "properties":{
                        "licences":{
                           "description":"list of licenses, required if action is assign_license or remove_license",
                           "type":"array"
                        },
                        "member":{
                           "decription":"member ids to add or to remove, if action is remove_member only one element is accepted",
                           "type":"string | array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform actions on group.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/groups/{group_id}/licenses":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"group id",
                  "in":"path",
                  "name":"group_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get group licenses.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/reports":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"specifies the length of time over which the report is aggregated",
                  "enum":[
                     "D7",
                     "D30",
                     "D90",
                     "D180"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"specifies the date for which you would like to view the users who performed any activity",
                  "in":"query",
                  "name":"date",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"the target report",
                  "enum":[
                     "---User Activation Reports---",
                     "Office365ActivationsUserDetail",
                     "Office365ActivationCounts",
                     "Office365ActivationsUserCounts",
                     "---Active User Reports---",
                     "Office365ActiveUserDetail",
                     "Office365ActiveUserCounts",
                     "Office365ServicesUserCounts",
                     "---Apps Usage Reports---",
                     "M365AppUserDetail",
                     "M365AppUserCounts",
                     "M365AppPlatformUserCounts",
                     "---Audit Reports---",
                     "DirectoryAudits",
                     "SignInsAudits",
                     "ProvisioningAudits",
                     "---Onedrive User Activity Reports---",
                     "OneDriveActivityUserDetail",
                     "OneDriveActivityUserCounts",
                     "---Yammer User Activity Reports---",
                     "YammerActivityUserDetail",
                     "YammerActivityCounts",
                     "---SkypeForBusiness User Activity Reports---",
                     "SkypeForBusinessActivityUserDetail",
                     "SkypeForBusinessActivityUserCounts",
                     "---Teams User Activity Reports---",
                     "TeamsUserActivityUserDetail",
                     "TeamsUserActivityUserCounts",
                     "TeamsUserActivityCounts",
                     "---Outlook User Activity Reports---",
                     "EmailActivityUserDetail",
                     "EmailActivityCounts",
                     "EmailActivityUserCounts",
                     "---OneDrive User Usage Reports---",
                     "OneDriveUsageAccountDetail",
                     "OneDriveUsageAccountCounts",
                     "OneDriveUsageStorage",
                     "---Yammer User Usage Reports---",
                     "YammerDeviceUsageUserDetail",
                     "YammerDeviceUsageUserCounts",
                     "YammerDeviceUsageDistributionUserCounts",
                     "---SkypeForBusiness User Usage Reports---",
                     "SkypeForBusinessDeviceUsageUserDetail",
                     "SkypeForBusinessDeviceUsageUserCounts",
                     "SkypeForBusinessDeviceUsageDistributionUserCounts",
                     "---Outlook Apps User Usage Reports---",
                     "EmailAppUsageUserDetail",
                     "EmailAppUsageAppsUserCounts",
                     "EmailAppUsageUserCounts",
                     "EmailAppUsageVersionsUserCounts",
                     "---Outlook Mailbox User Usage Reports---",
                     "MailboxUsageDetail",
                     "MailboxUsageMailboxCounts",
                     "MailboxUsageQuotaStatusMailboxCounts",
                     "MailboxUsageStorage"
                  ],
                  "in":"query",
                  "name":"target",
                  "required":true
               },
               {
                  "description":"data format",
                  "enum":[
                     "csv",
                     "json"
                  ],
                  "in":"query",
                  "name":"format",
                  "required":false,
                  "type":"string"
               },
               {
                  "default":false,
                  "description":"return a download URL for the report, valid only if format is csv",
                  "download_url":null,
                  "in":"query",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"filters, valid only for audit reports",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get reports.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List users.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "accountEnabled":{
                           "type":"boolean"
                        },
                        "displayName":{
                           "type":"string"
                        },
                        "mailNickname":{
                           "type":"string"
                        },
                        "passwordProfile":{
                           "properties":{
                              "forceChangePasswordNextSignIn":{
                                 "type":"boolean"
                              },
                              "password":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "userPrincipalName":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create user.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/counts":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Count users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/deleted":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List deleted users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/globalAdministrator":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List global administrator users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/guest":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List gest users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/licensed":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List licensed users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/local":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List local users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/managed":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List managed users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/mfa":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"MFA is registred",
                  "in":"query",
                  "name":"isregistred",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "default":true,
                  "description":"MFA is enabled",
                  "in":"query",
                  "name":"isenabled",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List users with or without MFA.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/synced":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List onpermises synced users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/unlicensed":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List unlicensed users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/unmanaged":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List unmanaged users.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/{user_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete user.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":true,
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get user.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "accountEnabled":{
                           "type":"boolean"
                        },
                        "displayName":{
                           "type":"string"
                        },
                        "mailNickname":{
                           "type":"string"
                        },
                        "passwordProfile":{
                           "properties":{
                              "forceChangePasswordNextSignIn":{
                                 "type":"boolean"
                              },
                              "password":{
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "userPrincipalName":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update user.",
            "tags":[
               "saas/microsoft365"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "enum":[
                     "assign_license",
                     "remove_license",
                     "block",
                     "unblock",
                     "install_teams_application",
                     "remove_teams_application",
                     "change_user_password"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "schema":{
                     "properties":{
                        "licences":{
                           "description":"list of licenses, required if action is assign_license or remove_license",
                           "type":"array"
                        },
                        "teams_application_id":{
                           "description":"teams application id required if action is install_teams_application or remove_teams_application",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Perform actions on user.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/{user_id}/licenses":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get user licenses.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/{user_id}/manager":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get user manager.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoft365/{uuid}/users/{user_id}/teamwork/installedApps":{
         "get":{
            "parameters":[
               {
                  "description":"microsoft365 tenant uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"filters",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"expand",
                  "in":"query",
                  "name":"expand",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"select",
                  "in":"query",
                  "name":"select",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get user teamwork application.",
            "tags":[
               "saas/microsoft365"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/analytics/azure/usage":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the time range for which to retrieve aggregate data. Supported with groupby.",
                  "enum":[
                     "day",
                     "week",
                     "month"
                  ],
                  "in":"query",
                  "name":"aggregation",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"A statement that applies data aggregation only to the specified fields.",
                  "enum":[
                     "customerTenantId",
                     "customerName",
                     "subscriptionId",
                     "subscriptionName",
                     "usageDate",
                     "resourceLocation",
                     "meterCategory",
                     "meterSubcategory",
                     "meterUnit",
                     "reservationOrderId",
                     "reservationId",
                     "onsumptionMeterId",
                     "serviceType"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"A statement that orders the result data values for each install.",
                  "enum":[
                     "customerTenantId",
                     "customerName",
                     "subscriptionId",
                     "subscriptionName",
                     "usageDate",
                     "resourceLocation",
                     "meterCategory",
                     "meterSubcategory",
                     "meterUnit",
                     "reservationOrderId",
                     "reservationId",
                     "onsumptionMeterId",
                     "serviceType"
                  ],
                  "in":"query",
                  "name":"orderby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The filter parameter of the request contains one or more statements that filter the rows in the response.",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows of data to return in the request. Max 10000",
                  "in":"query",
                  "name":"top",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows to skip in the query. For example, top=10000 and skip=0 retrieves the first 10000 rows of data, top=10000 and skip=10000 retrieves the next 10000 rows of data",
                  "in":"query",
                  "name":"skip",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve Azure usage analytics information.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/analytics/licenses/deployment":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"If customer id, other choises are not available.",
                  "in":"query",
                  "name":"customer_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"A statement that applies data aggregation only to the specified fields.",
                  "enum":[
                     "serviceCode",
                     "serviceName",
                     "channel",
                     "customerTenantId",
                     "customerName",
                     "productId",
                     "productName"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"One can specify the date from which usage data was processed. '2018-10-14T00:00:00'",
                  "in":"query",
                  "name":"processedDateTime",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The filter parameter of the request contains one or more statements that filter the rows in the response.",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows of data to return in the request. Max 10000",
                  "in":"query",
                  "name":"top",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows to skip in the query. For example, top=10000 and skip=0 retrieves the first 10000 rows of data, top=10000 and skip=10000 retrieves the next 10000 rows of data",
                  "in":"query",
                  "name":"skip",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve licences deployment information.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/analytics/licenses/usage":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"If customer id, other choises are not available.",
                  "in":"query",
                  "name":"customer_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"A statement that applies data aggregation only to the specified fields.",
                  "enum":[
                     "workloadCode",
                     "workloadName",
                     "serviceCode",
                     "serviceName",
                     "channelcustomerTenantId",
                     "customerName",
                     "productId",
                     "productName"
                  ],
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"One can specify the date from which usage data was processed. '2018-10-14T00:00:00'",
                  "in":"query",
                  "name":"processedDateTime",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The filter parameter of the request contains one or more statements that filter the rows in the response.",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows of data to return in the request. Max 10000",
                  "in":"query",
                  "name":"top",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows to skip in the query. For example, top=10000 and skip=0 retrieves the first 10000 rows of data, top=10000 and skip=10000 retrieves the next 10000 rows of data",
                  "in":"query",
                  "name":"skip",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve licences usage information.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/analytics/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Specifies the time range for which to retrieve aggregate data. Supported with groupby.",
                  "enum":[
                     "day",
                     "week",
                     "month"
                  ],
                  "in":"query",
                  "name":"aggregation",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"A statement that applies data aggregation only to the specified fields.",
                  "in":"query",
                  "name":"groupby",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"One or more statements that filter the rows in the response.",
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows of data to return in the request. Max 10000",
                  "in":"query",
                  "name":"top",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The number of rows to skip in the query. For example, top=10000 and skip=0 retrieves the first 10000 rows of data, top=10000 and skip=10000 retrieves the next 10000 rows of data",
                  "in":"query",
                  "name":"skip",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve all subscription analytics information.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/azure/budget":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer usage budget.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/azure/usage/records":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer usage records.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/azure/usage/summary":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer usage summary.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/subscriptions/usage/records":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer subscription usage records.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/subscriptions/{subscription_id}/usage":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the subscription.",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The start of the time range that represents when the utilization was reported in the billing system. '2022-02-22T00:00:00'",
                  "in":"query",
                  "name":"start_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The end of the time range that represents when the utilization was reported in the billing system. '2022-02-22T00:00:00'",
                  "in":"query",
                  "name":"end_date",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Defines the granularity of usage aggregations.",
                  "enum":[
                     "daily",
                     "hourly"
                  ],
                  "in":"query",
                  "name":"granularity",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"Specifies the number of aggregations returned by a single API call. The default is 1000. The max is 1000.",
                  "in":"query",
                  "name":"size",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer subscription usage.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/customers/{customer_id}/subscriptions/{subscription_id}/usage/records":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the customer.",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"A GUID-formatted string that identifies the subscription.",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subscription type. [azure_paln]",
                  "in":"query",
                  "name":"subscription_type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of azure customer subscription records.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer tenant id",
                  "in":"query",
                  "name":"customer_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve azure subscriptions.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/azure/usage/summary":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve azure partner usage summary.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/billing/azure/cost/analysis":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "description":"Provider uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "aggregation":{
                           "description":"data aggregation",
                           "enum":[
                              "PreTaxCost",
                              "Cost",
                              "CostUSD",
                              "PreTaxCostUSD"
                           ],
                           "type":"string"
                        },
                        "billing_account_name":{
                           "description":"filter by  Billing account name",
                           "type":"string"
                        },
                        "billing_period_type":{
                           "description":"valid values  invoice | billing_period | custom",
                           "enum":[
                              "invoice",
                              "billing_period",
                              "custom"
                           ],
                           "type":"string"
                        },
                        "charge_type":{
                           "description":"filter by charge type, reservation purchases and refunds are available only when using actual costs and not when using amortized costs. Unused reservation costs are available only when looking at amortized costs",
                           "items":{
                              "enum":[
                                 "purchase",
                                 "usage",
                                 "unusedreservation",
                                 "refund"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "customer_name":{
                           "description":"the customer name, this option is available only for CSP accounts",
                           "type":"string"
                        },
                        "end_date":{
                           "description":"end_date (ex. 2019-06-24T00:00:00)",
                           "type":"string"
                        },
                        "expand":{
                           "description":"filter by expand",
                           "type":"string"
                        },
                        "filters":{
                           "description":"the filter expression to be used",
                           "oneOf":[
                              {
                                 "type":"string"
                              },
                              {
                                 "type":"object"
                              }
                           ]
                        },
                        "granularity":{
                           "description":"the granularity of consumptions, valid values are Daily | Monthly",
                           "enum":[
                              "Daily",
                              "Monthly"
                           ],
                           "type":"string"
                        },
                        "groupby":{
                           "description":"group cost by category",
                           "oneOf":[
                              {
                                 "enum":[
                                    "resource_group",
                                    "service",
                                    "resource_type",
                                    "location",
                                    "resource_id",
                                    "resource_guid",
                                    "invoice_id",
                                    "invoice_section_id",
                                    "customer_domain_name",
                                    "subscription",
                                    "customer",
                                    "charge_type",
                                    "reservation_id",
                                    "reservation_name",
                                    "pricing_model",
                                    "product",
                                    "provider",
                                    "meter",
                                    "publisher_type"
                                 ],
                                 "type":"string"
                              },
                              {
                                 "type":"object"
                              }
                           ]
                        },
                        "metric":{
                           "description":"metric usage",
                           "enum":[
                              "ActualCost",
                              "AmortizedCost",
                              "Usage"
                           ],
                           "type":"string"
                        },
                        "only_cost":{
                           "description":"filter by  only cost",
                           "type":"boolean"
                        },
                        "pricing_model":{
                           "description":"filter by pricing model",
                           "items":{
                              "enum":[
                                 "ondemand",
                                 "reservation",
                                 "spot"
                              ],
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "reservation_id":{
                           "description":"filter by reservation id",
                           "type":"string"
                        },
                        "resource_group":{
                           "description":"filter by resource group name",
                           "type":"string"
                        },
                        "resource_id":{
                           "description":"filter by resource id",
                           "type":"string"
                        },
                        "scope":{
                           "description":"scope of the query, This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope",
                           "type":"string"
                        },
                        "service":{
                           "description":"filter by  service virtual machines | virtual network | storage",
                           "type":"string"
                        },
                        "start_date":{
                           "description":"start date (ex. 2019-06-14T00:00:00)",
                           "type":"string"
                        },
                        "subscription_ids":{
                           "description":"the subscriptions ids to filter",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "subscription_names":{
                           "description":"the subscriptions names to filter",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "tags":{
                           "description":"filter by tag keys",
                           "items":{
                              "type":"string"
                           },
                           "type":"array"
                        },
                        "timeframe":{
                           "description":"The time frame for pulling data consumptions, valid values are BillingMonthToDate | Custom | MonthToDate | BillingMonthToDate | TheLastBillingMonth | TheLastMonth | WeekToDate.If custom start_date and end_date must be provided",
                           "enum":[
                              "Custom",
                              "MonthToDate",
                              "TheLastBillingMonth",
                              "TheLastMonth",
                              "WeekToDate",
                              "BillingMonthToDate"
                           ],
                           "type":"string"
                        },
                        "untagged_resources":{
                           "description":"filter to get cost for only untagged resources",
                           "type":"boolean"
                        }
                     },
                     "required":[
                        "metric",
                        "start_date",
                        "end_date"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve azure cost analysis.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/billing/azure/customers":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer billing account name",
                  "in":"query",
                  "name":"billing_account_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The customer name",
                  "in":"query",
                  "name":"customer_name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve azure billing customers.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/billing/azure/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer billing account name",
                  "in":"query",
                  "name":"billing_account_name",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The customer name",
                  "in":"query",
                  "name":"customer_name",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve azure billing subscriptions.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/current_balance":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of ccurrent balance.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customers.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/azure/budget":{
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Amount",
                  "in":"query",
                  "name":"amount",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Setup a customer azure usage budget.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/licenses":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customer licenses.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/offers":{
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "billing_cycle":{
                           "description":"Billing cycle",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        },
                        "currency":{
                           "description":"Currency, EUR, US,",
                           "type":"string"
                        },
                        "offers":{
                           "description":"Offers",
                           "items":{
                              "properties":{
                                 "id":{
                                    "description":"Offer id",
                                    "type":"string"
                                 },
                                 "quantity":{
                                    "description":"Quantity",
                                    "type":"integer"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Purchase customer subscription offers.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/orders":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customer orders.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/products":{
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "billing_cycle":{
                           "description":"Billing cycle",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        },
                        "currency":{
                           "description":"Currency, EUR, US,",
                           "type":"string"
                        },
                        "products":{
                           "description":"Products",
                           "items":{
                              "properties":{
                                 "addons":{
                                    "description":"Addons",
                                    "items":{
                                       "properties":{
                                          "id":{
                                             "description":"Offer id",
                                             "type":"string"
                                          },
                                          "quantity":{
                                             "description":"Quantity",
                                             "type":"integer"
                                          }
                                       },
                                       "type":"object"
                                    },
                                    "type":"array"
                                 },
                                 "billing_cycle":{
                                    "description":"Billing cycle",
                                    "type":"string"
                                 },
                                 "currency":{
                                    "description":"Currency",
                                    "type":"string"
                                 },
                                 "id":{
                                    "description":"Offer id",
                                    "type":"string"
                                 },
                                 "provisioning_context":{
                                    "description":"Provisioning context",
                                    "type":"string"
                                 },
                                 "quantity":{
                                    "description":"Quantity",
                                    "type":"integer"
                                 },
                                 "renews_to":{
                                    "description":"Renews to",
                                    "type":"string"
                                 },
                                 "term_duration":{
                                    "description":"Term duration",
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Purchase customer subscription products.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "put":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "billing_cycle":{
                           "description":"Billing cycle",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        },
                        "currency":{
                           "description":"Currency, EUR, US,",
                           "type":"string"
                        },
                        "products":{
                           "description":"Products",
                           "items":{
                              "properties":{
                                 "billing_cycle":{
                                    "description":"Billing cycle",
                                    "type":"string"
                                 },
                                 "currency":{
                                    "description":"Currency",
                                    "type":"string"
                                 },
                                 "id":{
                                    "description":"Offer id",
                                    "type":"string"
                                 },
                                 "provisioning_context":{
                                    "description":"Provisioning context",
                                    "type":"string"
                                 },
                                 "quantity":{
                                    "description":"Quantity",
                                    "type":"integer"
                                 },
                                 "renews_to":{
                                    "description":"Renews to",
                                    "type":"string"
                                 },
                                 "term_duration":{
                                    "description":"Term duration",
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update customer subscription products.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/servicecosts":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "default":"mostrecent",
                  "description":"The billing period",
                  "enum":[
                     "mostrecent"
                  ],
                  "in":"query",
                  "name":"billing_period",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve customer service costs.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/subscriptions":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customer subscriptions.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/subscriptions/{subscription_id}":{
         "patch":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The subscription id",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "billing_cycle":{
                           "description":"Billing cycle",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        },
                        "friendly_name":{
                           "description":"Friendly name",
                           "type":"string"
                        },
                        "quantity":{
                           "description":"Quantity",
                           "type":"integer"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update customer subscription.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "post":{
            "description":" ",
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Subscription id",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Actions suspend, enable, cancel",
                  "enum":[
                     "suspend",
                     "enable",
                     "cancel"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Type",
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Suspend, cancel or enable the subscription for the customer.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/subscriptions/{subscription_id}/addons":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The subscription id",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customer subscription addons.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The subscription id",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "addons":{
                           "description":"Addons",
                           "items":{
                              "properties":{
                                 "id":{
                                    "description":"Offer id",
                                    "type":"string"
                                 },
                                 "quantity":{
                                    "description":"Quantity",
                                    "type":"integer"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "billing_cycle":{
                           "description":"metric usage",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update customer subscription addons.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/subscriptions/{subscription_id}/orders/{order_id}":{
         "patch":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The subscription id",
                  "in":"path",
                  "name":"subscription_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The order id",
                  "in":"path",
                  "name":"order_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "billing_cycle":{
                           "description":"Billing cycle",
                           "enum":[
                              "Monthly",
                              "Annual",
                              "OneTime",
                              "Triennial",
                              "Unknown",
                              "None"
                           ],
                           "type":"string"
                        },
                        "products":{
                           "description":"Products",
                           "items":{
                              "properties":{
                                 "id":{
                                    "description":"Offer id",
                                    "type":"string"
                                 },
                                 "quantity":{
                                    "description":"Quantity",
                                    "type":"integer"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update customer subscription order.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/users":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Details",
                  "in":"query",
                  "name":"details",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"To filter between member and guest users",
                  "enum":[
                     "guest",
                     "member"
                  ],
                  "in":"query",
                  "name":"user_type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"To select only licensed or unlicensed users",
                  "in":"query",
                  "name":"licensed",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of customer users.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "attributes":{
                           "description":"Attributes",
                           "properties":{
                              "objectType":{
                                 "description":"object type, CustomerUser",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "display_name":{
                           "description":"Display name",
                           "type":"string"
                        },
                        "first_name":{
                           "description":"First name",
                           "type":"string"
                        },
                        "force_change_password":{
                           "description":"Force change password",
                           "type":"boolean"
                        },
                        "last_name":{
                           "description":"Last name",
                           "type":"string"
                        },
                        "location":{
                           "description":"Location 'country/region' code 'FR'",
                           "type":"string"
                        },
                        "password":{
                           "description":"Password",
                           "type":"string"
                        },
                        "principal_name":{
                           "description":"Principal name userid@domain.onmicrosoft.com",
                           "type":"string"
                        }
                     },
                     "required":[
                        "first_name",
                        "last_name",
                        "principal_name",
                        "password"
                     ],
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create customer user account.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/users/{user_id}":{
         "delete":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"User id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete customer user account.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a customer user.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "patch":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"User id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "attributes":{
                           "description":"Attributes",
                           "properties":{
                              "objectType":{
                                 "description":"object type, CustomerUser",
                                 "type":"string"
                              }
                           },
                           "type":"object"
                        },
                        "display_name":{
                           "description":"Display name",
                           "type":"string"
                        },
                        "first_name":{
                           "description":"First name",
                           "type":"string"
                        },
                        "force_change_password":{
                           "description":"Force change password",
                           "type":"boolean"
                        },
                        "last_name":{
                           "description":"Last name",
                           "type":"string"
                        },
                        "location":{
                           "description":"Location 'country/region' code 'FR'",
                           "type":"string"
                        },
                        "password":{
                           "description":"Password",
                           "type":"string"
                        },
                        "principal_name":{
                           "description":"Principal name userid@domain.onmicrosoft.com",
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update customer user account.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"User id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action block, unblock, reset password",
                  "enum":[
                     "block",
                     "unblock",
                     "reset_password"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"New password",
                  "in":"query",
                  "name":"new_password",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Block/unblock or reset password for customer user account.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/users/{user_id}/licenses":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The user id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve the user licenses.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/customers/{customer_id}/users/{user_id}/skus":{
         "post":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"path",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"User id",
                  "in":"path",
                  "name":"user_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"sku id",
                  "in":"query",
                  "name":"sku_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Action assign, remove",
                  "enum":[
                     "assign",
                     "remove"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Exclude plans",
                  "in":"query",
                  "name":"exclude_plans",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Assign/Remove a license for customer user account.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/estimates/currentinvoice":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Currency. ex EUR",
                  "in":"query",
                  "name":"currency",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve current invoice links.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/invoices":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The invoice id.",
                  "in":"query",
                  "name":"invoice_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The invoice list size.",
                  "in":"query",
                  "name":"size",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The invoice list offset.",
                  "in":"query",
                  "name":"offset",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve invoices.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/invoices/unbilled/lineitems":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Currency. ex EUR",
                  "in":"query",
                  "name":"currency",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Period",
                  "enum":[
                     "current",
                     "previous"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The type of invoice",
                  "enum":[
                     "BillingLineItems"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The billing provider",
                  "enum":[
                     "OneTime"
                  ],
                  "in":"query",
                  "name":"provider",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The maximum number of items to return. Default max size 2000",
                  "in":"query",
                  "name":"size",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"If billing-provider equals OneTime, set seekOperation equal to Next to get the next page of invoice line items.",
                  "in":"query",
                  "name":"seek",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Token",
                  "in":"query",
                  "name":"token",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The value indicating if to return the line items with partner earned credit applied.",
                  "in":"query",
                  "name":"has_partner_earned_credit",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve current invoice items.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/invoices/{invoice_id}":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice id",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice id",
                  "enum":[
                     "pdf"
                  ],
                  "in":"path",
                  "name":"format",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an invoice",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/invoices/{invoice_id}/lineitems":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Invoice id",
                  "in":"path",
                  "name":"invoice_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Currency. ex EUR",
                  "in":"query",
                  "name":"currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Period",
                  "enum":[
                     "current",
                     "previous"
                  ],
                  "in":"query",
                  "name":"period",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The type of invoice",
                  "enum":[
                     "BillingLineItems",
                     "UsageLineItems"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The billing provider",
                  "enum":[
                     "Office",
                     "Azure",
                     "OneTime"
                  ],
                  "in":"query",
                  "name":"provider",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The maximum number of items to return. Default max size 2000",
                  "in":"query",
                  "name":"size",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"If billing-provider equals OneTime, set seekOperation equal to Next to get the next page of invoice line items.",
                  "in":"query",
                  "name":"seek",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Token",
                  "in":"query",
                  "name":"token",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The value indicating if to return the line items with partner earned credit applied. This parameter will be only applied when billing provider type is OneTime and InvoiceLineItemType is UsageLineItems.",
                  "in":"query",
                  "name":"has_partner_earned_credit",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve an invoice details.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/offer_categories":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The cultures and International Standards Organization (ISO) country code for example FR for France.",
                  "in":"query",
                  "name":"country_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of offer categories.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/offers":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The cultures and International Standards Organization (ISO) country code for example FR for France.",
                  "in":"query",
                  "name":"country_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of offers.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/prices":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Two letter country code for the market being requested, FR, US, ...",
                  "in":"query",
                  "name":"market",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The type of price sheet being requested",
                  "enum":[
                     "azure_consumption",
                     "azure_reservations",
                     "updatedlicensebased"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Only required if history is requested, must adhere to YYYYMM for the price sheet being requested.",
                  "in":"query",
                  "name":"month",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Defaults to current if not passed.",
                  "enum":[
                     "history",
                     "current",
                     "future"
                  ],
                  "in":"query",
                  "name":"time_line",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve products prices.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/products":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The cultures and International Standards Organization (ISO) country code for example FR for France.",
                  "in":"query",
                  "name":"country_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The catalog view being requested.",
                  "enum":[
                     "Azure",
                     "AzureReservations",
                     "AzureReservationsVM",
                     "AzureReservationsSQL",
                     "AzureReservationsCosmosDb",
                     "MicrosoftAzure",
                     "OnlineServices",
                     "Software",
                     "SoftwareSUSELinux",
                     "SoftwarePerpetual",
                     "SoftwareSubscriptions"
                  ],
                  "in":"query",
                  "name":"target",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"The optional segment filter.",
                  "enum":[
                     "commercial",
                     "education",
                     "government",
                     "nonprofit"
                  ],
                  "in":"query",
                  "name":"segment",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"All skus",
                  "in":"query",
                  "name":"all_skus",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "description":"The customer id.",
                  "in":"query",
                  "name":"customer_id",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"Type",
                  "enum":[
                     "promotion"
                  ],
                  "in":"query",
                  "name":"type",
                  "required":false,
                  "type":"string"
               },
               {
                  "description":"The product identifier.",
                  "in":"query",
                  "name":"product_id",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of products.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/microsoftpartnercenter/{uuid}/products/skus":{
         "get":{
            "parameters":[
               {
                  "description":"saas uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Customer id",
                  "in":"query",
                  "name":"customer_id",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"Product id",
                  "in":"query",
                  "name":"product_id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response"
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Retrieve a list of products skus.",
            "tags":[
               "saas/microsoftpartnercenter"
            ]
         }
      },
      "/v2.0/saas/{product}":{
         "get":{
            "parameters":[
               {
                  "description":"saas product name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "product":{
                                    "type":"string"
                                 },
                                 "product_account_id":{
                                    "type":"string"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all saas product subscriptions.",
            "tags":[
               "saas/subscription"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"saas name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "enum":[
                     "describeSubscriptions"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":false,
                  "schema":{
                     "properties":{
                        "filters":{
                           "items":{
                              "properties":{
                                 "name":{
                                    "type":"string"
                                 },
                                 "values":{
                                    "items":{
                                       "type":"string"
                                    },
                                    "type":"array"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "max_results":{
                           "type":"integer"
                        },
                        "next_token":{
                           "type":"integer"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "next_token":{
                           "type":"string"
                        },
                        "subscriptions":{
                           "items":{
                              "properties":{
                                 "account":{
                                    "type":"string"
                                 },
                                 "created":{
                                    "type":"string"
                                 },
                                 "credentials":{
                                    "type":"object"
                                 },
                                 "description":{
                                    "type":"string"
                                 },
                                 "label":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "product":{
                                    "type":"string"
                                 },
                                 "product_account_id":{
                                    "type":"string"
                                 },
                                 "updated":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List saas subscriptions with filters.",
            "tags":[
               "saas/subscription"
            ]
         }
      },
      "/v2.0/saas/{product}/subscription":{
         "post":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"product name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "account":{
                           "type":"string"
                        },
                        "company":{
                           "type":"string"
                        },
                        "credentials":{
                           "type":"object"
                        },
                        "description":{
                           "type":"string"
                        },
                        "label":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "product_account_id":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a saas subscription.",
            "tags":[
               "saas/subscription"
            ]
         }
      },
      "/v2.0/saas/{product}/{uuid}":{
         "delete":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"product name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete a saas subscription.",
            "tags":[
               "saas/subscription"
            ]
         },
         "get":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"saas name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "account":{
                           "type":"string"
                        },
                        "created":{
                           "type":"string"
                        },
                        "credentials":{
                           "type":"object"
                        },
                        "description":{
                           "type":"string"
                        },
                        "label":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "product":{
                           "type":"string"
                        },
                        "product_account_id":{
                           "type":"string"
                        },
                        "updated":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get a saas subscription.",
            "tags":[
               "saas/subscription"
            ]
         },
         "put":{
            "consumes":[
               "application/json"
            ],
            "description":"  ",
            "parameters":[
               {
                  "description":"product name",
                  "enum":[
                     "microsoftpartnercenter",
                     "microsoft365"
                  ],
                  "in":"path",
                  "name":"product",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "description":"subscription uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"data",
                  "required":true,
                  "schema":{
                     "properties":{
                        "company":{
                           "type":"string"
                        },
                        "credentials":{
                           "type":"object"
                        },
                        "description":{
                           "type":"string"
                        },
                        "label":{
                           "type":"string"
                        },
                        "product_account_id":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Update a saas subscription.",
            "tags":[
               "saas/subscription"
            ]
         }
      },
      "/v2.0/scheduler/":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "schedulers":{
                           "items":{
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all scheduler.",
            "tags":[
               "scheduler"
            ]
         },
         "post":{
            "consumes":[
               "application/yaml"
            ],
            "parameters":[
               {
                  "content":"application/yaml",
                  "description":"UIC scheduler blueprint/template",
                  "in":"body",
                  "name":"body",
                  "required":true,
                  "schema":{
                     "description":"UIC scheduler blueprint/template"
                  },
                  "url":"https://www.useitcloud.com/"
               }
            ],
            "responses":{
               "202":{
                  "description":"Accepted",
                  "schema":{
                     "properties":{
                        "message":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Create a scheduler.",
            "tags":[
               "scheduler"
            ]
         }
      },
      "/v2.0/scheduler/history/{uuid}":{
         "get":{
            "parameters":[
               {
                  "description":"history uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get history by uuid.",
            "tags":[
               "scheduler"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"history uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"history action",
                  "enum":[
                     "get_head",
                     "get_item",
                     "get_all"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "content":"application/json",
                  "description":"data",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "properties":{
                        "item":{
                           "type":"int"
                        },
                        "tz":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action on scheduler history ",
            "tags":[
               "scheduler"
            ]
         }
      },
      "/v2.0/scheduler/hook/{uuid}":{
         "get":{
            "parameters":[
               {
                  "description":"hook uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get scheduler hook by uuid.",
            "tags":[
               "scheduler"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"hook uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"hook action",
                  "enum":[
                     "enable",
                     "disable"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action on scheduler hook",
            "tags":[
               "scheduler"
            ]
         }
      },
      "/v2.0/scheduler/job/{uuid}":{
         "get":{
            "parameters":[
               {
                  "description":"job uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get scheduler job by uuid.",
            "tags":[
               "scheduler"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"job uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"job action",
                  "enum":[
                     "schedule",
                     "reset",
                     "break",
                     "view_trigger",
                     "next_trigger"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"action parameters",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action scheduler jobs by uuid",
            "tags":[
               "scheduler"
            ]
         }
      },
      "/v2.0/scheduler/{uuid}":{
         "delete":{
            "parameters":[
               {
                  "description":"scheduler uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "action":{
                           "type":"string"
                        },
                        "message":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete scheduler by uuid.",
            "tags":[
               "scheduler"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"scheduler uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List scheduler by uuid.",
            "tags":[
               "scheduler"
            ]
         }
      },
      "/v2.0/server/{uuid}":{
         "get":{
            "parameters":[
               {
                  "description":"server uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "firewallpolicy":{
                           "items":{
                              "properties":{
                                 "action":{
                                    "type":"string"
                                 },
                                 "direction":{
                                    "type":"string"
                                 },
                                 "from":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "range":{
                                    "type":"string"
                                 },
                                 "to":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "keypair":{
                           "type":"string"
                        },
                        "login":{
                           "type":"string"
                        },
                        "name":{
                           "type":"string"
                        },
                        "network":{
                           "type":"string"
                        },
                        "option":{
                           "type":"object"
                        },
                        "os":{
                           "type":"string"
                        },
                        "password":{
                           "type":"string"
                        },
                        "privateip":{
                           "type":"string"
                        },
                        "provider":{
                           "type":"string"
                        },
                        "publicip":{
                           "type":"string"
                        },
                        "status":{
                           "type":"string"
                        },
                        "subnet":{
                           "type":"object"
                        },
                        "tag":{
                           "type":"object"
                        },
                        "tenant":{
                           "type":"string"
                        },
                        "type":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        },
                        "volume":{
                           "type":"object"
                        },
                        "zone":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get server by uuid",
            "tags":[
               "server"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"server uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"server actions",
                  "enum":[
                     "stop",
                     "resume",
                     "restart",
                     "destroy",
                     "refresh",
                     "get_keypair",
                     "add_public_ip",
                     "remove_public_ip",
                     "resize",
                     "volume",
                     "invoke",
                     "runcommand",
                     "snapshot"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "content":"application/json",
                  "description":"action parameters",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "type":"object"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action server by uuid",
            "tags":[
               "server"
            ]
         }
      },
      "/v2.0/service/":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "services":{
                           "items":{
                              "properties":{
                                 "servers":{
                                    "items":{
                                       "properties":{
                                          "name":{
                                             "type":"string"
                                          },
                                          "status":{
                                             "type":"string"
                                          },
                                          "uuid":{
                                             "type":"string"
                                          }
                                       },
                                       "type":"object"
                                    },
                                    "type":"array"
                                 },
                                 "status":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"List all services",
            "tags":[
               "service"
            ]
         }
      },
      "/v2.0/service/{uuid}":{
         "delete":{
            "parameters":[
               {
                  "description":"service uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "content":"application/json",
                  "description":"extra data",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "properties":{
                        "with_vm":{
                           "type":"string [yes|no]"
                        }
                     },
                     "type":"object"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "action":{
                           "type":"string"
                        },
                        "result":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Delete service by uuid",
            "tags":[
               "service"
            ]
         },
         "get":{
            "parameters":[
               {
                  "description":"service uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "servers":{
                           "items":{
                              "properties":{
                                 "message":{
                                    "type":"string"
                                 },
                                 "name":{
                                    "type":"string"
                                 },
                                 "status":{
                                    "type":"string"
                                 },
                                 "uuid":{
                                    "type":"string"
                                 }
                              },
                              "type":"object"
                           },
                           "type":"array"
                        },
                        "status":{
                           "type":"string"
                        },
                        "uuid":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get service by uuid",
            "tags":[
               "service"
            ]
         },
         "post":{
            "parameters":[
               {
                  "description":"service uuid",
                  "in":"path",
                  "name":"uuid",
                  "required":true,
                  "type":"string"
               },
               {
                  "description":"service action",
                  "enum":[
                     "stop",
                     "resume",
                     "restart",
                     "destroy",
                     "refresh",
                     "snapshot",
                     "get_scheduler"
                  ],
                  "in":"query",
                  "name":"action",
                  "required":true,
                  "type":"string"
               },
               {
                  "content":"application/json",
                  "description":"action parameters",
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "type":"object"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Post action service by uuid",
            "tags":[
               "service"
            ]
         }
      },
      "/v2.0/token/":{
         "get":{
            "responses":{
               "200":{
                  "description":"Successful response",
                  "schema":{
                     "properties":{
                        "expires":{
                           "type":"string"
                        },
                        "token":{
                           "type":"string"
                        },
                        "ttl":{
                           "type":"string"
                        }
                     },
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "404":{
                  "description":"Not Found"
               },
               "406":{
                  "description":"Not Acceptable"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            },
            "security":[
               {
                  "basicAuth":[
                     
                  ]
               },
               {
                  "token":[
                     
                  ]
               }
            ],
            "summary":"Get token.",
            "tags":[
               "token"
            ]
         }
      }
   },
   "securityDefinitions":{
      "basicAuth":{
         "type":"basic"
      },
      "token":{
         "description":"Please insert your Token:",
         "in":"header",
         "name":"Authorize",
         "type":"apiKey"
      }
   },
   "swagger":"2.0"
}